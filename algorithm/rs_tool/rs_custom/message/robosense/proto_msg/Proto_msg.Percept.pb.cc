// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Proto_msg.Percept.proto

#include "Proto_msg.Percept.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Proto_5fmsg_2ePercept_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Proto_5fmsg_2ePercept_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Curve;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Proto_5fmsg_2ePercept_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Point2f;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Proto_5fmsg_2ePercept_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Point3d;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Proto_5fmsg_2ePercept_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Point3f;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Proto_5fmsg_2ePercept_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PointXYZITL;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Proto_5fmsg_2ePercept_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Pose;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Proto_5fmsg_2ePercept_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vector1f;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Proto_5fmsg_2ePercept_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VectorFreeSpaceType;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Proto_5fmsg_2ePercept_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VectorObjType;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Proto_5fmsg_2ePercept_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CoreInfos;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Proto_5fmsg_2ePercept_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_EndPoints;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Proto_5fmsg_2ePercept_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Vector3f;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Proto_5fmsg_2ePercept_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Lane;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Proto_5fmsg_2ePercept_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_RoadEdge;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Proto_5fmsg_2ePercept_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_SupplementInfos;
}  // namespace protobuf_Proto_5fmsg_2ePercept_2eproto
namespace robosense {
namespace perception {
namespace Proto_msg {
class Point2fDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point2f>
      _instance;
} _Point2f_default_instance_;
class Point3fDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point3f>
      _instance;
} _Point3f_default_instance_;
class Point3dDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point3d>
      _instance;
} _Point3d_default_instance_;
class PointXYZITLDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PointXYZITL>
      _instance;
} _PointXYZITL_default_instance_;
class Vector1iDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vector1i>
      _instance;
} _Vector1i_default_instance_;
class Vector1fDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vector1f>
      _instance;
} _Vector1f_default_instance_;
class Vector3fDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vector3f>
      _instance;
} _Vector3f_default_instance_;
class VectorObjTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VectorObjType>
      _instance;
} _VectorObjType_default_instance_;
class PoseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pose>
      _instance;
} _Pose_default_instance_;
class PoseInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PoseInfo>
      _instance;
} _PoseInfo_default_instance_;
class VectorFreeSpaceTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VectorFreeSpaceType>
      _instance;
} _VectorFreeSpaceType_default_instance_;
class FreeSpacesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FreeSpaces>
      _instance;
} _FreeSpaces_default_instance_;
class SupplementInfosDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SupplementInfos>
      _instance;
} _SupplementInfos_default_instance_;
class CoreInfosDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CoreInfos>
      _instance;
} _CoreInfos_default_instance_;
class ObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Object>
      _instance;
} _Object_default_instance_;
class EndPointsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EndPoints>
      _instance;
} _EndPoints_default_instance_;
class CurveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Curve>
      _instance;
} _Curve_default_instance_;
class LaneDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Lane>
      _instance;
} _Lane_default_instance_;
class LanesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Lanes>
      _instance;
} _Lanes_default_instance_;
class RoadEdgeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoadEdge>
      _instance;
} _RoadEdge_default_instance_;
class RoadEdgesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoadEdges>
      _instance;
} _RoadEdges_default_instance_;
class PointCloudDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PointCloud>
      _instance;
} _PointCloud_default_instance_;
class MsgHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgHeader>
      _instance;
} _MsgHeader_default_instance_;
}  // namespace Proto_msg
}  // namespace perception
}  // namespace robosense
namespace protobuf_Proto_5fmsg_2ePercept_2eproto {
static void InitDefaultsPoint2f() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::perception::Proto_msg::_Point2f_default_instance_;
    new (ptr) ::robosense::perception::Proto_msg::Point2f();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::perception::Proto_msg::Point2f::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Point2f =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPoint2f}, {}};

static void InitDefaultsPoint3f() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::perception::Proto_msg::_Point3f_default_instance_;
    new (ptr) ::robosense::perception::Proto_msg::Point3f();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::perception::Proto_msg::Point3f::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Point3f =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPoint3f}, {}};

static void InitDefaultsPoint3d() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::perception::Proto_msg::_Point3d_default_instance_;
    new (ptr) ::robosense::perception::Proto_msg::Point3d();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::perception::Proto_msg::Point3d::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Point3d =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPoint3d}, {}};

static void InitDefaultsPointXYZITL() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::perception::Proto_msg::_PointXYZITL_default_instance_;
    new (ptr) ::robosense::perception::Proto_msg::PointXYZITL();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::perception::Proto_msg::PointXYZITL::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PointXYZITL =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPointXYZITL}, {}};

static void InitDefaultsVector1i() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::perception::Proto_msg::_Vector1i_default_instance_;
    new (ptr) ::robosense::perception::Proto_msg::Vector1i();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::perception::Proto_msg::Vector1i::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vector1i =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVector1i}, {}};

static void InitDefaultsVector1f() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::perception::Proto_msg::_Vector1f_default_instance_;
    new (ptr) ::robosense::perception::Proto_msg::Vector1f();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::perception::Proto_msg::Vector1f::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vector1f =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVector1f}, {}};

static void InitDefaultsVector3f() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::perception::Proto_msg::_Vector3f_default_instance_;
    new (ptr) ::robosense::perception::Proto_msg::Vector3f();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::perception::Proto_msg::Vector3f::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Vector3f =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVector3f}, {
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Point3f.base,}};

static void InitDefaultsVectorObjType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::perception::Proto_msg::_VectorObjType_default_instance_;
    new (ptr) ::robosense::perception::Proto_msg::VectorObjType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::perception::Proto_msg::VectorObjType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VectorObjType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVectorObjType}, {}};

static void InitDefaultsPose() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::perception::Proto_msg::_Pose_default_instance_;
    new (ptr) ::robosense::perception::Proto_msg::Pose();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::perception::Proto_msg::Pose::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Pose =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPose}, {}};

static void InitDefaultsPoseInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::perception::Proto_msg::_PoseInfo_default_instance_;
    new (ptr) ::robosense::perception::Proto_msg::PoseInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::perception::Proto_msg::PoseInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PoseInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPoseInfo}, {
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Pose.base,}};

static void InitDefaultsVectorFreeSpaceType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::perception::Proto_msg::_VectorFreeSpaceType_default_instance_;
    new (ptr) ::robosense::perception::Proto_msg::VectorFreeSpaceType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::perception::Proto_msg::VectorFreeSpaceType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VectorFreeSpaceType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVectorFreeSpaceType}, {}};

static void InitDefaultsFreeSpaces() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::perception::Proto_msg::_FreeSpaces_default_instance_;
    new (ptr) ::robosense::perception::Proto_msg::FreeSpaces();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::perception::Proto_msg::FreeSpaces::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_FreeSpaces =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsFreeSpaces}, {
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Vector3f.base,
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Vector1f.base,
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_VectorFreeSpaceType.base,}};

static void InitDefaultsSupplementInfos() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::perception::Proto_msg::_SupplementInfos_default_instance_;
    new (ptr) ::robosense::perception::Proto_msg::SupplementInfos();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::perception::Proto_msg::SupplementInfos::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_SupplementInfos =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsSupplementInfos}, {
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Vector3f.base,
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Vector1f.base,
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Point3f.base,
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_VectorObjType.base,
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Point3d.base,}};

static void InitDefaultsCoreInfos() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::perception::Proto_msg::_CoreInfos_default_instance_;
    new (ptr) ::robosense::perception::Proto_msg::CoreInfos();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::perception::Proto_msg::CoreInfos::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CoreInfos =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCoreInfos}, {
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Point3f.base,}};

static void InitDefaultsObject() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::perception::Proto_msg::_Object_default_instance_;
    new (ptr) ::robosense::perception::Proto_msg::Object();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::perception::Proto_msg::Object::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Object =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsObject}, {
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_CoreInfos.base,
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_SupplementInfos.base,}};

static void InitDefaultsEndPoints() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::perception::Proto_msg::_EndPoints_default_instance_;
    new (ptr) ::robosense::perception::Proto_msg::EndPoints();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::perception::Proto_msg::EndPoints::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EndPoints =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEndPoints}, {
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Point2f.base,}};

static void InitDefaultsCurve() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::perception::Proto_msg::_Curve_default_instance_;
    new (ptr) ::robosense::perception::Proto_msg::Curve();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::perception::Proto_msg::Curve::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Curve =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCurve}, {}};

static void InitDefaultsLane() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::perception::Proto_msg::_Lane_default_instance_;
    new (ptr) ::robosense::perception::Proto_msg::Lane();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::perception::Proto_msg::Lane::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Lane =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLane}, {
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_EndPoints.base,
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Curve.base,}};

static void InitDefaultsLanes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::perception::Proto_msg::_Lanes_default_instance_;
    new (ptr) ::robosense::perception::Proto_msg::Lanes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::perception::Proto_msg::Lanes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Lanes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLanes}, {
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Lane.base,}};

static void InitDefaultsRoadEdge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::perception::Proto_msg::_RoadEdge_default_instance_;
    new (ptr) ::robosense::perception::Proto_msg::RoadEdge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::perception::Proto_msg::RoadEdge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RoadEdge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRoadEdge}, {
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_EndPoints.base,
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Curve.base,}};

static void InitDefaultsRoadEdges() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::perception::Proto_msg::_RoadEdges_default_instance_;
    new (ptr) ::robosense::perception::Proto_msg::RoadEdges();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::perception::Proto_msg::RoadEdges::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RoadEdges =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRoadEdges}, {
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_RoadEdge.base,}};

static void InitDefaultsPointCloud() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::perception::Proto_msg::_PointCloud_default_instance_;
    new (ptr) ::robosense::perception::Proto_msg::PointCloud();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::perception::Proto_msg::PointCloud::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PointCloud =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPointCloud}, {
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_PointXYZITL.base,}};

static void InitDefaultsMsgHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::perception::Proto_msg::_MsgHeader_default_instance_;
    new (ptr) ::robosense::perception::Proto_msg::MsgHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::perception::Proto_msg::MsgHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgHeader =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgHeader}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Point2f.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Point3f.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Point3d.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PointXYZITL.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vector1i.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vector1f.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vector3f.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VectorObjType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Pose.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PoseInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VectorFreeSpaceType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FreeSpaces.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SupplementInfos.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CoreInfos.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Object.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EndPoints.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Curve.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Lane.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Lanes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RoadEdge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RoadEdges.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PointCloud.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgHeader.base);
}

::google::protobuf::Metadata file_level_metadata[23];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[11];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Point2f, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Point2f, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Point2f, data_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Point3f, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Point3f, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Point3f, data_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Point3d, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Point3d, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Point3d, data_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::PointXYZITL, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::PointXYZITL, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::PointXYZITL, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::PointXYZITL, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::PointXYZITL, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::PointXYZITL, intensity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::PointXYZITL, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::PointXYZITL, label_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Vector1i, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Vector1i, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Vector1i, data_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Vector1f, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Vector1f, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Vector1f, data_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Vector3f, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Vector3f, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Vector3f, data_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::VectorObjType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::VectorObjType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::VectorObjType, data_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Pose, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Pose, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Pose, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Pose, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Pose, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Pose, roll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Pose, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Pose, yaw_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::PoseInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::PoseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::PoseInfo, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::PoseInfo, pose_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::VectorFreeSpaceType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::VectorFreeSpaceType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::VectorFreeSpaceType, data_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::FreeSpaces, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::FreeSpaces, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::FreeSpaces, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::FreeSpaces, fs_pts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::FreeSpaces, fs_confidence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::FreeSpaces, fs_types_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::SupplementInfos, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::SupplementInfos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::SupplementInfos, unique_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::SupplementInfos, polygon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::SupplementInfos, left_point_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::SupplementInfos, right_point_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::SupplementInfos, latent_types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::SupplementInfos, size_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::SupplementInfos, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::SupplementInfos, in_roi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::SupplementInfos, tracking_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::SupplementInfos, geo_center_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::SupplementInfos, geo_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::SupplementInfos, trajectory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::SupplementInfos, history_velocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::SupplementInfos, history_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::SupplementInfos, gps_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::SupplementInfos, gps_info_),
  8,
  0,
  9,
  10,
  1,
  11,
  15,
  12,
  13,
  2,
  3,
  4,
  5,
  6,
  14,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, priority_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, existence_confidence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, center_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, center_cov_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, size_cov_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, direction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, direction_cov_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, type_confidence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, attention_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, motion_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, lane_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, tracker_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, velocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, velocity_cov_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, acceleration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, acceleration_cov_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, angle_velocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, angle_velocity_cov_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, angle_acceleration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, angle_acceleration_cov_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, anchor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::CoreInfos, nearest_point_),
  12,
  13,
  14,
  0,
  1,
  2,
  3,
  4,
  5,
  15,
  16,
  17,
  18,
  25,
  20,
  19,
  6,
  7,
  8,
  9,
  21,
  22,
  23,
  24,
  10,
  11,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Object, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Object, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Object, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Object, core_infos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Object, supplement_infos_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::EndPoints, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::EndPoints, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::EndPoints, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::EndPoints, end_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Curve, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Curve, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Curve, x_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Curve, x_end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Curve, a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Curve, b_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Curve, c_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Curve, d_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Lane, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Lane, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Lane, end_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Lane, measure_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Lane, lane_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Lane, curve_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Lane, confidence_),
  0,
  2,
  4,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Lanes, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Lanes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Lanes, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::Lanes, lanes_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::RoadEdge, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::RoadEdge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::RoadEdge, end_points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::RoadEdge, measure_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::RoadEdge, roadedge_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::RoadEdge, curve_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::RoadEdge, confidence_),
  0,
  2,
  4,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::RoadEdges, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::RoadEdges, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::RoadEdges, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::RoadEdges, roadedges_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::PointCloud, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::PointCloud, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::PointCloud, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::PointCloud, point_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::MsgHeader, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::MsgHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::MsgHeader, msgtimestamps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::MsgHeader, msgversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::MsgHeader, msgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::MsgHeader, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::MsgHeader, msgframeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::MsgHeader, msgtotalcnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::MsgHeader, msglocalcnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::MsgHeader, msglocallen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::MsgHeader, msgindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::MsgHeader, msgtotalfragment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::MsgHeader, msgfragmentindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::MsgHeader, msgres0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::perception::Proto_msg::MsgHeader, msgcheck16_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::robosense::perception::Proto_msg::Point2f)},
  { 7, 13, sizeof(::robosense::perception::Proto_msg::Point3f)},
  { 14, 20, sizeof(::robosense::perception::Proto_msg::Point3d)},
  { 21, 32, sizeof(::robosense::perception::Proto_msg::PointXYZITL)},
  { 38, 44, sizeof(::robosense::perception::Proto_msg::Vector1i)},
  { 45, 51, sizeof(::robosense::perception::Proto_msg::Vector1f)},
  { 52, 58, sizeof(::robosense::perception::Proto_msg::Vector3f)},
  { 59, 65, sizeof(::robosense::perception::Proto_msg::VectorObjType)},
  { 66, 77, sizeof(::robosense::perception::Proto_msg::Pose)},
  { 83, 90, sizeof(::robosense::perception::Proto_msg::PoseInfo)},
  { 92, 98, sizeof(::robosense::perception::Proto_msg::VectorFreeSpaceType)},
  { 99, 108, sizeof(::robosense::perception::Proto_msg::FreeSpaces)},
  { 112, 133, sizeof(::robosense::perception::Proto_msg::SupplementInfos)},
  { 149, 180, sizeof(::robosense::perception::Proto_msg::CoreInfos)},
  { 206, 214, sizeof(::robosense::perception::Proto_msg::Object)},
  { 217, 224, sizeof(::robosense::perception::Proto_msg::EndPoints)},
  { 226, 237, sizeof(::robosense::perception::Proto_msg::Curve)},
  { 243, 253, sizeof(::robosense::perception::Proto_msg::Lane)},
  { 258, 265, sizeof(::robosense::perception::Proto_msg::Lanes)},
  { 267, 277, sizeof(::robosense::perception::Proto_msg::RoadEdge)},
  { 282, 289, sizeof(::robosense::perception::Proto_msg::RoadEdges)},
  { 291, 298, sizeof(::robosense::perception::Proto_msg::PointCloud)},
  { 300, 318, sizeof(::robosense::perception::Proto_msg::MsgHeader)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::perception::Proto_msg::_Point2f_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::perception::Proto_msg::_Point3f_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::perception::Proto_msg::_Point3d_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::perception::Proto_msg::_PointXYZITL_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::perception::Proto_msg::_Vector1i_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::perception::Proto_msg::_Vector1f_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::perception::Proto_msg::_Vector3f_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::perception::Proto_msg::_VectorObjType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::perception::Proto_msg::_Pose_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::perception::Proto_msg::_PoseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::perception::Proto_msg::_VectorFreeSpaceType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::perception::Proto_msg::_FreeSpaces_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::perception::Proto_msg::_SupplementInfos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::perception::Proto_msg::_CoreInfos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::perception::Proto_msg::_Object_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::perception::Proto_msg::_EndPoints_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::perception::Proto_msg::_Curve_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::perception::Proto_msg::_Lane_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::perception::Proto_msg::_Lanes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::perception::Proto_msg::_RoadEdge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::perception::Proto_msg::_RoadEdges_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::perception::Proto_msg::_PointCloud_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::perception::Proto_msg::_MsgHeader_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Proto_msg.Percept.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 23);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027Proto_msg.Percept.proto\022\036robosense.per"
      "ception.Proto_msg\"\027\n\007Point2f\022\014\n\004data\030\001 \003"
      "(\002\"\027\n\007Point3f\022\014\n\004data\030\001 \003(\002\"\027\n\007Point3d\022\014"
      "\n\004data\030\001 \003(\001\"c\n\013PointXYZITL\022\t\n\001x\030\001 \001(\002\022\t"
      "\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\022\021\n\tintensity\030\004 \001(\r\022"
      "\021\n\ttimestamp\030\005 \001(\001\022\r\n\005label\030\006 \001(\005\"\030\n\010Vec"
      "tor1i\022\014\n\004data\030\001 \003(\005\"\030\n\010Vector1f\022\014\n\004data\030"
      "\001 \003(\002\"A\n\010Vector3f\0225\n\004data\030\001 \003(\0132\'.robose"
      "nse.perception.Proto_msg.Point3f\"I\n\rVect"
      "orObjType\0228\n\004data\030\001 \003(\0162*.robosense.perc"
      "eption.Proto_msg.ObjectType\"Q\n\004Pose\022\t\n\001x"
      "\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\022\014\n\004roll\030\004 \001"
      "(\002\022\r\n\005pitch\030\005 \001(\002\022\013\n\003yaw\030\006 \001(\002\"Q\n\010PoseIn"
      "fo\022\021\n\ttimestamp\030\001 \001(\001\0222\n\004pose\030\002 \001(\0132$.ro"
      "bosense.perception.Proto_msg.Pose\"R\n\023Vec"
      "torFreeSpaceType\022;\n\004data\030\001 \003(\0162-.robosen"
      "se.perception.Proto_msg.FreeSpaceType\"\341\001"
      "\n\nFreeSpaces\022\021\n\ttimestamp\030\001 \001(\001\0228\n\006fs_pt"
      "s\030\002 \001(\0132(.robosense.perception.Proto_msg"
      ".Vector3f\022\?\n\rfs_confidence\030\003 \001(\0132(.robos"
      "ense.perception.Proto_msg.Vector1f\022E\n\010fs"
      "_types\030\004 \001(\01323.robosense.perception.Prot"
      "o_msg.VectorFreeSpaceType\"\325\006\n\017Supplement"
      "Infos\022\021\n\tunique_id\030\001 \001(\005\0229\n\007polygon\030\002 \001("
      "\0132(.robosense.perception.Proto_msg.Vecto"
      "r3f\022\030\n\020left_point_index\030\003 \001(\005\022\031\n\021right_p"
      "oint_index\030\004 \001(\005\022>\n\014latent_types\030\005 \001(\0132("
      ".robosense.perception.Proto_msg.Vector1f"
      "\022;\n\tsize_type\030\006 \001(\0162(.robosense.percepti"
      "on.Proto_msg.SizeType\0226\n\004mode\030\007 \001(\0162(.ro"
      "bosense.perception.Proto_msg.ModeType\022\016\n"
      "\006in_roi\030\010 \001(\010\022E\n\016tracking_state\030\t \001(\0162-."
      "robosense.perception.Proto_msg.TrackingS"
      "tate\022;\n\ngeo_center\030\n \001(\0132\'.robosense.per"
      "ception.Proto_msg.Point3f\0229\n\010geo_size\030\013 "
      "\001(\0132\'.robosense.perception.Proto_msg.Poi"
      "nt3f\022<\n\ntrajectory\030\014 \001(\0132(.robosense.per"
      "ception.Proto_msg.Vector3f\022B\n\020history_ve"
      "locity\030\r \001(\0132(.robosense.perception.Prot"
      "o_msg.Vector3f\022C\n\014history_type\030\016 \001(\0132-.r"
      "obosense.perception.Proto_msg.VectorObjT"
      "ype\0229\n\010gps_mode\030\017 \001(\0162\'.robosense.percep"
      "tion.Proto_msg.GpsType\0229\n\010gps_info\030\020 \001(\013"
      "2\'.robosense.perception.Proto_msg.Point3"
      "d\"\327\t\n\tCoreInfos\022\021\n\ttimestamp\030\001 \001(\001\022\023\n\013pr"
      "iority_id\030\002 \001(\005\022\034\n\024existence_confidence\030"
      "\003 \001(\002\0227\n\006center\030\004 \001(\0132\'.robosense.percep"
      "tion.Proto_msg.Point3f\022;\n\ncenter_cov\030\005 \001"
      "(\0132\'.robosense.perception.Proto_msg.Poin"
      "t3f\0225\n\004size\030\006 \001(\0132\'.robosense.perception"
      ".Proto_msg.Point3f\0229\n\010size_cov\030\007 \001(\0132\'.r"
      "obosense.perception.Proto_msg.Point3f\022:\n"
      "\tdirection\030\010 \001(\0132\'.robosense.perception."
      "Proto_msg.Point3f\022>\n\rdirection_cov\030\t \001(\013"
      "2\'.robosense.perception.Proto_msg.Point3"
      "f\0228\n\004type\030\n \001(\0162*.robosense.perception.P"
      "roto_msg.ObjectType\022\027\n\017type_confidence\030\013"
      " \001(\002\022E\n\016attention_type\030\014 \001(\0162-.robosense"
      ".perception.Proto_msg.AttentionType\022@\n\014m"
      "otion_state\030\r \001(\0162*.robosense.perception"
      ".Proto_msg.MotionType\022>\n\010lane_pos\030\016 \001(\0162"
      ",.robosense.perception.Proto_msg.LanePos"
      "ition\022\022\n\ntracker_id\030\017 \001(\005\022\013\n\003age\030\020 \001(\001\0229"
      "\n\010velocity\030\021 \001(\0132\'.robosense.perception."
      "Proto_msg.Point3f\022=\n\014velocity_cov\030\022 \001(\0132"
      "\'.robosense.perception.Proto_msg.Point3f"
      "\022=\n\014acceleration\030\023 \001(\0132\'.robosense.perce"
      "ption.Proto_msg.Point3f\022A\n\020acceleration_"
      "cov\030\024 \001(\0132\'.robosense.perception.Proto_m"
      "sg.Point3f\022\026\n\016angle_velocity\030\025 \001(\002\022\032\n\022an"
      "gle_velocity_cov\030\026 \001(\002\022\032\n\022angle_accelera"
      "tion\030\027 \001(\002\022\036\n\026angle_acceleration_cov\030\030 \001"
      "(\002\0227\n\006anchor\030\031 \001(\0132\'.robosense.perceptio"
      "n.Proto_msg.Point3f\022>\n\rnearest_point\030\032 \001"
      "(\0132\'.robosense.perception.Proto_msg.Poin"
      "t3f\"\245\001\n\006Object\022\021\n\ttimestamp\030\001 \001(\001\022=\n\ncor"
      "e_infos\030\002 \001(\0132).robosense.perception.Pro"
      "to_msg.CoreInfos\022I\n\020supplement_infos\030\003 \001"
      "(\0132/.robosense.perception.Proto_msg.Supp"
      "lementInfos\"y\n\tEndPoints\0226\n\005start\030\001 \001(\0132"
      "\'.robosense.perception.Proto_msg.Point2f"
      "\0224\n\003end\030\002 \001(\0132\'.robosense.perception.Pro"
      "to_msg.Point2f\"S\n\005Curve\022\017\n\007x_start\030\001 \001(\002"
      "\022\r\n\005x_end\030\002 \001(\002\022\t\n\001a\030\003 \001(\002\022\t\n\001b\030\004 \001(\002\022\t\n"
      "\001c\030\005 \001(\002\022\t\n\001d\030\006 \001(\002\"\224\002\n\004Lane\022<\n\tend_poin"
      "t\030\001 \001(\0132).robosense.perception.Proto_msg"
      ".EndPoints\022E\n\016measure_status\030\002 \001(\0162-.rob"
      "osense.perception.Proto_msg.MeasureStatu"
      "s\022=\n\007lane_id\030\003 \001(\0162,.robosense.perceptio"
      "n.Proto_msg.LanePosition\0224\n\005curve\030\004 \001(\0132"
      "%.robosense.perception.Proto_msg.Curve\022\022"
      "\n\nconfidence\030\005 \001(\002\"O\n\005Lanes\022\021\n\ttimestamp"
      "\030\001 \001(\001\0223\n\005lanes\030\002 \003(\0132$.robosense.percep"
      "tion.Proto_msg.Lane\"\241\002\n\010RoadEdge\022=\n\nend_"
      "points\030\001 \001(\0132).robosense.perception.Prot"
      "o_msg.EndPoints\022E\n\016measure_status\030\002 \001(\0162"
      "-.robosense.perception.Proto_msg.Measure"
      "Status\022E\n\013roadedge_id\030\003 \001(\01620.robosense."
      "perception.Proto_msg.RoadedgePosition\0224\n"
      "\005curve\030\004 \001(\0132%.robosense.perception.Prot"
      "o_msg.Curve\022\022\n\nconfidence\030\005 \001(\002\"[\n\tRoadE"
      "dges\022\021\n\ttimestamp\030\001 \001(\001\022;\n\troadedges\030\002 \003"
      "(\0132(.robosense.perception.Proto_msg.Road"
      "Edge\"[\n\nPointCloud\022\021\n\ttimestamp\030\001 \001(\001\022:\n"
      "\005point\030\002 \003(\0132+.robosense.perception.Prot"
      "o_msg.PointXYZITL\"\227\002\n\tMsgHeader\022\025\n\rmsgTi"
      "mestamps\030\001 \001(\001\022\022\n\nmsgVersion\030\002 \001(\r\022\017\n\007ms"
      "gType\030\003 \001(\r\022\020\n\010deviceId\030\004 \001(\r\022\022\n\nmsgFram"
      "eId\030\005 \001(\r\022\023\n\013msgTotalCnt\030\006 \001(\r\022\023\n\013msgLoc"
      "alCnt\030\007 \001(\r\022\023\n\013msgLocalLen\030\010 \001(\r\022\020\n\010msgI"
      "ndex\030\t \001(\r\022\030\n\020msgTotalFragment\030\n \001(\r\022\030\n\020"
      "msgFragmentIndex\030\013 \001(\r\022\017\n\007msgRes0\030\014 \001(\r\022"
      "\022\n\nmsgCheck16\030\r \001(\r*\256\001\n\nObjectType\022\022\n\016OB"
      "JECT_UNKNOWN\020\000\022\016\n\nOBJECT_PED\020\001\022\016\n\nOBJECT"
      "_BIC\020\002\022\016\n\nOBJECT_CAR\020\003\022\024\n\020OBJECT_TRUCK_B"
      "US\020\004\022\030\n\024OBJECT_ULTRA_VEHICLE\020\005\022\017\n\013OBJECT"
      "_CONE\020\006\022\033\n\027OBJECT_MAX_OBJ_TYPE_NUM\020\007*\177\n\n"
      "MotionType\022\022\n\016MOTION_UNKNOWN\020\000\022\021\n\rMOTION"
      "_MOVING\020\001\022\022\n\016MOTION_MOVABLE\020\002\022\025\n\021MOTION_"
      "STATIONARY\020\003\022\037\n\033MOTION_MAX_MOTION_STATE_"
      "NUM\020\004*W\n\010SizeType\022\016\n\nSIZE_SMALL\020\000\022\017\n\013SIZ"
      "E_MEDIUM\020\001\022\016\n\nSIZE_LARGE\020\002\022\032\n\026SIZE_MAX_S"
      "IZE_TYPE_NUM\020\003*:\n\010ModeType\022\014\n\010MODE_BSD\020\001"
      "\022\016\n\nMODE_FOCUS\020\002\022\020\n\014MODE_PREDICT\020\003*Z\n\rTr"
      "ackingState\022\021\n\rTRACK_UNKNOWN\020\000\022\016\n\nTRACK_"
      "INIT\020\001\022\020\n\014TRACK_STABLE\020\002\022\024\n\020TRACK_PREDIC"
      "TION\020\003*<\n\rAttentionType\022\022\n\016ATTENTION_NON"
      "E\020\000\022\027\n\023ATTENTION_ATTENTION\020\001*<\n\007GpsType\022"
      "\016\n\nGPS_CENTER\020\000\022\020\n\014GPS_CENTROID\020\001\022\017\n\013GPS"
      "_NEAREST\020\002*H\n\rFreeSpaceType\022\023\n\017FREE_STAT"
      "IONARY\020\000\022\020\n\014FREE_DYNAMIC\020\001\022\020\n\014FREE_UNKNO"
      "WN\020\002*L\n\020RoadedgePosition\022\r\n\tROAD_LEFT\020\001\022"
      "\020\n\014ROAD_UNKNOWN\020\000\022\027\n\nROAD_RIGHT\020\377\377\377\377\377\377\377\377"
      "\377\001*\217\003\n\014LanePosition\022\020\n\014LANE_UNKNOWN\020\007\022\023\n"
      "\017LANE_LEFT_SIXTH\020\006\022\023\n\017LANE_LEFT_FIFTH\020\005\022"
      "\024\n\020LANE_LEFT_FOURTH\020\004\022\023\n\017LANE_LEFT_THIRD"
      "\020\003\022\026\n\022LANE_LEFT_ADJACENT\020\002\022\021\n\rLANE_LEFT_"
      "EGO\020\001\022\021\n\rLANE_EGO_LANE\020\000\022\033\n\016LANE_RIGHT_E"
      "GO\020\377\377\377\377\377\377\377\377\377\001\022 \n\023LANE_RIGHT_ADJACENT\020\376\377\377"
      "\377\377\377\377\377\377\001\022\035\n\020LANE_RIGHT_THIRD\020\375\377\377\377\377\377\377\377\377\001\022\036"
      "\n\021LANE_RIGHT_FOURTH\020\374\377\377\377\377\377\377\377\377\001\022\035\n\020LANE_R"
      "IGHT_FIFTH\020\373\377\377\377\377\377\377\377\377\001\022\035\n\020LANE_RIGHT_SIXT"
      "H\020\372\377\377\377\377\377\377\377\377\001\022\036\n\021LANE_OFF_DRIVABLE\020\371\377\377\377\377\377"
      "\377\377\377\001*8\n\rMeasureStatus\022\022\n\016ROAD_DETECTION\020"
      "\000\022\023\n\017ROAD_PREDICTION\020\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5782);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Proto_msg.Percept.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Proto_5fmsg_2ePercept_2eproto
namespace robosense {
namespace perception {
namespace Proto_msg {
const ::google::protobuf::EnumDescriptor* ObjectType_descriptor() {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_enum_descriptors[0];
}
bool ObjectType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MotionType_descriptor() {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_enum_descriptors[1];
}
bool MotionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SizeType_descriptor() {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_enum_descriptors[2];
}
bool SizeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ModeType_descriptor() {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_enum_descriptors[3];
}
bool ModeType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TrackingState_descriptor() {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_enum_descriptors[4];
}
bool TrackingState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AttentionType_descriptor() {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_enum_descriptors[5];
}
bool AttentionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GpsType_descriptor() {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_enum_descriptors[6];
}
bool GpsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FreeSpaceType_descriptor() {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_enum_descriptors[7];
}
bool FreeSpaceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RoadedgePosition_descriptor() {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_enum_descriptors[8];
}
bool RoadedgePosition_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LanePosition_descriptor() {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_enum_descriptors[9];
}
bool LanePosition_IsValid(int value) {
  switch (value) {
    case -7:
    case -6:
    case -5:
    case -4:
    case -3:
    case -2:
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MeasureStatus_descriptor() {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_enum_descriptors[10];
}
bool MeasureStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Point2f::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point2f::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point2f::Point2f()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Point2f.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.perception.Proto_msg.Point2f)
}
Point2f::Point2f(const Point2f& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:robosense.perception.Proto_msg.Point2f)
}

void Point2f::SharedCtor() {
}

Point2f::~Point2f() {
  // @@protoc_insertion_point(destructor:robosense.perception.Proto_msg.Point2f)
  SharedDtor();
}

void Point2f::SharedDtor() {
}

void Point2f::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Point2f::descriptor() {
  ::protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point2f& Point2f::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Point2f.base);
  return *internal_default_instance();
}


void Point2f::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.perception.Proto_msg.Point2f)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Point2f::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.perception.Proto_msg.Point2f)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 13u, input, this->mutable_data())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_data())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.perception.Proto_msg.Point2f)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.perception.Proto_msg.Point2f)
  return false;
#undef DO_
}

void Point2f::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.perception.Proto_msg.Point2f)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float data = 1;
  for (int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      1, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.perception.Proto_msg.Point2f)
}

::google::protobuf::uint8* Point2f::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.perception.Proto_msg.Point2f)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float data = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(1, this->data_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.perception.Proto_msg.Point2f)
  return target;
}

size_t Point2f::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.perception.Proto_msg.Point2f)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated float data = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->data_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->data_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Point2f::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.perception.Proto_msg.Point2f)
  GOOGLE_DCHECK_NE(&from, this);
  const Point2f* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point2f>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.perception.Proto_msg.Point2f)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.perception.Proto_msg.Point2f)
    MergeFrom(*source);
  }
}

void Point2f::MergeFrom(const Point2f& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.perception.Proto_msg.Point2f)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void Point2f::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.perception.Proto_msg.Point2f)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point2f::CopyFrom(const Point2f& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.perception.Proto_msg.Point2f)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point2f::IsInitialized() const {
  return true;
}

void Point2f::Swap(Point2f* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point2f::InternalSwap(Point2f* other) {
  using std::swap;
  data_.InternalSwap(&other->data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Point2f::GetMetadata() const {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Point3f::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point3f::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point3f::Point3f()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Point3f.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.perception.Proto_msg.Point3f)
}
Point3f::Point3f(const Point3f& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:robosense.perception.Proto_msg.Point3f)
}

void Point3f::SharedCtor() {
}

Point3f::~Point3f() {
  // @@protoc_insertion_point(destructor:robosense.perception.Proto_msg.Point3f)
  SharedDtor();
}

void Point3f::SharedDtor() {
}

void Point3f::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Point3f::descriptor() {
  ::protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point3f& Point3f::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Point3f.base);
  return *internal_default_instance();
}


void Point3f::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.perception.Proto_msg.Point3f)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Point3f::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.perception.Proto_msg.Point3f)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 13u, input, this->mutable_data())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_data())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.perception.Proto_msg.Point3f)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.perception.Proto_msg.Point3f)
  return false;
#undef DO_
}

void Point3f::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.perception.Proto_msg.Point3f)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float data = 1;
  for (int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      1, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.perception.Proto_msg.Point3f)
}

::google::protobuf::uint8* Point3f::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.perception.Proto_msg.Point3f)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float data = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(1, this->data_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.perception.Proto_msg.Point3f)
  return target;
}

size_t Point3f::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.perception.Proto_msg.Point3f)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated float data = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->data_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->data_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Point3f::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.perception.Proto_msg.Point3f)
  GOOGLE_DCHECK_NE(&from, this);
  const Point3f* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point3f>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.perception.Proto_msg.Point3f)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.perception.Proto_msg.Point3f)
    MergeFrom(*source);
  }
}

void Point3f::MergeFrom(const Point3f& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.perception.Proto_msg.Point3f)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void Point3f::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.perception.Proto_msg.Point3f)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point3f::CopyFrom(const Point3f& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.perception.Proto_msg.Point3f)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point3f::IsInitialized() const {
  return true;
}

void Point3f::Swap(Point3f* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point3f::InternalSwap(Point3f* other) {
  using std::swap;
  data_.InternalSwap(&other->data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Point3f::GetMetadata() const {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Point3d::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point3d::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point3d::Point3d()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Point3d.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.perception.Proto_msg.Point3d)
}
Point3d::Point3d(const Point3d& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:robosense.perception.Proto_msg.Point3d)
}

void Point3d::SharedCtor() {
}

Point3d::~Point3d() {
  // @@protoc_insertion_point(destructor:robosense.perception.Proto_msg.Point3d)
  SharedDtor();
}

void Point3d::SharedDtor() {
}

void Point3d::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Point3d::descriptor() {
  ::protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point3d& Point3d::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Point3d.base);
  return *internal_default_instance();
}


void Point3d::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.perception.Proto_msg.Point3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Point3d::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.perception.Proto_msg.Point3d)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9u, input, this->mutable_data())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_data())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.perception.Proto_msg.Point3d)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.perception.Proto_msg.Point3d)
  return false;
#undef DO_
}

void Point3d::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.perception.Proto_msg.Point3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double data = 1;
  for (int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.perception.Proto_msg.Point3d)
}

::google::protobuf::uint8* Point3d::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.perception.Proto_msg.Point3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double data = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(1, this->data_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.perception.Proto_msg.Point3d)
  return target;
}

size_t Point3d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.perception.Proto_msg.Point3d)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated double data = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->data_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->data_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Point3d::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.perception.Proto_msg.Point3d)
  GOOGLE_DCHECK_NE(&from, this);
  const Point3d* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point3d>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.perception.Proto_msg.Point3d)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.perception.Proto_msg.Point3d)
    MergeFrom(*source);
  }
}

void Point3d::MergeFrom(const Point3d& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.perception.Proto_msg.Point3d)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void Point3d::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.perception.Proto_msg.Point3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point3d::CopyFrom(const Point3d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.perception.Proto_msg.Point3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point3d::IsInitialized() const {
  return true;
}

void Point3d::Swap(Point3d* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point3d::InternalSwap(Point3d* other) {
  using std::swap;
  data_.InternalSwap(&other->data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Point3d::GetMetadata() const {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PointXYZITL::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PointXYZITL::kXFieldNumber;
const int PointXYZITL::kYFieldNumber;
const int PointXYZITL::kZFieldNumber;
const int PointXYZITL::kIntensityFieldNumber;
const int PointXYZITL::kTimestampFieldNumber;
const int PointXYZITL::kLabelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PointXYZITL::PointXYZITL()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_PointXYZITL.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.perception.Proto_msg.PointXYZITL)
}
PointXYZITL::PointXYZITL(const PointXYZITL& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&label_) -
    reinterpret_cast<char*>(&x_)) + sizeof(label_));
  // @@protoc_insertion_point(copy_constructor:robosense.perception.Proto_msg.PointXYZITL)
}

void PointXYZITL::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&label_) -
      reinterpret_cast<char*>(&x_)) + sizeof(label_));
}

PointXYZITL::~PointXYZITL() {
  // @@protoc_insertion_point(destructor:robosense.perception.Proto_msg.PointXYZITL)
  SharedDtor();
}

void PointXYZITL::SharedDtor() {
}

void PointXYZITL::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PointXYZITL::descriptor() {
  ::protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PointXYZITL& PointXYZITL::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_PointXYZITL.base);
  return *internal_default_instance();
}


void PointXYZITL::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.perception.Proto_msg.PointXYZITL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&label_) -
        reinterpret_cast<char*>(&x_)) + sizeof(label_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PointXYZITL::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.perception.Proto_msg.PointXYZITL)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 intensity = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_intensity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &intensity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 label = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_label();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &label_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.perception.Proto_msg.PointXYZITL)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.perception.Proto_msg.PointXYZITL)
  return false;
#undef DO_
}

void PointXYZITL::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.perception.Proto_msg.PointXYZITL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // optional float y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // optional float z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // optional uint32 intensity = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->intensity(), output);
  }

  // optional double timestamp = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->timestamp(), output);
  }

  // optional int32 label = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->label(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.perception.Proto_msg.PointXYZITL)
}

::google::protobuf::uint8* PointXYZITL::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.perception.Proto_msg.PointXYZITL)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // optional float y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // optional float z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // optional uint32 intensity = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->intensity(), target);
  }

  // optional double timestamp = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->timestamp(), target);
  }

  // optional int32 label = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->label(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.perception.Proto_msg.PointXYZITL)
  return target;
}

size_t PointXYZITL::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.perception.Proto_msg.PointXYZITL)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional float x = 1;
    if (has_x()) {
      total_size += 1 + 4;
    }

    // optional float y = 2;
    if (has_y()) {
      total_size += 1 + 4;
    }

    // optional float z = 3;
    if (has_z()) {
      total_size += 1 + 4;
    }

    // optional uint32 intensity = 4;
    if (has_intensity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->intensity());
    }

    // optional double timestamp = 5;
    if (has_timestamp()) {
      total_size += 1 + 8;
    }

    // optional int32 label = 6;
    if (has_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->label());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PointXYZITL::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.perception.Proto_msg.PointXYZITL)
  GOOGLE_DCHECK_NE(&from, this);
  const PointXYZITL* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PointXYZITL>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.perception.Proto_msg.PointXYZITL)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.perception.Proto_msg.PointXYZITL)
    MergeFrom(*source);
  }
}

void PointXYZITL::MergeFrom(const PointXYZITL& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.perception.Proto_msg.PointXYZITL)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    if (cached_has_bits & 0x00000008u) {
      intensity_ = from.intensity_;
    }
    if (cached_has_bits & 0x00000010u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000020u) {
      label_ = from.label_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PointXYZITL::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.perception.Proto_msg.PointXYZITL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PointXYZITL::CopyFrom(const PointXYZITL& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.perception.Proto_msg.PointXYZITL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PointXYZITL::IsInitialized() const {
  return true;
}

void PointXYZITL::Swap(PointXYZITL* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PointXYZITL::InternalSwap(PointXYZITL* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(intensity_, other->intensity_);
  swap(timestamp_, other->timestamp_);
  swap(label_, other->label_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PointXYZITL::GetMetadata() const {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vector1i::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector1i::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector1i::Vector1i()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Vector1i.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.perception.Proto_msg.Vector1i)
}
Vector1i::Vector1i(const Vector1i& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:robosense.perception.Proto_msg.Vector1i)
}

void Vector1i::SharedCtor() {
}

Vector1i::~Vector1i() {
  // @@protoc_insertion_point(destructor:robosense.perception.Proto_msg.Vector1i)
  SharedDtor();
}

void Vector1i::SharedDtor() {
}

void Vector1i::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vector1i::descriptor() {
  ::protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector1i& Vector1i::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Vector1i.base);
  return *internal_default_instance();
}


void Vector1i::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.perception.Proto_msg.Vector1i)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vector1i::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.perception.Proto_msg.Vector1i)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_data())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_data())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.perception.Proto_msg.Vector1i)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.perception.Proto_msg.Vector1i)
  return false;
#undef DO_
}

void Vector1i::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.perception.Proto_msg.Vector1i)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 data = 1;
  for (int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.perception.Proto_msg.Vector1i)
}

::google::protobuf::uint8* Vector1i::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.perception.Proto_msg.Vector1i)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 data = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->data_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.perception.Proto_msg.Vector1i)
  return target;
}

size_t Vector1i::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.perception.Proto_msg.Vector1i)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 data = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->data_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->data_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vector1i::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.perception.Proto_msg.Vector1i)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector1i* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vector1i>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.perception.Proto_msg.Vector1i)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.perception.Proto_msg.Vector1i)
    MergeFrom(*source);
  }
}

void Vector1i::MergeFrom(const Vector1i& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.perception.Proto_msg.Vector1i)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void Vector1i::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.perception.Proto_msg.Vector1i)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector1i::CopyFrom(const Vector1i& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.perception.Proto_msg.Vector1i)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector1i::IsInitialized() const {
  return true;
}

void Vector1i::Swap(Vector1i* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector1i::InternalSwap(Vector1i* other) {
  using std::swap;
  data_.InternalSwap(&other->data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vector1i::GetMetadata() const {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vector1f::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector1f::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector1f::Vector1f()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Vector1f.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.perception.Proto_msg.Vector1f)
}
Vector1f::Vector1f(const Vector1f& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:robosense.perception.Proto_msg.Vector1f)
}

void Vector1f::SharedCtor() {
}

Vector1f::~Vector1f() {
  // @@protoc_insertion_point(destructor:robosense.perception.Proto_msg.Vector1f)
  SharedDtor();
}

void Vector1f::SharedDtor() {
}

void Vector1f::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vector1f::descriptor() {
  ::protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector1f& Vector1f::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Vector1f.base);
  return *internal_default_instance();
}


void Vector1f::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.perception.Proto_msg.Vector1f)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vector1f::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.perception.Proto_msg.Vector1f)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 13u, input, this->mutable_data())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_data())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.perception.Proto_msg.Vector1f)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.perception.Proto_msg.Vector1f)
  return false;
#undef DO_
}

void Vector1f::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.perception.Proto_msg.Vector1f)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float data = 1;
  for (int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      1, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.perception.Proto_msg.Vector1f)
}

::google::protobuf::uint8* Vector1f::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.perception.Proto_msg.Vector1f)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float data = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(1, this->data_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.perception.Proto_msg.Vector1f)
  return target;
}

size_t Vector1f::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.perception.Proto_msg.Vector1f)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated float data = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->data_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->data_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vector1f::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.perception.Proto_msg.Vector1f)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector1f* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vector1f>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.perception.Proto_msg.Vector1f)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.perception.Proto_msg.Vector1f)
    MergeFrom(*source);
  }
}

void Vector1f::MergeFrom(const Vector1f& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.perception.Proto_msg.Vector1f)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void Vector1f::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.perception.Proto_msg.Vector1f)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector1f::CopyFrom(const Vector1f& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.perception.Proto_msg.Vector1f)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector1f::IsInitialized() const {
  return true;
}

void Vector1f::Swap(Vector1f* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector1f::InternalSwap(Vector1f* other) {
  using std::swap;
  data_.InternalSwap(&other->data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vector1f::GetMetadata() const {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vector3f::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector3f::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector3f::Vector3f()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Vector3f.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.perception.Proto_msg.Vector3f)
}
Vector3f::Vector3f(const Vector3f& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:robosense.perception.Proto_msg.Vector3f)
}

void Vector3f::SharedCtor() {
}

Vector3f::~Vector3f() {
  // @@protoc_insertion_point(destructor:robosense.perception.Proto_msg.Vector3f)
  SharedDtor();
}

void Vector3f::SharedDtor() {
}

void Vector3f::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vector3f::descriptor() {
  ::protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector3f& Vector3f::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Vector3f.base);
  return *internal_default_instance();
}


void Vector3f::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.perception.Proto_msg.Vector3f)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vector3f::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.perception.Proto_msg.Vector3f)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .robosense.perception.Proto_msg.Point3f data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.perception.Proto_msg.Vector3f)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.perception.Proto_msg.Vector3f)
  return false;
#undef DO_
}

void Vector3f::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.perception.Proto_msg.Vector3f)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .robosense.perception.Proto_msg.Point3f data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->data(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.perception.Proto_msg.Vector3f)
}

::google::protobuf::uint8* Vector3f::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.perception.Proto_msg.Vector3f)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .robosense.perception.Proto_msg.Point3f data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->data(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.perception.Proto_msg.Vector3f)
  return target;
}

size_t Vector3f::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.perception.Proto_msg.Vector3f)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .robosense.perception.Proto_msg.Point3f data = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vector3f::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.perception.Proto_msg.Vector3f)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector3f* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vector3f>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.perception.Proto_msg.Vector3f)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.perception.Proto_msg.Vector3f)
    MergeFrom(*source);
  }
}

void Vector3f::MergeFrom(const Vector3f& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.perception.Proto_msg.Vector3f)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void Vector3f::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.perception.Proto_msg.Vector3f)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector3f::CopyFrom(const Vector3f& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.perception.Proto_msg.Vector3f)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector3f::IsInitialized() const {
  return true;
}

void Vector3f::Swap(Vector3f* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector3f::InternalSwap(Vector3f* other) {
  using std::swap;
  CastToBase(&data_)->InternalSwap(CastToBase(&other->data_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vector3f::GetMetadata() const {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VectorObjType::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VectorObjType::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VectorObjType::VectorObjType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_VectorObjType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.perception.Proto_msg.VectorObjType)
}
VectorObjType::VectorObjType(const VectorObjType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:robosense.perception.Proto_msg.VectorObjType)
}

void VectorObjType::SharedCtor() {
}

VectorObjType::~VectorObjType() {
  // @@protoc_insertion_point(destructor:robosense.perception.Proto_msg.VectorObjType)
  SharedDtor();
}

void VectorObjType::SharedDtor() {
}

void VectorObjType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VectorObjType::descriptor() {
  ::protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VectorObjType& VectorObjType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_VectorObjType.base);
  return *internal_default_instance();
}


void VectorObjType::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.perception.Proto_msg.VectorObjType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VectorObjType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.perception.Proto_msg.VectorObjType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .robosense.perception.Proto_msg.ObjectType data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::robosense::perception::Proto_msg::ObjectType_IsValid(value)) {
            add_data(static_cast< ::robosense::perception::Proto_msg::ObjectType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 1,
                 ::robosense::perception::Proto_msg::ObjectType_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_data())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.perception.Proto_msg.VectorObjType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.perception.Proto_msg.VectorObjType)
  return false;
#undef DO_
}

void VectorObjType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.perception.Proto_msg.VectorObjType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .robosense.perception.Proto_msg.ObjectType data = 1;
  for (int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.perception.Proto_msg.VectorObjType)
}

::google::protobuf::uint8* VectorObjType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.perception.Proto_msg.VectorObjType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .robosense.perception.Proto_msg.ObjectType data = 1;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    1, this->data_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.perception.Proto_msg.VectorObjType)
  return target;
}

size_t VectorObjType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.perception.Proto_msg.VectorObjType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .robosense.perception.Proto_msg.ObjectType data = 1;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->data_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->data(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VectorObjType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.perception.Proto_msg.VectorObjType)
  GOOGLE_DCHECK_NE(&from, this);
  const VectorObjType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VectorObjType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.perception.Proto_msg.VectorObjType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.perception.Proto_msg.VectorObjType)
    MergeFrom(*source);
  }
}

void VectorObjType::MergeFrom(const VectorObjType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.perception.Proto_msg.VectorObjType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void VectorObjType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.perception.Proto_msg.VectorObjType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VectorObjType::CopyFrom(const VectorObjType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.perception.Proto_msg.VectorObjType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorObjType::IsInitialized() const {
  return true;
}

void VectorObjType::Swap(VectorObjType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VectorObjType::InternalSwap(VectorObjType* other) {
  using std::swap;
  data_.InternalSwap(&other->data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VectorObjType::GetMetadata() const {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Pose::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pose::kXFieldNumber;
const int Pose::kYFieldNumber;
const int Pose::kZFieldNumber;
const int Pose::kRollFieldNumber;
const int Pose::kPitchFieldNumber;
const int Pose::kYawFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pose::Pose()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Pose.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.perception.Proto_msg.Pose)
}
Pose::Pose(const Pose& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&yaw_) -
    reinterpret_cast<char*>(&x_)) + sizeof(yaw_));
  // @@protoc_insertion_point(copy_constructor:robosense.perception.Proto_msg.Pose)
}

void Pose::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yaw_) -
      reinterpret_cast<char*>(&x_)) + sizeof(yaw_));
}

Pose::~Pose() {
  // @@protoc_insertion_point(destructor:robosense.perception.Proto_msg.Pose)
  SharedDtor();
}

void Pose::SharedDtor() {
}

void Pose::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Pose::descriptor() {
  ::protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pose& Pose::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Pose.base);
  return *internal_default_instance();
}


void Pose::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.perception.Proto_msg.Pose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&yaw_) -
        reinterpret_cast<char*>(&x_)) + sizeof(yaw_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Pose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.perception.Proto_msg.Pose)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float roll = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_roll();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &roll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float pitch = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_pitch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float yaw = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_yaw();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &yaw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.perception.Proto_msg.Pose)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.perception.Proto_msg.Pose)
  return false;
#undef DO_
}

void Pose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.perception.Proto_msg.Pose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // optional float y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // optional float z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // optional float roll = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->roll(), output);
  }

  // optional float pitch = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->pitch(), output);
  }

  // optional float yaw = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->yaw(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.perception.Proto_msg.Pose)
}

::google::protobuf::uint8* Pose::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.perception.Proto_msg.Pose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // optional float y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // optional float z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // optional float roll = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->roll(), target);
  }

  // optional float pitch = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->pitch(), target);
  }

  // optional float yaw = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->yaw(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.perception.Proto_msg.Pose)
  return target;
}

size_t Pose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.perception.Proto_msg.Pose)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional float x = 1;
    if (has_x()) {
      total_size += 1 + 4;
    }

    // optional float y = 2;
    if (has_y()) {
      total_size += 1 + 4;
    }

    // optional float z = 3;
    if (has_z()) {
      total_size += 1 + 4;
    }

    // optional float roll = 4;
    if (has_roll()) {
      total_size += 1 + 4;
    }

    // optional float pitch = 5;
    if (has_pitch()) {
      total_size += 1 + 4;
    }

    // optional float yaw = 6;
    if (has_yaw()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pose::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.perception.Proto_msg.Pose)
  GOOGLE_DCHECK_NE(&from, this);
  const Pose* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pose>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.perception.Proto_msg.Pose)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.perception.Proto_msg.Pose)
    MergeFrom(*source);
  }
}

void Pose::MergeFrom(const Pose& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.perception.Proto_msg.Pose)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    if (cached_has_bits & 0x00000008u) {
      roll_ = from.roll_;
    }
    if (cached_has_bits & 0x00000010u) {
      pitch_ = from.pitch_;
    }
    if (cached_has_bits & 0x00000020u) {
      yaw_ = from.yaw_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Pose::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.perception.Proto_msg.Pose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pose::CopyFrom(const Pose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.perception.Proto_msg.Pose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pose::IsInitialized() const {
  return true;
}

void Pose::Swap(Pose* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pose::InternalSwap(Pose* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(roll_, other->roll_);
  swap(pitch_, other->pitch_);
  swap(yaw_, other->yaw_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Pose::GetMetadata() const {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PoseInfo::InitAsDefaultInstance() {
  ::robosense::perception::Proto_msg::_PoseInfo_default_instance_._instance.get_mutable()->pose_ = const_cast< ::robosense::perception::Proto_msg::Pose*>(
      ::robosense::perception::Proto_msg::Pose::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PoseInfo::kTimestampFieldNumber;
const int PoseInfo::kPoseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PoseInfo::PoseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_PoseInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.perception.Proto_msg.PoseInfo)
}
PoseInfo::PoseInfo(const PoseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pose()) {
    pose_ = new ::robosense::perception::Proto_msg::Pose(*from.pose_);
  } else {
    pose_ = NULL;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:robosense.perception.Proto_msg.PoseInfo)
}

void PoseInfo::SharedCtor() {
  ::memset(&pose_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&pose_)) + sizeof(timestamp_));
}

PoseInfo::~PoseInfo() {
  // @@protoc_insertion_point(destructor:robosense.perception.Proto_msg.PoseInfo)
  SharedDtor();
}

void PoseInfo::SharedDtor() {
  if (this != internal_default_instance()) delete pose_;
}

void PoseInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PoseInfo::descriptor() {
  ::protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PoseInfo& PoseInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_PoseInfo.base);
  return *internal_default_instance();
}


void PoseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.perception.Proto_msg.PoseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(pose_ != NULL);
    pose_->Clear();
  }
  timestamp_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PoseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.perception.Proto_msg.PoseInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Pose pose = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.perception.Proto_msg.PoseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.perception.Proto_msg.PoseInfo)
  return false;
#undef DO_
}

void PoseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.perception.Proto_msg.PoseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double timestamp = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // optional .robosense.perception.Proto_msg.Pose pose = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pose(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.perception.Proto_msg.PoseInfo)
}

::google::protobuf::uint8* PoseInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.perception.Proto_msg.PoseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double timestamp = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // optional .robosense.perception.Proto_msg.Pose pose = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pose(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.perception.Proto_msg.PoseInfo)
  return target;
}

size_t PoseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.perception.Proto_msg.PoseInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .robosense.perception.Proto_msg.Pose pose = 2;
    if (has_pose()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pose_);
    }

    // optional double timestamp = 1;
    if (has_timestamp()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PoseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.perception.Proto_msg.PoseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PoseInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PoseInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.perception.Proto_msg.PoseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.perception.Proto_msg.PoseInfo)
    MergeFrom(*source);
  }
}

void PoseInfo::MergeFrom(const PoseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.perception.Proto_msg.PoseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pose()->::robosense::perception::Proto_msg::Pose::MergeFrom(from.pose());
    }
    if (cached_has_bits & 0x00000002u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PoseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.perception.Proto_msg.PoseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PoseInfo::CopyFrom(const PoseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.perception.Proto_msg.PoseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PoseInfo::IsInitialized() const {
  return true;
}

void PoseInfo::Swap(PoseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PoseInfo::InternalSwap(PoseInfo* other) {
  using std::swap;
  swap(pose_, other->pose_);
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PoseInfo::GetMetadata() const {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VectorFreeSpaceType::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VectorFreeSpaceType::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VectorFreeSpaceType::VectorFreeSpaceType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_VectorFreeSpaceType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.perception.Proto_msg.VectorFreeSpaceType)
}
VectorFreeSpaceType::VectorFreeSpaceType(const VectorFreeSpaceType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:robosense.perception.Proto_msg.VectorFreeSpaceType)
}

void VectorFreeSpaceType::SharedCtor() {
}

VectorFreeSpaceType::~VectorFreeSpaceType() {
  // @@protoc_insertion_point(destructor:robosense.perception.Proto_msg.VectorFreeSpaceType)
  SharedDtor();
}

void VectorFreeSpaceType::SharedDtor() {
}

void VectorFreeSpaceType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VectorFreeSpaceType::descriptor() {
  ::protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VectorFreeSpaceType& VectorFreeSpaceType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_VectorFreeSpaceType.base);
  return *internal_default_instance();
}


void VectorFreeSpaceType::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.perception.Proto_msg.VectorFreeSpaceType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VectorFreeSpaceType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.perception.Proto_msg.VectorFreeSpaceType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .robosense.perception.Proto_msg.FreeSpaceType data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::robosense::perception::Proto_msg::FreeSpaceType_IsValid(value)) {
            add_data(static_cast< ::robosense::perception::Proto_msg::FreeSpaceType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 1,
                 ::robosense::perception::Proto_msg::FreeSpaceType_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_data())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.perception.Proto_msg.VectorFreeSpaceType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.perception.Proto_msg.VectorFreeSpaceType)
  return false;
#undef DO_
}

void VectorFreeSpaceType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.perception.Proto_msg.VectorFreeSpaceType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .robosense.perception.Proto_msg.FreeSpaceType data = 1;
  for (int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.perception.Proto_msg.VectorFreeSpaceType)
}

::google::protobuf::uint8* VectorFreeSpaceType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.perception.Proto_msg.VectorFreeSpaceType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .robosense.perception.Proto_msg.FreeSpaceType data = 1;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    1, this->data_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.perception.Proto_msg.VectorFreeSpaceType)
  return target;
}

size_t VectorFreeSpaceType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.perception.Proto_msg.VectorFreeSpaceType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .robosense.perception.Proto_msg.FreeSpaceType data = 1;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->data_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->data(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VectorFreeSpaceType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.perception.Proto_msg.VectorFreeSpaceType)
  GOOGLE_DCHECK_NE(&from, this);
  const VectorFreeSpaceType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VectorFreeSpaceType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.perception.Proto_msg.VectorFreeSpaceType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.perception.Proto_msg.VectorFreeSpaceType)
    MergeFrom(*source);
  }
}

void VectorFreeSpaceType::MergeFrom(const VectorFreeSpaceType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.perception.Proto_msg.VectorFreeSpaceType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void VectorFreeSpaceType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.perception.Proto_msg.VectorFreeSpaceType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VectorFreeSpaceType::CopyFrom(const VectorFreeSpaceType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.perception.Proto_msg.VectorFreeSpaceType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorFreeSpaceType::IsInitialized() const {
  return true;
}

void VectorFreeSpaceType::Swap(VectorFreeSpaceType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VectorFreeSpaceType::InternalSwap(VectorFreeSpaceType* other) {
  using std::swap;
  data_.InternalSwap(&other->data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VectorFreeSpaceType::GetMetadata() const {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FreeSpaces::InitAsDefaultInstance() {
  ::robosense::perception::Proto_msg::_FreeSpaces_default_instance_._instance.get_mutable()->fs_pts_ = const_cast< ::robosense::perception::Proto_msg::Vector3f*>(
      ::robosense::perception::Proto_msg::Vector3f::internal_default_instance());
  ::robosense::perception::Proto_msg::_FreeSpaces_default_instance_._instance.get_mutable()->fs_confidence_ = const_cast< ::robosense::perception::Proto_msg::Vector1f*>(
      ::robosense::perception::Proto_msg::Vector1f::internal_default_instance());
  ::robosense::perception::Proto_msg::_FreeSpaces_default_instance_._instance.get_mutable()->fs_types_ = const_cast< ::robosense::perception::Proto_msg::VectorFreeSpaceType*>(
      ::robosense::perception::Proto_msg::VectorFreeSpaceType::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FreeSpaces::kTimestampFieldNumber;
const int FreeSpaces::kFsPtsFieldNumber;
const int FreeSpaces::kFsConfidenceFieldNumber;
const int FreeSpaces::kFsTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FreeSpaces::FreeSpaces()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_FreeSpaces.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.perception.Proto_msg.FreeSpaces)
}
FreeSpaces::FreeSpaces(const FreeSpaces& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_fs_pts()) {
    fs_pts_ = new ::robosense::perception::Proto_msg::Vector3f(*from.fs_pts_);
  } else {
    fs_pts_ = NULL;
  }
  if (from.has_fs_confidence()) {
    fs_confidence_ = new ::robosense::perception::Proto_msg::Vector1f(*from.fs_confidence_);
  } else {
    fs_confidence_ = NULL;
  }
  if (from.has_fs_types()) {
    fs_types_ = new ::robosense::perception::Proto_msg::VectorFreeSpaceType(*from.fs_types_);
  } else {
    fs_types_ = NULL;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:robosense.perception.Proto_msg.FreeSpaces)
}

void FreeSpaces::SharedCtor() {
  ::memset(&fs_pts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&fs_pts_)) + sizeof(timestamp_));
}

FreeSpaces::~FreeSpaces() {
  // @@protoc_insertion_point(destructor:robosense.perception.Proto_msg.FreeSpaces)
  SharedDtor();
}

void FreeSpaces::SharedDtor() {
  if (this != internal_default_instance()) delete fs_pts_;
  if (this != internal_default_instance()) delete fs_confidence_;
  if (this != internal_default_instance()) delete fs_types_;
}

void FreeSpaces::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FreeSpaces::descriptor() {
  ::protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FreeSpaces& FreeSpaces::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_FreeSpaces.base);
  return *internal_default_instance();
}


void FreeSpaces::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.perception.Proto_msg.FreeSpaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(fs_pts_ != NULL);
      fs_pts_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(fs_confidence_ != NULL);
      fs_confidence_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(fs_types_ != NULL);
      fs_types_->Clear();
    }
  }
  timestamp_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FreeSpaces::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.perception.Proto_msg.FreeSpaces)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Vector3f fs_pts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fs_pts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Vector1f fs_confidence = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fs_confidence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.VectorFreeSpaceType fs_types = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fs_types()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.perception.Proto_msg.FreeSpaces)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.perception.Proto_msg.FreeSpaces)
  return false;
#undef DO_
}

void FreeSpaces::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.perception.Proto_msg.FreeSpaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double timestamp = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // optional .robosense.perception.Proto_msg.Vector3f fs_pts = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_fs_pts(), output);
  }

  // optional .robosense.perception.Proto_msg.Vector1f fs_confidence = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_fs_confidence(), output);
  }

  // optional .robosense.perception.Proto_msg.VectorFreeSpaceType fs_types = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_fs_types(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.perception.Proto_msg.FreeSpaces)
}

::google::protobuf::uint8* FreeSpaces::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.perception.Proto_msg.FreeSpaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double timestamp = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // optional .robosense.perception.Proto_msg.Vector3f fs_pts = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_fs_pts(), deterministic, target);
  }

  // optional .robosense.perception.Proto_msg.Vector1f fs_confidence = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_fs_confidence(), deterministic, target);
  }

  // optional .robosense.perception.Proto_msg.VectorFreeSpaceType fs_types = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_fs_types(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.perception.Proto_msg.FreeSpaces)
  return target;
}

size_t FreeSpaces::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.perception.Proto_msg.FreeSpaces)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .robosense.perception.Proto_msg.Vector3f fs_pts = 2;
    if (has_fs_pts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fs_pts_);
    }

    // optional .robosense.perception.Proto_msg.Vector1f fs_confidence = 3;
    if (has_fs_confidence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fs_confidence_);
    }

    // optional .robosense.perception.Proto_msg.VectorFreeSpaceType fs_types = 4;
    if (has_fs_types()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fs_types_);
    }

    // optional double timestamp = 1;
    if (has_timestamp()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FreeSpaces::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.perception.Proto_msg.FreeSpaces)
  GOOGLE_DCHECK_NE(&from, this);
  const FreeSpaces* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FreeSpaces>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.perception.Proto_msg.FreeSpaces)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.perception.Proto_msg.FreeSpaces)
    MergeFrom(*source);
  }
}

void FreeSpaces::MergeFrom(const FreeSpaces& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.perception.Proto_msg.FreeSpaces)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_fs_pts()->::robosense::perception::Proto_msg::Vector3f::MergeFrom(from.fs_pts());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_fs_confidence()->::robosense::perception::Proto_msg::Vector1f::MergeFrom(from.fs_confidence());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_fs_types()->::robosense::perception::Proto_msg::VectorFreeSpaceType::MergeFrom(from.fs_types());
    }
    if (cached_has_bits & 0x00000008u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FreeSpaces::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.perception.Proto_msg.FreeSpaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FreeSpaces::CopyFrom(const FreeSpaces& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.perception.Proto_msg.FreeSpaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FreeSpaces::IsInitialized() const {
  return true;
}

void FreeSpaces::Swap(FreeSpaces* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FreeSpaces::InternalSwap(FreeSpaces* other) {
  using std::swap;
  swap(fs_pts_, other->fs_pts_);
  swap(fs_confidence_, other->fs_confidence_);
  swap(fs_types_, other->fs_types_);
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FreeSpaces::GetMetadata() const {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SupplementInfos::InitAsDefaultInstance() {
  ::robosense::perception::Proto_msg::_SupplementInfos_default_instance_._instance.get_mutable()->polygon_ = const_cast< ::robosense::perception::Proto_msg::Vector3f*>(
      ::robosense::perception::Proto_msg::Vector3f::internal_default_instance());
  ::robosense::perception::Proto_msg::_SupplementInfos_default_instance_._instance.get_mutable()->latent_types_ = const_cast< ::robosense::perception::Proto_msg::Vector1f*>(
      ::robosense::perception::Proto_msg::Vector1f::internal_default_instance());
  ::robosense::perception::Proto_msg::_SupplementInfos_default_instance_._instance.get_mutable()->geo_center_ = const_cast< ::robosense::perception::Proto_msg::Point3f*>(
      ::robosense::perception::Proto_msg::Point3f::internal_default_instance());
  ::robosense::perception::Proto_msg::_SupplementInfos_default_instance_._instance.get_mutable()->geo_size_ = const_cast< ::robosense::perception::Proto_msg::Point3f*>(
      ::robosense::perception::Proto_msg::Point3f::internal_default_instance());
  ::robosense::perception::Proto_msg::_SupplementInfos_default_instance_._instance.get_mutable()->trajectory_ = const_cast< ::robosense::perception::Proto_msg::Vector3f*>(
      ::robosense::perception::Proto_msg::Vector3f::internal_default_instance());
  ::robosense::perception::Proto_msg::_SupplementInfos_default_instance_._instance.get_mutable()->history_velocity_ = const_cast< ::robosense::perception::Proto_msg::Vector3f*>(
      ::robosense::perception::Proto_msg::Vector3f::internal_default_instance());
  ::robosense::perception::Proto_msg::_SupplementInfos_default_instance_._instance.get_mutable()->history_type_ = const_cast< ::robosense::perception::Proto_msg::VectorObjType*>(
      ::robosense::perception::Proto_msg::VectorObjType::internal_default_instance());
  ::robosense::perception::Proto_msg::_SupplementInfos_default_instance_._instance.get_mutable()->gps_info_ = const_cast< ::robosense::perception::Proto_msg::Point3d*>(
      ::robosense::perception::Proto_msg::Point3d::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SupplementInfos::kUniqueIdFieldNumber;
const int SupplementInfos::kPolygonFieldNumber;
const int SupplementInfos::kLeftPointIndexFieldNumber;
const int SupplementInfos::kRightPointIndexFieldNumber;
const int SupplementInfos::kLatentTypesFieldNumber;
const int SupplementInfos::kSizeTypeFieldNumber;
const int SupplementInfos::kModeFieldNumber;
const int SupplementInfos::kInRoiFieldNumber;
const int SupplementInfos::kTrackingStateFieldNumber;
const int SupplementInfos::kGeoCenterFieldNumber;
const int SupplementInfos::kGeoSizeFieldNumber;
const int SupplementInfos::kTrajectoryFieldNumber;
const int SupplementInfos::kHistoryVelocityFieldNumber;
const int SupplementInfos::kHistoryTypeFieldNumber;
const int SupplementInfos::kGpsModeFieldNumber;
const int SupplementInfos::kGpsInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SupplementInfos::SupplementInfos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_SupplementInfos.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.perception.Proto_msg.SupplementInfos)
}
SupplementInfos::SupplementInfos(const SupplementInfos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_polygon()) {
    polygon_ = new ::robosense::perception::Proto_msg::Vector3f(*from.polygon_);
  } else {
    polygon_ = NULL;
  }
  if (from.has_latent_types()) {
    latent_types_ = new ::robosense::perception::Proto_msg::Vector1f(*from.latent_types_);
  } else {
    latent_types_ = NULL;
  }
  if (from.has_geo_center()) {
    geo_center_ = new ::robosense::perception::Proto_msg::Point3f(*from.geo_center_);
  } else {
    geo_center_ = NULL;
  }
  if (from.has_geo_size()) {
    geo_size_ = new ::robosense::perception::Proto_msg::Point3f(*from.geo_size_);
  } else {
    geo_size_ = NULL;
  }
  if (from.has_trajectory()) {
    trajectory_ = new ::robosense::perception::Proto_msg::Vector3f(*from.trajectory_);
  } else {
    trajectory_ = NULL;
  }
  if (from.has_history_velocity()) {
    history_velocity_ = new ::robosense::perception::Proto_msg::Vector3f(*from.history_velocity_);
  } else {
    history_velocity_ = NULL;
  }
  if (from.has_history_type()) {
    history_type_ = new ::robosense::perception::Proto_msg::VectorObjType(*from.history_type_);
  } else {
    history_type_ = NULL;
  }
  if (from.has_gps_info()) {
    gps_info_ = new ::robosense::perception::Proto_msg::Point3d(*from.gps_info_);
  } else {
    gps_info_ = NULL;
  }
  ::memcpy(&unique_id_, &from.unique_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&mode_) -
    reinterpret_cast<char*>(&unique_id_)) + sizeof(mode_));
  // @@protoc_insertion_point(copy_constructor:robosense.perception.Proto_msg.SupplementInfos)
}

void SupplementInfos::SharedCtor() {
  ::memset(&polygon_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gps_mode_) -
      reinterpret_cast<char*>(&polygon_)) + sizeof(gps_mode_));
  mode_ = 1;
}

SupplementInfos::~SupplementInfos() {
  // @@protoc_insertion_point(destructor:robosense.perception.Proto_msg.SupplementInfos)
  SharedDtor();
}

void SupplementInfos::SharedDtor() {
  if (this != internal_default_instance()) delete polygon_;
  if (this != internal_default_instance()) delete latent_types_;
  if (this != internal_default_instance()) delete geo_center_;
  if (this != internal_default_instance()) delete geo_size_;
  if (this != internal_default_instance()) delete trajectory_;
  if (this != internal_default_instance()) delete history_velocity_;
  if (this != internal_default_instance()) delete history_type_;
  if (this != internal_default_instance()) delete gps_info_;
}

void SupplementInfos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SupplementInfos::descriptor() {
  ::protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SupplementInfos& SupplementInfos::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_SupplementInfos.base);
  return *internal_default_instance();
}


void SupplementInfos::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.perception.Proto_msg.SupplementInfos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(polygon_ != NULL);
      polygon_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(latent_types_ != NULL);
      latent_types_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(geo_center_ != NULL);
      geo_center_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(geo_size_ != NULL);
      geo_size_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(trajectory_ != NULL);
      trajectory_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(history_velocity_ != NULL);
      history_velocity_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(history_type_ != NULL);
      history_type_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(gps_info_ != NULL);
      gps_info_->Clear();
    }
  }
  if (cached_has_bits & 65280u) {
    ::memset(&unique_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&gps_mode_) -
        reinterpret_cast<char*>(&unique_id_)) + sizeof(gps_mode_));
    mode_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SupplementInfos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.perception.Proto_msg.SupplementInfos)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 unique_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_unique_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unique_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Vector3f polygon = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_polygon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 left_point_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_left_point_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_point_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 right_point_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_right_point_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &right_point_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Vector1f latent_types = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_latent_types()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.SizeType size_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::robosense::perception::Proto_msg::SizeType_IsValid(value)) {
            set_size_type(static_cast< ::robosense::perception::Proto_msg::SizeType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                6, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.ModeType mode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::robosense::perception::Proto_msg::ModeType_IsValid(value)) {
            set_mode(static_cast< ::robosense::perception::Proto_msg::ModeType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                7, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool in_roi = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_in_roi();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &in_roi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.TrackingState tracking_state = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::robosense::perception::Proto_msg::TrackingState_IsValid(value)) {
            set_tracking_state(static_cast< ::robosense::perception::Proto_msg::TrackingState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                9, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Point3f geo_center = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_geo_center()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Point3f geo_size = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_geo_size()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Vector3f trajectory = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_trajectory()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Vector3f history_velocity = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_history_velocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.VectorObjType history_type = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_history_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.GpsType gps_mode = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::robosense::perception::Proto_msg::GpsType_IsValid(value)) {
            set_gps_mode(static_cast< ::robosense::perception::Proto_msg::GpsType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                15, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Point3d gps_info = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gps_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.perception.Proto_msg.SupplementInfos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.perception.Proto_msg.SupplementInfos)
  return false;
#undef DO_
}

void SupplementInfos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.perception.Proto_msg.SupplementInfos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 unique_id = 1;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->unique_id(), output);
  }

  // optional .robosense.perception.Proto_msg.Vector3f polygon = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_polygon(), output);
  }

  // optional int32 left_point_index = 3;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->left_point_index(), output);
  }

  // optional int32 right_point_index = 4;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->right_point_index(), output);
  }

  // optional .robosense.perception.Proto_msg.Vector1f latent_types = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_latent_types(), output);
  }

  // optional .robosense.perception.Proto_msg.SizeType size_type = 6;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->size_type(), output);
  }

  // optional .robosense.perception.Proto_msg.ModeType mode = 7;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->mode(), output);
  }

  // optional bool in_roi = 8;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->in_roi(), output);
  }

  // optional .robosense.perception.Proto_msg.TrackingState tracking_state = 9;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->tracking_state(), output);
  }

  // optional .robosense.perception.Proto_msg.Point3f geo_center = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_geo_center(), output);
  }

  // optional .robosense.perception.Proto_msg.Point3f geo_size = 11;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_geo_size(), output);
  }

  // optional .robosense.perception.Proto_msg.Vector3f trajectory = 12;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_trajectory(), output);
  }

  // optional .robosense.perception.Proto_msg.Vector3f history_velocity = 13;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_history_velocity(), output);
  }

  // optional .robosense.perception.Proto_msg.VectorObjType history_type = 14;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_history_type(), output);
  }

  // optional .robosense.perception.Proto_msg.GpsType gps_mode = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->gps_mode(), output);
  }

  // optional .robosense.perception.Proto_msg.Point3d gps_info = 16;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_gps_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.perception.Proto_msg.SupplementInfos)
}

::google::protobuf::uint8* SupplementInfos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.perception.Proto_msg.SupplementInfos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 unique_id = 1;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->unique_id(), target);
  }

  // optional .robosense.perception.Proto_msg.Vector3f polygon = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_polygon(), deterministic, target);
  }

  // optional int32 left_point_index = 3;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->left_point_index(), target);
  }

  // optional int32 right_point_index = 4;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->right_point_index(), target);
  }

  // optional .robosense.perception.Proto_msg.Vector1f latent_types = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_latent_types(), deterministic, target);
  }

  // optional .robosense.perception.Proto_msg.SizeType size_type = 6;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->size_type(), target);
  }

  // optional .robosense.perception.Proto_msg.ModeType mode = 7;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->mode(), target);
  }

  // optional bool in_roi = 8;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->in_roi(), target);
  }

  // optional .robosense.perception.Proto_msg.TrackingState tracking_state = 9;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->tracking_state(), target);
  }

  // optional .robosense.perception.Proto_msg.Point3f geo_center = 10;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_geo_center(), deterministic, target);
  }

  // optional .robosense.perception.Proto_msg.Point3f geo_size = 11;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_geo_size(), deterministic, target);
  }

  // optional .robosense.perception.Proto_msg.Vector3f trajectory = 12;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_trajectory(), deterministic, target);
  }

  // optional .robosense.perception.Proto_msg.Vector3f history_velocity = 13;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_history_velocity(), deterministic, target);
  }

  // optional .robosense.perception.Proto_msg.VectorObjType history_type = 14;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_history_type(), deterministic, target);
  }

  // optional .robosense.perception.Proto_msg.GpsType gps_mode = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->gps_mode(), target);
  }

  // optional .robosense.perception.Proto_msg.Point3d gps_info = 16;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_gps_info(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.perception.Proto_msg.SupplementInfos)
  return target;
}

size_t SupplementInfos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.perception.Proto_msg.SupplementInfos)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .robosense.perception.Proto_msg.Vector3f polygon = 2;
    if (has_polygon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *polygon_);
    }

    // optional .robosense.perception.Proto_msg.Vector1f latent_types = 5;
    if (has_latent_types()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *latent_types_);
    }

    // optional .robosense.perception.Proto_msg.Point3f geo_center = 10;
    if (has_geo_center()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *geo_center_);
    }

    // optional .robosense.perception.Proto_msg.Point3f geo_size = 11;
    if (has_geo_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *geo_size_);
    }

    // optional .robosense.perception.Proto_msg.Vector3f trajectory = 12;
    if (has_trajectory()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *trajectory_);
    }

    // optional .robosense.perception.Proto_msg.Vector3f history_velocity = 13;
    if (has_history_velocity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *history_velocity_);
    }

    // optional .robosense.perception.Proto_msg.VectorObjType history_type = 14;
    if (has_history_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *history_type_);
    }

    // optional .robosense.perception.Proto_msg.Point3d gps_info = 16;
    if (has_gps_info()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *gps_info_);
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int32 unique_id = 1;
    if (has_unique_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unique_id());
    }

    // optional int32 left_point_index = 3;
    if (has_left_point_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_point_index());
    }

    // optional int32 right_point_index = 4;
    if (has_right_point_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->right_point_index());
    }

    // optional .robosense.perception.Proto_msg.SizeType size_type = 6;
    if (has_size_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->size_type());
    }

    // optional bool in_roi = 8;
    if (has_in_roi()) {
      total_size += 1 + 1;
    }

    // optional .robosense.perception.Proto_msg.TrackingState tracking_state = 9;
    if (has_tracking_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->tracking_state());
    }

    // optional .robosense.perception.Proto_msg.GpsType gps_mode = 15;
    if (has_gps_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->gps_mode());
    }

    // optional .robosense.perception.Proto_msg.ModeType mode = 7;
    if (has_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SupplementInfos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.perception.Proto_msg.SupplementInfos)
  GOOGLE_DCHECK_NE(&from, this);
  const SupplementInfos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SupplementInfos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.perception.Proto_msg.SupplementInfos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.perception.Proto_msg.SupplementInfos)
    MergeFrom(*source);
  }
}

void SupplementInfos::MergeFrom(const SupplementInfos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.perception.Proto_msg.SupplementInfos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_polygon()->::robosense::perception::Proto_msg::Vector3f::MergeFrom(from.polygon());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_latent_types()->::robosense::perception::Proto_msg::Vector1f::MergeFrom(from.latent_types());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_geo_center()->::robosense::perception::Proto_msg::Point3f::MergeFrom(from.geo_center());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_geo_size()->::robosense::perception::Proto_msg::Point3f::MergeFrom(from.geo_size());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_trajectory()->::robosense::perception::Proto_msg::Vector3f::MergeFrom(from.trajectory());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_history_velocity()->::robosense::perception::Proto_msg::Vector3f::MergeFrom(from.history_velocity());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_history_type()->::robosense::perception::Proto_msg::VectorObjType::MergeFrom(from.history_type());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_gps_info()->::robosense::perception::Proto_msg::Point3d::MergeFrom(from.gps_info());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      unique_id_ = from.unique_id_;
    }
    if (cached_has_bits & 0x00000200u) {
      left_point_index_ = from.left_point_index_;
    }
    if (cached_has_bits & 0x00000400u) {
      right_point_index_ = from.right_point_index_;
    }
    if (cached_has_bits & 0x00000800u) {
      size_type_ = from.size_type_;
    }
    if (cached_has_bits & 0x00001000u) {
      in_roi_ = from.in_roi_;
    }
    if (cached_has_bits & 0x00002000u) {
      tracking_state_ = from.tracking_state_;
    }
    if (cached_has_bits & 0x00004000u) {
      gps_mode_ = from.gps_mode_;
    }
    if (cached_has_bits & 0x00008000u) {
      mode_ = from.mode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SupplementInfos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.perception.Proto_msg.SupplementInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SupplementInfos::CopyFrom(const SupplementInfos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.perception.Proto_msg.SupplementInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SupplementInfos::IsInitialized() const {
  return true;
}

void SupplementInfos::Swap(SupplementInfos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SupplementInfos::InternalSwap(SupplementInfos* other) {
  using std::swap;
  swap(polygon_, other->polygon_);
  swap(latent_types_, other->latent_types_);
  swap(geo_center_, other->geo_center_);
  swap(geo_size_, other->geo_size_);
  swap(trajectory_, other->trajectory_);
  swap(history_velocity_, other->history_velocity_);
  swap(history_type_, other->history_type_);
  swap(gps_info_, other->gps_info_);
  swap(unique_id_, other->unique_id_);
  swap(left_point_index_, other->left_point_index_);
  swap(right_point_index_, other->right_point_index_);
  swap(size_type_, other->size_type_);
  swap(in_roi_, other->in_roi_);
  swap(tracking_state_, other->tracking_state_);
  swap(gps_mode_, other->gps_mode_);
  swap(mode_, other->mode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SupplementInfos::GetMetadata() const {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CoreInfos::InitAsDefaultInstance() {
  ::robosense::perception::Proto_msg::_CoreInfos_default_instance_._instance.get_mutable()->center_ = const_cast< ::robosense::perception::Proto_msg::Point3f*>(
      ::robosense::perception::Proto_msg::Point3f::internal_default_instance());
  ::robosense::perception::Proto_msg::_CoreInfos_default_instance_._instance.get_mutable()->center_cov_ = const_cast< ::robosense::perception::Proto_msg::Point3f*>(
      ::robosense::perception::Proto_msg::Point3f::internal_default_instance());
  ::robosense::perception::Proto_msg::_CoreInfos_default_instance_._instance.get_mutable()->size_ = const_cast< ::robosense::perception::Proto_msg::Point3f*>(
      ::robosense::perception::Proto_msg::Point3f::internal_default_instance());
  ::robosense::perception::Proto_msg::_CoreInfos_default_instance_._instance.get_mutable()->size_cov_ = const_cast< ::robosense::perception::Proto_msg::Point3f*>(
      ::robosense::perception::Proto_msg::Point3f::internal_default_instance());
  ::robosense::perception::Proto_msg::_CoreInfos_default_instance_._instance.get_mutable()->direction_ = const_cast< ::robosense::perception::Proto_msg::Point3f*>(
      ::robosense::perception::Proto_msg::Point3f::internal_default_instance());
  ::robosense::perception::Proto_msg::_CoreInfos_default_instance_._instance.get_mutable()->direction_cov_ = const_cast< ::robosense::perception::Proto_msg::Point3f*>(
      ::robosense::perception::Proto_msg::Point3f::internal_default_instance());
  ::robosense::perception::Proto_msg::_CoreInfos_default_instance_._instance.get_mutable()->velocity_ = const_cast< ::robosense::perception::Proto_msg::Point3f*>(
      ::robosense::perception::Proto_msg::Point3f::internal_default_instance());
  ::robosense::perception::Proto_msg::_CoreInfos_default_instance_._instance.get_mutable()->velocity_cov_ = const_cast< ::robosense::perception::Proto_msg::Point3f*>(
      ::robosense::perception::Proto_msg::Point3f::internal_default_instance());
  ::robosense::perception::Proto_msg::_CoreInfos_default_instance_._instance.get_mutable()->acceleration_ = const_cast< ::robosense::perception::Proto_msg::Point3f*>(
      ::robosense::perception::Proto_msg::Point3f::internal_default_instance());
  ::robosense::perception::Proto_msg::_CoreInfos_default_instance_._instance.get_mutable()->acceleration_cov_ = const_cast< ::robosense::perception::Proto_msg::Point3f*>(
      ::robosense::perception::Proto_msg::Point3f::internal_default_instance());
  ::robosense::perception::Proto_msg::_CoreInfos_default_instance_._instance.get_mutable()->anchor_ = const_cast< ::robosense::perception::Proto_msg::Point3f*>(
      ::robosense::perception::Proto_msg::Point3f::internal_default_instance());
  ::robosense::perception::Proto_msg::_CoreInfos_default_instance_._instance.get_mutable()->nearest_point_ = const_cast< ::robosense::perception::Proto_msg::Point3f*>(
      ::robosense::perception::Proto_msg::Point3f::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CoreInfos::kTimestampFieldNumber;
const int CoreInfos::kPriorityIdFieldNumber;
const int CoreInfos::kExistenceConfidenceFieldNumber;
const int CoreInfos::kCenterFieldNumber;
const int CoreInfos::kCenterCovFieldNumber;
const int CoreInfos::kSizeFieldNumber;
const int CoreInfos::kSizeCovFieldNumber;
const int CoreInfos::kDirectionFieldNumber;
const int CoreInfos::kDirectionCovFieldNumber;
const int CoreInfos::kTypeFieldNumber;
const int CoreInfos::kTypeConfidenceFieldNumber;
const int CoreInfos::kAttentionTypeFieldNumber;
const int CoreInfos::kMotionStateFieldNumber;
const int CoreInfos::kLanePosFieldNumber;
const int CoreInfos::kTrackerIdFieldNumber;
const int CoreInfos::kAgeFieldNumber;
const int CoreInfos::kVelocityFieldNumber;
const int CoreInfos::kVelocityCovFieldNumber;
const int CoreInfos::kAccelerationFieldNumber;
const int CoreInfos::kAccelerationCovFieldNumber;
const int CoreInfos::kAngleVelocityFieldNumber;
const int CoreInfos::kAngleVelocityCovFieldNumber;
const int CoreInfos::kAngleAccelerationFieldNumber;
const int CoreInfos::kAngleAccelerationCovFieldNumber;
const int CoreInfos::kAnchorFieldNumber;
const int CoreInfos::kNearestPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CoreInfos::CoreInfos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_CoreInfos.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.perception.Proto_msg.CoreInfos)
}
CoreInfos::CoreInfos(const CoreInfos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_center()) {
    center_ = new ::robosense::perception::Proto_msg::Point3f(*from.center_);
  } else {
    center_ = NULL;
  }
  if (from.has_center_cov()) {
    center_cov_ = new ::robosense::perception::Proto_msg::Point3f(*from.center_cov_);
  } else {
    center_cov_ = NULL;
  }
  if (from.has_size()) {
    size_ = new ::robosense::perception::Proto_msg::Point3f(*from.size_);
  } else {
    size_ = NULL;
  }
  if (from.has_size_cov()) {
    size_cov_ = new ::robosense::perception::Proto_msg::Point3f(*from.size_cov_);
  } else {
    size_cov_ = NULL;
  }
  if (from.has_direction()) {
    direction_ = new ::robosense::perception::Proto_msg::Point3f(*from.direction_);
  } else {
    direction_ = NULL;
  }
  if (from.has_direction_cov()) {
    direction_cov_ = new ::robosense::perception::Proto_msg::Point3f(*from.direction_cov_);
  } else {
    direction_cov_ = NULL;
  }
  if (from.has_velocity()) {
    velocity_ = new ::robosense::perception::Proto_msg::Point3f(*from.velocity_);
  } else {
    velocity_ = NULL;
  }
  if (from.has_velocity_cov()) {
    velocity_cov_ = new ::robosense::perception::Proto_msg::Point3f(*from.velocity_cov_);
  } else {
    velocity_cov_ = NULL;
  }
  if (from.has_acceleration()) {
    acceleration_ = new ::robosense::perception::Proto_msg::Point3f(*from.acceleration_);
  } else {
    acceleration_ = NULL;
  }
  if (from.has_acceleration_cov()) {
    acceleration_cov_ = new ::robosense::perception::Proto_msg::Point3f(*from.acceleration_cov_);
  } else {
    acceleration_cov_ = NULL;
  }
  if (from.has_anchor()) {
    anchor_ = new ::robosense::perception::Proto_msg::Point3f(*from.anchor_);
  } else {
    anchor_ = NULL;
  }
  if (from.has_nearest_point()) {
    nearest_point_ = new ::robosense::perception::Proto_msg::Point3f(*from.nearest_point_);
  } else {
    nearest_point_ = NULL;
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&lane_pos_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(lane_pos_));
  // @@protoc_insertion_point(copy_constructor:robosense.perception.Proto_msg.CoreInfos)
}

void CoreInfos::SharedCtor() {
  ::memset(&center_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angle_acceleration_cov_) -
      reinterpret_cast<char*>(&center_)) + sizeof(angle_acceleration_cov_));
  lane_pos_ = 7;
}

CoreInfos::~CoreInfos() {
  // @@protoc_insertion_point(destructor:robosense.perception.Proto_msg.CoreInfos)
  SharedDtor();
}

void CoreInfos::SharedDtor() {
  if (this != internal_default_instance()) delete center_;
  if (this != internal_default_instance()) delete center_cov_;
  if (this != internal_default_instance()) delete size_;
  if (this != internal_default_instance()) delete size_cov_;
  if (this != internal_default_instance()) delete direction_;
  if (this != internal_default_instance()) delete direction_cov_;
  if (this != internal_default_instance()) delete velocity_;
  if (this != internal_default_instance()) delete velocity_cov_;
  if (this != internal_default_instance()) delete acceleration_;
  if (this != internal_default_instance()) delete acceleration_cov_;
  if (this != internal_default_instance()) delete anchor_;
  if (this != internal_default_instance()) delete nearest_point_;
}

void CoreInfos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CoreInfos::descriptor() {
  ::protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CoreInfos& CoreInfos::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_CoreInfos.base);
  return *internal_default_instance();
}


void CoreInfos::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.perception.Proto_msg.CoreInfos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(center_ != NULL);
      center_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(center_cov_ != NULL);
      center_cov_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(size_ != NULL);
      size_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(size_cov_ != NULL);
      size_cov_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(direction_ != NULL);
      direction_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(direction_cov_ != NULL);
      direction_cov_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(velocity_ != NULL);
      velocity_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(velocity_cov_ != NULL);
      velocity_cov_->Clear();
    }
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(acceleration_ != NULL);
      acceleration_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(acceleration_cov_ != NULL);
      acceleration_cov_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(anchor_ != NULL);
      anchor_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(nearest_point_ != NULL);
      nearest_point_->Clear();
    }
  }
  if (cached_has_bits & 61440u) {
    ::memset(&timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&type_) -
        reinterpret_cast<char*>(&timestamp_)) + sizeof(type_));
  }
  if (cached_has_bits & 16711680u) {
    ::memset(&type_confidence_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&angle_acceleration_) -
        reinterpret_cast<char*>(&type_confidence_)) + sizeof(angle_acceleration_));
  }
  if (cached_has_bits & 50331648u) {
    angle_acceleration_cov_ = 0;
    lane_pos_ = 7;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CoreInfos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.perception.Proto_msg.CoreInfos)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 priority_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_priority_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &priority_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float existence_confidence = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_existence_confidence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &existence_confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Point3f center = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_center()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Point3f center_cov = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_center_cov()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Point3f size = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_size()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Point3f size_cov = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_size_cov()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Point3f direction = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_direction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Point3f direction_cov = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_direction_cov()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.ObjectType type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::robosense::perception::Proto_msg::ObjectType_IsValid(value)) {
            set_type(static_cast< ::robosense::perception::Proto_msg::ObjectType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                10, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float type_confidence = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {
          set_has_type_confidence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &type_confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.AttentionType attention_type = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::robosense::perception::Proto_msg::AttentionType_IsValid(value)) {
            set_attention_type(static_cast< ::robosense::perception::Proto_msg::AttentionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                12, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.MotionType motion_state = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::robosense::perception::Proto_msg::MotionType_IsValid(value)) {
            set_motion_state(static_cast< ::robosense::perception::Proto_msg::MotionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                13, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.LanePosition lane_pos = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::robosense::perception::Proto_msg::LanePosition_IsValid(value)) {
            set_lane_pos(static_cast< ::robosense::perception::Proto_msg::LanePosition >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                14, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tracker_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_tracker_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tracker_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double age = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(129u /* 129 & 0xFF */)) {
          set_has_age();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Point3f velocity = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_velocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Point3f velocity_cov = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_velocity_cov()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Point3f acceleration = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acceleration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Point3f acceleration_cov = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acceleration_cov()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float angle_velocity = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(173u /* 173 & 0xFF */)) {
          set_has_angle_velocity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_velocity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float angle_velocity_cov = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(181u /* 181 & 0xFF */)) {
          set_has_angle_velocity_cov();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_velocity_cov_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float angle_acceleration = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(189u /* 189 & 0xFF */)) {
          set_has_angle_acceleration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_acceleration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float angle_acceleration_cov = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(197u /* 197 & 0xFF */)) {
          set_has_angle_acceleration_cov();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_acceleration_cov_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Point3f anchor = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_anchor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Point3f nearest_point = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_nearest_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.perception.Proto_msg.CoreInfos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.perception.Proto_msg.CoreInfos)
  return false;
#undef DO_
}

void CoreInfos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.perception.Proto_msg.CoreInfos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double timestamp = 1;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // optional int32 priority_id = 2;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->priority_id(), output);
  }

  // optional float existence_confidence = 3;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->existence_confidence(), output);
  }

  // optional .robosense.perception.Proto_msg.Point3f center = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_center(), output);
  }

  // optional .robosense.perception.Proto_msg.Point3f center_cov = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_center_cov(), output);
  }

  // optional .robosense.perception.Proto_msg.Point3f size = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_size(), output);
  }

  // optional .robosense.perception.Proto_msg.Point3f size_cov = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_size_cov(), output);
  }

  // optional .robosense.perception.Proto_msg.Point3f direction = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_direction(), output);
  }

  // optional .robosense.perception.Proto_msg.Point3f direction_cov = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_direction_cov(), output);
  }

  // optional .robosense.perception.Proto_msg.ObjectType type = 10;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->type(), output);
  }

  // optional float type_confidence = 11;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->type_confidence(), output);
  }

  // optional .robosense.perception.Proto_msg.AttentionType attention_type = 12;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->attention_type(), output);
  }

  // optional .robosense.perception.Proto_msg.MotionType motion_state = 13;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->motion_state(), output);
  }

  // optional .robosense.perception.Proto_msg.LanePosition lane_pos = 14;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->lane_pos(), output);
  }

  // optional int32 tracker_id = 15;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->tracker_id(), output);
  }

  // optional double age = 16;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->age(), output);
  }

  // optional .robosense.perception.Proto_msg.Point3f velocity = 17;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_velocity(), output);
  }

  // optional .robosense.perception.Proto_msg.Point3f velocity_cov = 18;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_velocity_cov(), output);
  }

  // optional .robosense.perception.Proto_msg.Point3f acceleration = 19;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_acceleration(), output);
  }

  // optional .robosense.perception.Proto_msg.Point3f acceleration_cov = 20;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_acceleration_cov(), output);
  }

  // optional float angle_velocity = 21;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(21, this->angle_velocity(), output);
  }

  // optional float angle_velocity_cov = 22;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(22, this->angle_velocity_cov(), output);
  }

  // optional float angle_acceleration = 23;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(23, this->angle_acceleration(), output);
  }

  // optional float angle_acceleration_cov = 24;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(24, this->angle_acceleration_cov(), output);
  }

  // optional .robosense.perception.Proto_msg.Point3f anchor = 25;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->_internal_anchor(), output);
  }

  // optional .robosense.perception.Proto_msg.Point3f nearest_point = 26;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->_internal_nearest_point(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.perception.Proto_msg.CoreInfos)
}

::google::protobuf::uint8* CoreInfos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.perception.Proto_msg.CoreInfos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double timestamp = 1;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // optional int32 priority_id = 2;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->priority_id(), target);
  }

  // optional float existence_confidence = 3;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->existence_confidence(), target);
  }

  // optional .robosense.perception.Proto_msg.Point3f center = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_center(), deterministic, target);
  }

  // optional .robosense.perception.Proto_msg.Point3f center_cov = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_center_cov(), deterministic, target);
  }

  // optional .robosense.perception.Proto_msg.Point3f size = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_size(), deterministic, target);
  }

  // optional .robosense.perception.Proto_msg.Point3f size_cov = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_size_cov(), deterministic, target);
  }

  // optional .robosense.perception.Proto_msg.Point3f direction = 8;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_direction(), deterministic, target);
  }

  // optional .robosense.perception.Proto_msg.Point3f direction_cov = 9;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_direction_cov(), deterministic, target);
  }

  // optional .robosense.perception.Proto_msg.ObjectType type = 10;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->type(), target);
  }

  // optional float type_confidence = 11;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->type_confidence(), target);
  }

  // optional .robosense.perception.Proto_msg.AttentionType attention_type = 12;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->attention_type(), target);
  }

  // optional .robosense.perception.Proto_msg.MotionType motion_state = 13;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->motion_state(), target);
  }

  // optional .robosense.perception.Proto_msg.LanePosition lane_pos = 14;
  if (cached_has_bits & 0x02000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->lane_pos(), target);
  }

  // optional int32 tracker_id = 15;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->tracker_id(), target);
  }

  // optional double age = 16;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->age(), target);
  }

  // optional .robosense.perception.Proto_msg.Point3f velocity = 17;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_velocity(), deterministic, target);
  }

  // optional .robosense.perception.Proto_msg.Point3f velocity_cov = 18;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_velocity_cov(), deterministic, target);
  }

  // optional .robosense.perception.Proto_msg.Point3f acceleration = 19;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_acceleration(), deterministic, target);
  }

  // optional .robosense.perception.Proto_msg.Point3f acceleration_cov = 20;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_acceleration_cov(), deterministic, target);
  }

  // optional float angle_velocity = 21;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(21, this->angle_velocity(), target);
  }

  // optional float angle_velocity_cov = 22;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(22, this->angle_velocity_cov(), target);
  }

  // optional float angle_acceleration = 23;
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(23, this->angle_acceleration(), target);
  }

  // optional float angle_acceleration_cov = 24;
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(24, this->angle_acceleration_cov(), target);
  }

  // optional .robosense.perception.Proto_msg.Point3f anchor = 25;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->_internal_anchor(), deterministic, target);
  }

  // optional .robosense.perception.Proto_msg.Point3f nearest_point = 26;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->_internal_nearest_point(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.perception.Proto_msg.CoreInfos)
  return target;
}

size_t CoreInfos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.perception.Proto_msg.CoreInfos)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .robosense.perception.Proto_msg.Point3f center = 4;
    if (has_center()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *center_);
    }

    // optional .robosense.perception.Proto_msg.Point3f center_cov = 5;
    if (has_center_cov()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *center_cov_);
    }

    // optional .robosense.perception.Proto_msg.Point3f size = 6;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *size_);
    }

    // optional .robosense.perception.Proto_msg.Point3f size_cov = 7;
    if (has_size_cov()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *size_cov_);
    }

    // optional .robosense.perception.Proto_msg.Point3f direction = 8;
    if (has_direction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *direction_);
    }

    // optional .robosense.perception.Proto_msg.Point3f direction_cov = 9;
    if (has_direction_cov()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *direction_cov_);
    }

    // optional .robosense.perception.Proto_msg.Point3f velocity = 17;
    if (has_velocity()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *velocity_);
    }

    // optional .robosense.perception.Proto_msg.Point3f velocity_cov = 18;
    if (has_velocity_cov()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *velocity_cov_);
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .robosense.perception.Proto_msg.Point3f acceleration = 19;
    if (has_acceleration()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *acceleration_);
    }

    // optional .robosense.perception.Proto_msg.Point3f acceleration_cov = 20;
    if (has_acceleration_cov()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *acceleration_cov_);
    }

    // optional .robosense.perception.Proto_msg.Point3f anchor = 25;
    if (has_anchor()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *anchor_);
    }

    // optional .robosense.perception.Proto_msg.Point3f nearest_point = 26;
    if (has_nearest_point()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *nearest_point_);
    }

    // optional double timestamp = 1;
    if (has_timestamp()) {
      total_size += 1 + 8;
    }

    // optional int32 priority_id = 2;
    if (has_priority_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->priority_id());
    }

    // optional float existence_confidence = 3;
    if (has_existence_confidence()) {
      total_size += 1 + 4;
    }

    // optional .robosense.perception.Proto_msg.ObjectType type = 10;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional float type_confidence = 11;
    if (has_type_confidence()) {
      total_size += 1 + 4;
    }

    // optional .robosense.perception.Proto_msg.AttentionType attention_type = 12;
    if (has_attention_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->attention_type());
    }

    // optional .robosense.perception.Proto_msg.MotionType motion_state = 13;
    if (has_motion_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->motion_state());
    }

    // optional double age = 16;
    if (has_age()) {
      total_size += 2 + 8;
    }

    // optional int32 tracker_id = 15;
    if (has_tracker_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tracker_id());
    }

    // optional float angle_velocity = 21;
    if (has_angle_velocity()) {
      total_size += 2 + 4;
    }

    // optional float angle_velocity_cov = 22;
    if (has_angle_velocity_cov()) {
      total_size += 2 + 4;
    }

    // optional float angle_acceleration = 23;
    if (has_angle_acceleration()) {
      total_size += 2 + 4;
    }

  }
  if (_has_bits_[24 / 32] & 50331648u) {
    // optional float angle_acceleration_cov = 24;
    if (has_angle_acceleration_cov()) {
      total_size += 2 + 4;
    }

    // optional .robosense.perception.Proto_msg.LanePosition lane_pos = 14;
    if (has_lane_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->lane_pos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CoreInfos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.perception.Proto_msg.CoreInfos)
  GOOGLE_DCHECK_NE(&from, this);
  const CoreInfos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CoreInfos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.perception.Proto_msg.CoreInfos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.perception.Proto_msg.CoreInfos)
    MergeFrom(*source);
  }
}

void CoreInfos::MergeFrom(const CoreInfos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.perception.Proto_msg.CoreInfos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_center()->::robosense::perception::Proto_msg::Point3f::MergeFrom(from.center());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_center_cov()->::robosense::perception::Proto_msg::Point3f::MergeFrom(from.center_cov());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_size()->::robosense::perception::Proto_msg::Point3f::MergeFrom(from.size());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_size_cov()->::robosense::perception::Proto_msg::Point3f::MergeFrom(from.size_cov());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_direction()->::robosense::perception::Proto_msg::Point3f::MergeFrom(from.direction());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_direction_cov()->::robosense::perception::Proto_msg::Point3f::MergeFrom(from.direction_cov());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_velocity()->::robosense::perception::Proto_msg::Point3f::MergeFrom(from.velocity());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_velocity_cov()->::robosense::perception::Proto_msg::Point3f::MergeFrom(from.velocity_cov());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_acceleration()->::robosense::perception::Proto_msg::Point3f::MergeFrom(from.acceleration());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_acceleration_cov()->::robosense::perception::Proto_msg::Point3f::MergeFrom(from.acceleration_cov());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_anchor()->::robosense::perception::Proto_msg::Point3f::MergeFrom(from.anchor());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_nearest_point()->::robosense::perception::Proto_msg::Point3f::MergeFrom(from.nearest_point());
    }
    if (cached_has_bits & 0x00001000u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00002000u) {
      priority_id_ = from.priority_id_;
    }
    if (cached_has_bits & 0x00004000u) {
      existence_confidence_ = from.existence_confidence_;
    }
    if (cached_has_bits & 0x00008000u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      type_confidence_ = from.type_confidence_;
    }
    if (cached_has_bits & 0x00020000u) {
      attention_type_ = from.attention_type_;
    }
    if (cached_has_bits & 0x00040000u) {
      motion_state_ = from.motion_state_;
    }
    if (cached_has_bits & 0x00080000u) {
      age_ = from.age_;
    }
    if (cached_has_bits & 0x00100000u) {
      tracker_id_ = from.tracker_id_;
    }
    if (cached_has_bits & 0x00200000u) {
      angle_velocity_ = from.angle_velocity_;
    }
    if (cached_has_bits & 0x00400000u) {
      angle_velocity_cov_ = from.angle_velocity_cov_;
    }
    if (cached_has_bits & 0x00800000u) {
      angle_acceleration_ = from.angle_acceleration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 50331648u) {
    if (cached_has_bits & 0x01000000u) {
      angle_acceleration_cov_ = from.angle_acceleration_cov_;
    }
    if (cached_has_bits & 0x02000000u) {
      lane_pos_ = from.lane_pos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CoreInfos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.perception.Proto_msg.CoreInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoreInfos::CopyFrom(const CoreInfos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.perception.Proto_msg.CoreInfos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoreInfos::IsInitialized() const {
  return true;
}

void CoreInfos::Swap(CoreInfos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CoreInfos::InternalSwap(CoreInfos* other) {
  using std::swap;
  swap(center_, other->center_);
  swap(center_cov_, other->center_cov_);
  swap(size_, other->size_);
  swap(size_cov_, other->size_cov_);
  swap(direction_, other->direction_);
  swap(direction_cov_, other->direction_cov_);
  swap(velocity_, other->velocity_);
  swap(velocity_cov_, other->velocity_cov_);
  swap(acceleration_, other->acceleration_);
  swap(acceleration_cov_, other->acceleration_cov_);
  swap(anchor_, other->anchor_);
  swap(nearest_point_, other->nearest_point_);
  swap(timestamp_, other->timestamp_);
  swap(priority_id_, other->priority_id_);
  swap(existence_confidence_, other->existence_confidence_);
  swap(type_, other->type_);
  swap(type_confidence_, other->type_confidence_);
  swap(attention_type_, other->attention_type_);
  swap(motion_state_, other->motion_state_);
  swap(age_, other->age_);
  swap(tracker_id_, other->tracker_id_);
  swap(angle_velocity_, other->angle_velocity_);
  swap(angle_velocity_cov_, other->angle_velocity_cov_);
  swap(angle_acceleration_, other->angle_acceleration_);
  swap(angle_acceleration_cov_, other->angle_acceleration_cov_);
  swap(lane_pos_, other->lane_pos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CoreInfos::GetMetadata() const {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Object::InitAsDefaultInstance() {
  ::robosense::perception::Proto_msg::_Object_default_instance_._instance.get_mutable()->core_infos_ = const_cast< ::robosense::perception::Proto_msg::CoreInfos*>(
      ::robosense::perception::Proto_msg::CoreInfos::internal_default_instance());
  ::robosense::perception::Proto_msg::_Object_default_instance_._instance.get_mutable()->supplement_infos_ = const_cast< ::robosense::perception::Proto_msg::SupplementInfos*>(
      ::robosense::perception::Proto_msg::SupplementInfos::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Object::kTimestampFieldNumber;
const int Object::kCoreInfosFieldNumber;
const int Object::kSupplementInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Object::Object()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Object.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.perception.Proto_msg.Object)
}
Object::Object(const Object& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_core_infos()) {
    core_infos_ = new ::robosense::perception::Proto_msg::CoreInfos(*from.core_infos_);
  } else {
    core_infos_ = NULL;
  }
  if (from.has_supplement_infos()) {
    supplement_infos_ = new ::robosense::perception::Proto_msg::SupplementInfos(*from.supplement_infos_);
  } else {
    supplement_infos_ = NULL;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:robosense.perception.Proto_msg.Object)
}

void Object::SharedCtor() {
  ::memset(&core_infos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&core_infos_)) + sizeof(timestamp_));
}

Object::~Object() {
  // @@protoc_insertion_point(destructor:robosense.perception.Proto_msg.Object)
  SharedDtor();
}

void Object::SharedDtor() {
  if (this != internal_default_instance()) delete core_infos_;
  if (this != internal_default_instance()) delete supplement_infos_;
}

void Object::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Object::descriptor() {
  ::protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Object& Object::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Object.base);
  return *internal_default_instance();
}


void Object::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.perception.Proto_msg.Object)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(core_infos_ != NULL);
      core_infos_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(supplement_infos_ != NULL);
      supplement_infos_->Clear();
    }
  }
  timestamp_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Object::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.perception.Proto_msg.Object)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.CoreInfos core_infos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_core_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.SupplementInfos supplement_infos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_supplement_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.perception.Proto_msg.Object)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.perception.Proto_msg.Object)
  return false;
#undef DO_
}

void Object::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.perception.Proto_msg.Object)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double timestamp = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // optional .robosense.perception.Proto_msg.CoreInfos core_infos = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_core_infos(), output);
  }

  // optional .robosense.perception.Proto_msg.SupplementInfos supplement_infos = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_supplement_infos(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.perception.Proto_msg.Object)
}

::google::protobuf::uint8* Object::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.perception.Proto_msg.Object)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double timestamp = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // optional .robosense.perception.Proto_msg.CoreInfos core_infos = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_core_infos(), deterministic, target);
  }

  // optional .robosense.perception.Proto_msg.SupplementInfos supplement_infos = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_supplement_infos(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.perception.Proto_msg.Object)
  return target;
}

size_t Object::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.perception.Proto_msg.Object)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .robosense.perception.Proto_msg.CoreInfos core_infos = 2;
    if (has_core_infos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *core_infos_);
    }

    // optional .robosense.perception.Proto_msg.SupplementInfos supplement_infos = 3;
    if (has_supplement_infos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *supplement_infos_);
    }

    // optional double timestamp = 1;
    if (has_timestamp()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Object::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.perception.Proto_msg.Object)
  GOOGLE_DCHECK_NE(&from, this);
  const Object* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Object>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.perception.Proto_msg.Object)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.perception.Proto_msg.Object)
    MergeFrom(*source);
  }
}

void Object::MergeFrom(const Object& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.perception.Proto_msg.Object)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_core_infos()->::robosense::perception::Proto_msg::CoreInfos::MergeFrom(from.core_infos());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_supplement_infos()->::robosense::perception::Proto_msg::SupplementInfos::MergeFrom(from.supplement_infos());
    }
    if (cached_has_bits & 0x00000004u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Object::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.perception.Proto_msg.Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Object::CopyFrom(const Object& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.perception.Proto_msg.Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Object::IsInitialized() const {
  return true;
}

void Object::Swap(Object* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Object::InternalSwap(Object* other) {
  using std::swap;
  swap(core_infos_, other->core_infos_);
  swap(supplement_infos_, other->supplement_infos_);
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Object::GetMetadata() const {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EndPoints::InitAsDefaultInstance() {
  ::robosense::perception::Proto_msg::_EndPoints_default_instance_._instance.get_mutable()->start_ = const_cast< ::robosense::perception::Proto_msg::Point2f*>(
      ::robosense::perception::Proto_msg::Point2f::internal_default_instance());
  ::robosense::perception::Proto_msg::_EndPoints_default_instance_._instance.get_mutable()->end_ = const_cast< ::robosense::perception::Proto_msg::Point2f*>(
      ::robosense::perception::Proto_msg::Point2f::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EndPoints::kStartFieldNumber;
const int EndPoints::kEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EndPoints::EndPoints()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_EndPoints.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.perception.Proto_msg.EndPoints)
}
EndPoints::EndPoints(const EndPoints& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start()) {
    start_ = new ::robosense::perception::Proto_msg::Point2f(*from.start_);
  } else {
    start_ = NULL;
  }
  if (from.has_end()) {
    end_ = new ::robosense::perception::Proto_msg::Point2f(*from.end_);
  } else {
    end_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:robosense.perception.Proto_msg.EndPoints)
}

void EndPoints::SharedCtor() {
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_) -
      reinterpret_cast<char*>(&start_)) + sizeof(end_));
}

EndPoints::~EndPoints() {
  // @@protoc_insertion_point(destructor:robosense.perception.Proto_msg.EndPoints)
  SharedDtor();
}

void EndPoints::SharedDtor() {
  if (this != internal_default_instance()) delete start_;
  if (this != internal_default_instance()) delete end_;
}

void EndPoints::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EndPoints::descriptor() {
  ::protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EndPoints& EndPoints::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_EndPoints.base);
  return *internal_default_instance();
}


void EndPoints::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.perception.Proto_msg.EndPoints)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(start_ != NULL);
      start_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(end_ != NULL);
      end_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EndPoints::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.perception.Proto_msg.EndPoints)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .robosense.perception.Proto_msg.Point2f start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Point2f end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.perception.Proto_msg.EndPoints)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.perception.Proto_msg.EndPoints)
  return false;
#undef DO_
}

void EndPoints::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.perception.Proto_msg.EndPoints)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .robosense.perception.Proto_msg.Point2f start = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_start(), output);
  }

  // optional .robosense.perception.Proto_msg.Point2f end = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_end(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.perception.Proto_msg.EndPoints)
}

::google::protobuf::uint8* EndPoints::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.perception.Proto_msg.EndPoints)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .robosense.perception.Proto_msg.Point2f start = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_start(), deterministic, target);
  }

  // optional .robosense.perception.Proto_msg.Point2f end = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_end(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.perception.Proto_msg.EndPoints)
  return target;
}

size_t EndPoints::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.perception.Proto_msg.EndPoints)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .robosense.perception.Proto_msg.Point2f start = 1;
    if (has_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *start_);
    }

    // optional .robosense.perception.Proto_msg.Point2f end = 2;
    if (has_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *end_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EndPoints::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.perception.Proto_msg.EndPoints)
  GOOGLE_DCHECK_NE(&from, this);
  const EndPoints* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EndPoints>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.perception.Proto_msg.EndPoints)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.perception.Proto_msg.EndPoints)
    MergeFrom(*source);
  }
}

void EndPoints::MergeFrom(const EndPoints& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.perception.Proto_msg.EndPoints)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_start()->::robosense::perception::Proto_msg::Point2f::MergeFrom(from.start());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_end()->::robosense::perception::Proto_msg::Point2f::MergeFrom(from.end());
    }
  }
}

void EndPoints::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.perception.Proto_msg.EndPoints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EndPoints::CopyFrom(const EndPoints& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.perception.Proto_msg.EndPoints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EndPoints::IsInitialized() const {
  return true;
}

void EndPoints::Swap(EndPoints* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EndPoints::InternalSwap(EndPoints* other) {
  using std::swap;
  swap(start_, other->start_);
  swap(end_, other->end_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EndPoints::GetMetadata() const {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Curve::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Curve::kXStartFieldNumber;
const int Curve::kXEndFieldNumber;
const int Curve::kAFieldNumber;
const int Curve::kBFieldNumber;
const int Curve::kCFieldNumber;
const int Curve::kDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Curve::Curve()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Curve.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.perception.Proto_msg.Curve)
}
Curve::Curve(const Curve& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_start_, &from.x_start_,
    static_cast<size_t>(reinterpret_cast<char*>(&d_) -
    reinterpret_cast<char*>(&x_start_)) + sizeof(d_));
  // @@protoc_insertion_point(copy_constructor:robosense.perception.Proto_msg.Curve)
}

void Curve::SharedCtor() {
  ::memset(&x_start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&d_) -
      reinterpret_cast<char*>(&x_start_)) + sizeof(d_));
}

Curve::~Curve() {
  // @@protoc_insertion_point(destructor:robosense.perception.Proto_msg.Curve)
  SharedDtor();
}

void Curve::SharedDtor() {
}

void Curve::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Curve::descriptor() {
  ::protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Curve& Curve::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Curve.base);
  return *internal_default_instance();
}


void Curve::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.perception.Proto_msg.Curve)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&x_start_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&d_) -
        reinterpret_cast<char*>(&x_start_)) + sizeof(d_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Curve::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.perception.Proto_msg.Curve)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float x_start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_x_start();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float x_end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_x_end();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float a = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float b = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_b();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float c = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_c();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &c_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float d = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_d();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.perception.Proto_msg.Curve)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.perception.Proto_msg.Curve)
  return false;
#undef DO_
}

void Curve::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.perception.Proto_msg.Curve)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float x_start = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x_start(), output);
  }

  // optional float x_end = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x_end(), output);
  }

  // optional float a = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->a(), output);
  }

  // optional float b = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->b(), output);
  }

  // optional float c = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->c(), output);
  }

  // optional float d = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->d(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.perception.Proto_msg.Curve)
}

::google::protobuf::uint8* Curve::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.perception.Proto_msg.Curve)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float x_start = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x_start(), target);
  }

  // optional float x_end = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x_end(), target);
  }

  // optional float a = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->a(), target);
  }

  // optional float b = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->b(), target);
  }

  // optional float c = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->c(), target);
  }

  // optional float d = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->d(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.perception.Proto_msg.Curve)
  return target;
}

size_t Curve::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.perception.Proto_msg.Curve)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional float x_start = 1;
    if (has_x_start()) {
      total_size += 1 + 4;
    }

    // optional float x_end = 2;
    if (has_x_end()) {
      total_size += 1 + 4;
    }

    // optional float a = 3;
    if (has_a()) {
      total_size += 1 + 4;
    }

    // optional float b = 4;
    if (has_b()) {
      total_size += 1 + 4;
    }

    // optional float c = 5;
    if (has_c()) {
      total_size += 1 + 4;
    }

    // optional float d = 6;
    if (has_d()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Curve::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.perception.Proto_msg.Curve)
  GOOGLE_DCHECK_NE(&from, this);
  const Curve* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Curve>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.perception.Proto_msg.Curve)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.perception.Proto_msg.Curve)
    MergeFrom(*source);
  }
}

void Curve::MergeFrom(const Curve& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.perception.Proto_msg.Curve)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      x_start_ = from.x_start_;
    }
    if (cached_has_bits & 0x00000002u) {
      x_end_ = from.x_end_;
    }
    if (cached_has_bits & 0x00000004u) {
      a_ = from.a_;
    }
    if (cached_has_bits & 0x00000008u) {
      b_ = from.b_;
    }
    if (cached_has_bits & 0x00000010u) {
      c_ = from.c_;
    }
    if (cached_has_bits & 0x00000020u) {
      d_ = from.d_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Curve::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.perception.Proto_msg.Curve)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Curve::CopyFrom(const Curve& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.perception.Proto_msg.Curve)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Curve::IsInitialized() const {
  return true;
}

void Curve::Swap(Curve* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Curve::InternalSwap(Curve* other) {
  using std::swap;
  swap(x_start_, other->x_start_);
  swap(x_end_, other->x_end_);
  swap(a_, other->a_);
  swap(b_, other->b_);
  swap(c_, other->c_);
  swap(d_, other->d_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Curve::GetMetadata() const {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Lane::InitAsDefaultInstance() {
  ::robosense::perception::Proto_msg::_Lane_default_instance_._instance.get_mutable()->end_point_ = const_cast< ::robosense::perception::Proto_msg::EndPoints*>(
      ::robosense::perception::Proto_msg::EndPoints::internal_default_instance());
  ::robosense::perception::Proto_msg::_Lane_default_instance_._instance.get_mutable()->curve_ = const_cast< ::robosense::perception::Proto_msg::Curve*>(
      ::robosense::perception::Proto_msg::Curve::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Lane::kEndPointFieldNumber;
const int Lane::kMeasureStatusFieldNumber;
const int Lane::kLaneIdFieldNumber;
const int Lane::kCurveFieldNumber;
const int Lane::kConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Lane::Lane()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Lane.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.perception.Proto_msg.Lane)
}
Lane::Lane(const Lane& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_end_point()) {
    end_point_ = new ::robosense::perception::Proto_msg::EndPoints(*from.end_point_);
  } else {
    end_point_ = NULL;
  }
  if (from.has_curve()) {
    curve_ = new ::robosense::perception::Proto_msg::Curve(*from.curve_);
  } else {
    curve_ = NULL;
  }
  ::memcpy(&measure_status_, &from.measure_status_,
    static_cast<size_t>(reinterpret_cast<char*>(&lane_id_) -
    reinterpret_cast<char*>(&measure_status_)) + sizeof(lane_id_));
  // @@protoc_insertion_point(copy_constructor:robosense.perception.Proto_msg.Lane)
}

void Lane::SharedCtor() {
  ::memset(&end_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&confidence_) -
      reinterpret_cast<char*>(&end_point_)) + sizeof(confidence_));
  lane_id_ = 7;
}

Lane::~Lane() {
  // @@protoc_insertion_point(destructor:robosense.perception.Proto_msg.Lane)
  SharedDtor();
}

void Lane::SharedDtor() {
  if (this != internal_default_instance()) delete end_point_;
  if (this != internal_default_instance()) delete curve_;
}

void Lane::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Lane::descriptor() {
  ::protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Lane& Lane::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Lane.base);
  return *internal_default_instance();
}


void Lane::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.perception.Proto_msg.Lane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(end_point_ != NULL);
      end_point_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(curve_ != NULL);
      curve_->Clear();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&measure_status_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&confidence_) -
        reinterpret_cast<char*>(&measure_status_)) + sizeof(confidence_));
    lane_id_ = 7;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Lane::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.perception.Proto_msg.Lane)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .robosense.perception.Proto_msg.EndPoints end_point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.MeasureStatus measure_status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::robosense::perception::Proto_msg::MeasureStatus_IsValid(value)) {
            set_measure_status(static_cast< ::robosense::perception::Proto_msg::MeasureStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.LanePosition lane_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::robosense::perception::Proto_msg::LanePosition_IsValid(value)) {
            set_lane_id(static_cast< ::robosense::perception::Proto_msg::LanePosition >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Curve curve = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_curve()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float confidence = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_confidence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.perception.Proto_msg.Lane)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.perception.Proto_msg.Lane)
  return false;
#undef DO_
}

void Lane::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.perception.Proto_msg.Lane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .robosense.perception.Proto_msg.EndPoints end_point = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_end_point(), output);
  }

  // optional .robosense.perception.Proto_msg.MeasureStatus measure_status = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->measure_status(), output);
  }

  // optional .robosense.perception.Proto_msg.LanePosition lane_id = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->lane_id(), output);
  }

  // optional .robosense.perception.Proto_msg.Curve curve = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_curve(), output);
  }

  // optional float confidence = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->confidence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.perception.Proto_msg.Lane)
}

::google::protobuf::uint8* Lane::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.perception.Proto_msg.Lane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .robosense.perception.Proto_msg.EndPoints end_point = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_end_point(), deterministic, target);
  }

  // optional .robosense.perception.Proto_msg.MeasureStatus measure_status = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->measure_status(), target);
  }

  // optional .robosense.perception.Proto_msg.LanePosition lane_id = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->lane_id(), target);
  }

  // optional .robosense.perception.Proto_msg.Curve curve = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_curve(), deterministic, target);
  }

  // optional float confidence = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->confidence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.perception.Proto_msg.Lane)
  return target;
}

size_t Lane::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.perception.Proto_msg.Lane)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .robosense.perception.Proto_msg.EndPoints end_point = 1;
    if (has_end_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *end_point_);
    }

    // optional .robosense.perception.Proto_msg.Curve curve = 4;
    if (has_curve()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *curve_);
    }

    // optional .robosense.perception.Proto_msg.MeasureStatus measure_status = 2;
    if (has_measure_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->measure_status());
    }

    // optional float confidence = 5;
    if (has_confidence()) {
      total_size += 1 + 4;
    }

    // optional .robosense.perception.Proto_msg.LanePosition lane_id = 3;
    if (has_lane_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->lane_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Lane::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.perception.Proto_msg.Lane)
  GOOGLE_DCHECK_NE(&from, this);
  const Lane* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Lane>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.perception.Proto_msg.Lane)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.perception.Proto_msg.Lane)
    MergeFrom(*source);
  }
}

void Lane::MergeFrom(const Lane& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.perception.Proto_msg.Lane)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_end_point()->::robosense::perception::Proto_msg::EndPoints::MergeFrom(from.end_point());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_curve()->::robosense::perception::Proto_msg::Curve::MergeFrom(from.curve());
    }
    if (cached_has_bits & 0x00000004u) {
      measure_status_ = from.measure_status_;
    }
    if (cached_has_bits & 0x00000008u) {
      confidence_ = from.confidence_;
    }
    if (cached_has_bits & 0x00000010u) {
      lane_id_ = from.lane_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Lane::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.perception.Proto_msg.Lane)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Lane::CopyFrom(const Lane& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.perception.Proto_msg.Lane)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Lane::IsInitialized() const {
  return true;
}

void Lane::Swap(Lane* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Lane::InternalSwap(Lane* other) {
  using std::swap;
  swap(end_point_, other->end_point_);
  swap(curve_, other->curve_);
  swap(measure_status_, other->measure_status_);
  swap(confidence_, other->confidence_);
  swap(lane_id_, other->lane_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Lane::GetMetadata() const {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Lanes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Lanes::kTimestampFieldNumber;
const int Lanes::kLanesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Lanes::Lanes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Lanes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.perception.Proto_msg.Lanes)
}
Lanes::Lanes(const Lanes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      lanes_(from.lanes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:robosense.perception.Proto_msg.Lanes)
}

void Lanes::SharedCtor() {
  timestamp_ = 0;
}

Lanes::~Lanes() {
  // @@protoc_insertion_point(destructor:robosense.perception.Proto_msg.Lanes)
  SharedDtor();
}

void Lanes::SharedDtor() {
}

void Lanes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Lanes::descriptor() {
  ::protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Lanes& Lanes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_Lanes.base);
  return *internal_default_instance();
}


void Lanes::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.perception.Proto_msg.Lanes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lanes_.Clear();
  timestamp_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Lanes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.perception.Proto_msg.Lanes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .robosense.perception.Proto_msg.Lane lanes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lanes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.perception.Proto_msg.Lanes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.perception.Proto_msg.Lanes)
  return false;
#undef DO_
}

void Lanes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.perception.Proto_msg.Lanes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double timestamp = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // repeated .robosense.perception.Proto_msg.Lane lanes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lanes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->lanes(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.perception.Proto_msg.Lanes)
}

::google::protobuf::uint8* Lanes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.perception.Proto_msg.Lanes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double timestamp = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // repeated .robosense.perception.Proto_msg.Lane lanes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lanes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->lanes(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.perception.Proto_msg.Lanes)
  return target;
}

size_t Lanes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.perception.Proto_msg.Lanes)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .robosense.perception.Proto_msg.Lane lanes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->lanes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lanes(static_cast<int>(i)));
    }
  }

  // optional double timestamp = 1;
  if (has_timestamp()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Lanes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.perception.Proto_msg.Lanes)
  GOOGLE_DCHECK_NE(&from, this);
  const Lanes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Lanes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.perception.Proto_msg.Lanes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.perception.Proto_msg.Lanes)
    MergeFrom(*source);
  }
}

void Lanes::MergeFrom(const Lanes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.perception.Proto_msg.Lanes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lanes_.MergeFrom(from.lanes_);
  if (from.has_timestamp()) {
    set_timestamp(from.timestamp());
  }
}

void Lanes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.perception.Proto_msg.Lanes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Lanes::CopyFrom(const Lanes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.perception.Proto_msg.Lanes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Lanes::IsInitialized() const {
  return true;
}

void Lanes::Swap(Lanes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Lanes::InternalSwap(Lanes* other) {
  using std::swap;
  CastToBase(&lanes_)->InternalSwap(CastToBase(&other->lanes_));
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Lanes::GetMetadata() const {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoadEdge::InitAsDefaultInstance() {
  ::robosense::perception::Proto_msg::_RoadEdge_default_instance_._instance.get_mutable()->end_points_ = const_cast< ::robosense::perception::Proto_msg::EndPoints*>(
      ::robosense::perception::Proto_msg::EndPoints::internal_default_instance());
  ::robosense::perception::Proto_msg::_RoadEdge_default_instance_._instance.get_mutable()->curve_ = const_cast< ::robosense::perception::Proto_msg::Curve*>(
      ::robosense::perception::Proto_msg::Curve::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoadEdge::kEndPointsFieldNumber;
const int RoadEdge::kMeasureStatusFieldNumber;
const int RoadEdge::kRoadedgeIdFieldNumber;
const int RoadEdge::kCurveFieldNumber;
const int RoadEdge::kConfidenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoadEdge::RoadEdge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_RoadEdge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.perception.Proto_msg.RoadEdge)
}
RoadEdge::RoadEdge(const RoadEdge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_end_points()) {
    end_points_ = new ::robosense::perception::Proto_msg::EndPoints(*from.end_points_);
  } else {
    end_points_ = NULL;
  }
  if (from.has_curve()) {
    curve_ = new ::robosense::perception::Proto_msg::Curve(*from.curve_);
  } else {
    curve_ = NULL;
  }
  ::memcpy(&measure_status_, &from.measure_status_,
    static_cast<size_t>(reinterpret_cast<char*>(&roadedge_id_) -
    reinterpret_cast<char*>(&measure_status_)) + sizeof(roadedge_id_));
  // @@protoc_insertion_point(copy_constructor:robosense.perception.Proto_msg.RoadEdge)
}

void RoadEdge::SharedCtor() {
  ::memset(&end_points_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&confidence_) -
      reinterpret_cast<char*>(&end_points_)) + sizeof(confidence_));
  roadedge_id_ = 1;
}

RoadEdge::~RoadEdge() {
  // @@protoc_insertion_point(destructor:robosense.perception.Proto_msg.RoadEdge)
  SharedDtor();
}

void RoadEdge::SharedDtor() {
  if (this != internal_default_instance()) delete end_points_;
  if (this != internal_default_instance()) delete curve_;
}

void RoadEdge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RoadEdge::descriptor() {
  ::protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoadEdge& RoadEdge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_RoadEdge.base);
  return *internal_default_instance();
}


void RoadEdge::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.perception.Proto_msg.RoadEdge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(end_points_ != NULL);
      end_points_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(curve_ != NULL);
      curve_->Clear();
    }
  }
  if (cached_has_bits & 28u) {
    ::memset(&measure_status_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&confidence_) -
        reinterpret_cast<char*>(&measure_status_)) + sizeof(confidence_));
    roadedge_id_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RoadEdge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.perception.Proto_msg.RoadEdge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .robosense.perception.Proto_msg.EndPoints end_points = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.MeasureStatus measure_status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::robosense::perception::Proto_msg::MeasureStatus_IsValid(value)) {
            set_measure_status(static_cast< ::robosense::perception::Proto_msg::MeasureStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.RoadedgePosition roadedge_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::robosense::perception::Proto_msg::RoadedgePosition_IsValid(value)) {
            set_roadedge_id(static_cast< ::robosense::perception::Proto_msg::RoadedgePosition >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.perception.Proto_msg.Curve curve = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_curve()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float confidence = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_confidence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.perception.Proto_msg.RoadEdge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.perception.Proto_msg.RoadEdge)
  return false;
#undef DO_
}

void RoadEdge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.perception.Proto_msg.RoadEdge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .robosense.perception.Proto_msg.EndPoints end_points = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_end_points(), output);
  }

  // optional .robosense.perception.Proto_msg.MeasureStatus measure_status = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->measure_status(), output);
  }

  // optional .robosense.perception.Proto_msg.RoadedgePosition roadedge_id = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->roadedge_id(), output);
  }

  // optional .robosense.perception.Proto_msg.Curve curve = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_curve(), output);
  }

  // optional float confidence = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->confidence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.perception.Proto_msg.RoadEdge)
}

::google::protobuf::uint8* RoadEdge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.perception.Proto_msg.RoadEdge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .robosense.perception.Proto_msg.EndPoints end_points = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_end_points(), deterministic, target);
  }

  // optional .robosense.perception.Proto_msg.MeasureStatus measure_status = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->measure_status(), target);
  }

  // optional .robosense.perception.Proto_msg.RoadedgePosition roadedge_id = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->roadedge_id(), target);
  }

  // optional .robosense.perception.Proto_msg.Curve curve = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_curve(), deterministic, target);
  }

  // optional float confidence = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->confidence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.perception.Proto_msg.RoadEdge)
  return target;
}

size_t RoadEdge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.perception.Proto_msg.RoadEdge)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .robosense.perception.Proto_msg.EndPoints end_points = 1;
    if (has_end_points()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *end_points_);
    }

    // optional .robosense.perception.Proto_msg.Curve curve = 4;
    if (has_curve()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *curve_);
    }

    // optional .robosense.perception.Proto_msg.MeasureStatus measure_status = 2;
    if (has_measure_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->measure_status());
    }

    // optional float confidence = 5;
    if (has_confidence()) {
      total_size += 1 + 4;
    }

    // optional .robosense.perception.Proto_msg.RoadedgePosition roadedge_id = 3;
    if (has_roadedge_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->roadedge_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoadEdge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.perception.Proto_msg.RoadEdge)
  GOOGLE_DCHECK_NE(&from, this);
  const RoadEdge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoadEdge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.perception.Proto_msg.RoadEdge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.perception.Proto_msg.RoadEdge)
    MergeFrom(*source);
  }
}

void RoadEdge::MergeFrom(const RoadEdge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.perception.Proto_msg.RoadEdge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_end_points()->::robosense::perception::Proto_msg::EndPoints::MergeFrom(from.end_points());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_curve()->::robosense::perception::Proto_msg::Curve::MergeFrom(from.curve());
    }
    if (cached_has_bits & 0x00000004u) {
      measure_status_ = from.measure_status_;
    }
    if (cached_has_bits & 0x00000008u) {
      confidence_ = from.confidence_;
    }
    if (cached_has_bits & 0x00000010u) {
      roadedge_id_ = from.roadedge_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RoadEdge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.perception.Proto_msg.RoadEdge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoadEdge::CopyFrom(const RoadEdge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.perception.Proto_msg.RoadEdge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoadEdge::IsInitialized() const {
  return true;
}

void RoadEdge::Swap(RoadEdge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoadEdge::InternalSwap(RoadEdge* other) {
  using std::swap;
  swap(end_points_, other->end_points_);
  swap(curve_, other->curve_);
  swap(measure_status_, other->measure_status_);
  swap(confidence_, other->confidence_);
  swap(roadedge_id_, other->roadedge_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RoadEdge::GetMetadata() const {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoadEdges::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoadEdges::kTimestampFieldNumber;
const int RoadEdges::kRoadedgesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoadEdges::RoadEdges()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_RoadEdges.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.perception.Proto_msg.RoadEdges)
}
RoadEdges::RoadEdges(const RoadEdges& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      roadedges_(from.roadedges_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:robosense.perception.Proto_msg.RoadEdges)
}

void RoadEdges::SharedCtor() {
  timestamp_ = 0;
}

RoadEdges::~RoadEdges() {
  // @@protoc_insertion_point(destructor:robosense.perception.Proto_msg.RoadEdges)
  SharedDtor();
}

void RoadEdges::SharedDtor() {
}

void RoadEdges::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RoadEdges::descriptor() {
  ::protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoadEdges& RoadEdges::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_RoadEdges.base);
  return *internal_default_instance();
}


void RoadEdges::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.perception.Proto_msg.RoadEdges)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roadedges_.Clear();
  timestamp_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RoadEdges::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.perception.Proto_msg.RoadEdges)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .robosense.perception.Proto_msg.RoadEdge roadedges = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_roadedges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.perception.Proto_msg.RoadEdges)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.perception.Proto_msg.RoadEdges)
  return false;
#undef DO_
}

void RoadEdges::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.perception.Proto_msg.RoadEdges)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double timestamp = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // repeated .robosense.perception.Proto_msg.RoadEdge roadedges = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roadedges_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->roadedges(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.perception.Proto_msg.RoadEdges)
}

::google::protobuf::uint8* RoadEdges::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.perception.Proto_msg.RoadEdges)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double timestamp = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // repeated .robosense.perception.Proto_msg.RoadEdge roadedges = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roadedges_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->roadedges(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.perception.Proto_msg.RoadEdges)
  return target;
}

size_t RoadEdges::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.perception.Proto_msg.RoadEdges)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .robosense.perception.Proto_msg.RoadEdge roadedges = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->roadedges_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roadedges(static_cast<int>(i)));
    }
  }

  // optional double timestamp = 1;
  if (has_timestamp()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoadEdges::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.perception.Proto_msg.RoadEdges)
  GOOGLE_DCHECK_NE(&from, this);
  const RoadEdges* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoadEdges>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.perception.Proto_msg.RoadEdges)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.perception.Proto_msg.RoadEdges)
    MergeFrom(*source);
  }
}

void RoadEdges::MergeFrom(const RoadEdges& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.perception.Proto_msg.RoadEdges)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roadedges_.MergeFrom(from.roadedges_);
  if (from.has_timestamp()) {
    set_timestamp(from.timestamp());
  }
}

void RoadEdges::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.perception.Proto_msg.RoadEdges)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoadEdges::CopyFrom(const RoadEdges& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.perception.Proto_msg.RoadEdges)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoadEdges::IsInitialized() const {
  return true;
}

void RoadEdges::Swap(RoadEdges* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoadEdges::InternalSwap(RoadEdges* other) {
  using std::swap;
  CastToBase(&roadedges_)->InternalSwap(CastToBase(&other->roadedges_));
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RoadEdges::GetMetadata() const {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PointCloud::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PointCloud::kTimestampFieldNumber;
const int PointCloud::kPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PointCloud::PointCloud()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_PointCloud.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.perception.Proto_msg.PointCloud)
}
PointCloud::PointCloud(const PointCloud& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      point_(from.point_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:robosense.perception.Proto_msg.PointCloud)
}

void PointCloud::SharedCtor() {
  timestamp_ = 0;
}

PointCloud::~PointCloud() {
  // @@protoc_insertion_point(destructor:robosense.perception.Proto_msg.PointCloud)
  SharedDtor();
}

void PointCloud::SharedDtor() {
}

void PointCloud::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PointCloud::descriptor() {
  ::protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PointCloud& PointCloud::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_PointCloud.base);
  return *internal_default_instance();
}


void PointCloud::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.perception.Proto_msg.PointCloud)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  point_.Clear();
  timestamp_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PointCloud::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.perception.Proto_msg.PointCloud)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .robosense.perception.Proto_msg.PointXYZITL point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.perception.Proto_msg.PointCloud)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.perception.Proto_msg.PointCloud)
  return false;
#undef DO_
}

void PointCloud::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.perception.Proto_msg.PointCloud)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double timestamp = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // repeated .robosense.perception.Proto_msg.PointXYZITL point = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->point(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.perception.Proto_msg.PointCloud)
}

::google::protobuf::uint8* PointCloud::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.perception.Proto_msg.PointCloud)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double timestamp = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // repeated .robosense.perception.Proto_msg.PointXYZITL point = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->point(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.perception.Proto_msg.PointCloud)
  return target;
}

size_t PointCloud::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.perception.Proto_msg.PointCloud)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .robosense.perception.Proto_msg.PointXYZITL point = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->point(static_cast<int>(i)));
    }
  }

  // optional double timestamp = 1;
  if (has_timestamp()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PointCloud::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.perception.Proto_msg.PointCloud)
  GOOGLE_DCHECK_NE(&from, this);
  const PointCloud* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PointCloud>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.perception.Proto_msg.PointCloud)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.perception.Proto_msg.PointCloud)
    MergeFrom(*source);
  }
}

void PointCloud::MergeFrom(const PointCloud& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.perception.Proto_msg.PointCloud)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  point_.MergeFrom(from.point_);
  if (from.has_timestamp()) {
    set_timestamp(from.timestamp());
  }
}

void PointCloud::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.perception.Proto_msg.PointCloud)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PointCloud::CopyFrom(const PointCloud& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.perception.Proto_msg.PointCloud)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PointCloud::IsInitialized() const {
  return true;
}

void PointCloud::Swap(PointCloud* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PointCloud::InternalSwap(PointCloud* other) {
  using std::swap;
  CastToBase(&point_)->InternalSwap(CastToBase(&other->point_));
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PointCloud::GetMetadata() const {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgHeader::kMsgTimestampsFieldNumber;
const int MsgHeader::kMsgVersionFieldNumber;
const int MsgHeader::kMsgTypeFieldNumber;
const int MsgHeader::kDeviceIdFieldNumber;
const int MsgHeader::kMsgFrameIdFieldNumber;
const int MsgHeader::kMsgTotalCntFieldNumber;
const int MsgHeader::kMsgLocalCntFieldNumber;
const int MsgHeader::kMsgLocalLenFieldNumber;
const int MsgHeader::kMsgIndexFieldNumber;
const int MsgHeader::kMsgTotalFragmentFieldNumber;
const int MsgHeader::kMsgFragmentIndexFieldNumber;
const int MsgHeader::kMsgRes0FieldNumber;
const int MsgHeader::kMsgCheck16FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgHeader::MsgHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_MsgHeader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.perception.Proto_msg.MsgHeader)
}
MsgHeader::MsgHeader(const MsgHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&msgtimestamps_, &from.msgtimestamps_,
    static_cast<size_t>(reinterpret_cast<char*>(&msgcheck16_) -
    reinterpret_cast<char*>(&msgtimestamps_)) + sizeof(msgcheck16_));
  // @@protoc_insertion_point(copy_constructor:robosense.perception.Proto_msg.MsgHeader)
}

void MsgHeader::SharedCtor() {
  ::memset(&msgtimestamps_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgcheck16_) -
      reinterpret_cast<char*>(&msgtimestamps_)) + sizeof(msgcheck16_));
}

MsgHeader::~MsgHeader() {
  // @@protoc_insertion_point(destructor:robosense.perception.Proto_msg.MsgHeader)
  SharedDtor();
}

void MsgHeader::SharedDtor() {
}

void MsgHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgHeader::descriptor() {
  ::protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgHeader& MsgHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2ePercept_2eproto::scc_info_MsgHeader.base);
  return *internal_default_instance();
}


void MsgHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.perception.Proto_msg.MsgHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&msgtimestamps_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&msglocallen_) -
        reinterpret_cast<char*>(&msgtimestamps_)) + sizeof(msglocallen_));
  }
  if (cached_has_bits & 7936u) {
    ::memset(&msgindex_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&msgcheck16_) -
        reinterpret_cast<char*>(&msgindex_)) + sizeof(msgcheck16_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MsgHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.perception.Proto_msg.MsgHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double msgTimestamps = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_msgtimestamps();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &msgtimestamps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgVersion = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_msgversion();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_msgtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 deviceId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_deviceid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &deviceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgFrameId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_msgframeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgframeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgTotalCnt = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_msgtotalcnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtotalcnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgLocalCnt = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_msglocalcnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msglocalcnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgLocalLen = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_msglocallen();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msglocallen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgIndex = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_msgindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgTotalFragment = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_msgtotalfragment();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtotalfragment_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgFragmentIndex = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_msgfragmentindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgfragmentindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgRes0 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_msgres0();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgres0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgCheck16 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_msgcheck16();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgcheck16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.perception.Proto_msg.MsgHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.perception.Proto_msg.MsgHeader)
  return false;
#undef DO_
}

void MsgHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.perception.Proto_msg.MsgHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double msgTimestamps = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->msgtimestamps(), output);
  }

  // optional uint32 msgVersion = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msgversion(), output);
  }

  // optional uint32 msgType = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->msgtype(), output);
  }

  // optional uint32 deviceId = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->deviceid(), output);
  }

  // optional uint32 msgFrameId = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->msgframeid(), output);
  }

  // optional uint32 msgTotalCnt = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->msgtotalcnt(), output);
  }

  // optional uint32 msgLocalCnt = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->msglocalcnt(), output);
  }

  // optional uint32 msgLocalLen = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->msglocallen(), output);
  }

  // optional uint32 msgIndex = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->msgindex(), output);
  }

  // optional uint32 msgTotalFragment = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->msgtotalfragment(), output);
  }

  // optional uint32 msgFragmentIndex = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->msgfragmentindex(), output);
  }

  // optional uint32 msgRes0 = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->msgres0(), output);
  }

  // optional uint32 msgCheck16 = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->msgcheck16(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.perception.Proto_msg.MsgHeader)
}

::google::protobuf::uint8* MsgHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.perception.Proto_msg.MsgHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double msgTimestamps = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->msgtimestamps(), target);
  }

  // optional uint32 msgVersion = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msgversion(), target);
  }

  // optional uint32 msgType = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->msgtype(), target);
  }

  // optional uint32 deviceId = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->deviceid(), target);
  }

  // optional uint32 msgFrameId = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->msgframeid(), target);
  }

  // optional uint32 msgTotalCnt = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->msgtotalcnt(), target);
  }

  // optional uint32 msgLocalCnt = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->msglocalcnt(), target);
  }

  // optional uint32 msgLocalLen = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->msglocallen(), target);
  }

  // optional uint32 msgIndex = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->msgindex(), target);
  }

  // optional uint32 msgTotalFragment = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->msgtotalfragment(), target);
  }

  // optional uint32 msgFragmentIndex = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->msgfragmentindex(), target);
  }

  // optional uint32 msgRes0 = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->msgres0(), target);
  }

  // optional uint32 msgCheck16 = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->msgcheck16(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.perception.Proto_msg.MsgHeader)
  return target;
}

size_t MsgHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.perception.Proto_msg.MsgHeader)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional double msgTimestamps = 1;
    if (has_msgtimestamps()) {
      total_size += 1 + 8;
    }

    // optional uint32 msgVersion = 2;
    if (has_msgversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgversion());
    }

    // optional uint32 msgType = 3;
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgtype());
    }

    // optional uint32 deviceId = 4;
    if (has_deviceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->deviceid());
    }

    // optional uint32 msgFrameId = 5;
    if (has_msgframeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgframeid());
    }

    // optional uint32 msgTotalCnt = 6;
    if (has_msgtotalcnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgtotalcnt());
    }

    // optional uint32 msgLocalCnt = 7;
    if (has_msglocalcnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msglocalcnt());
    }

    // optional uint32 msgLocalLen = 8;
    if (has_msglocallen()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msglocallen());
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional uint32 msgIndex = 9;
    if (has_msgindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgindex());
    }

    // optional uint32 msgTotalFragment = 10;
    if (has_msgtotalfragment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgtotalfragment());
    }

    // optional uint32 msgFragmentIndex = 11;
    if (has_msgfragmentindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgfragmentindex());
    }

    // optional uint32 msgRes0 = 12;
    if (has_msgres0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgres0());
    }

    // optional uint32 msgCheck16 = 13;
    if (has_msgcheck16()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgcheck16());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.perception.Proto_msg.MsgHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.perception.Proto_msg.MsgHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.perception.Proto_msg.MsgHeader)
    MergeFrom(*source);
  }
}

void MsgHeader::MergeFrom(const MsgHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.perception.Proto_msg.MsgHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      msgtimestamps_ = from.msgtimestamps_;
    }
    if (cached_has_bits & 0x00000002u) {
      msgversion_ = from.msgversion_;
    }
    if (cached_has_bits & 0x00000004u) {
      msgtype_ = from.msgtype_;
    }
    if (cached_has_bits & 0x00000008u) {
      deviceid_ = from.deviceid_;
    }
    if (cached_has_bits & 0x00000010u) {
      msgframeid_ = from.msgframeid_;
    }
    if (cached_has_bits & 0x00000020u) {
      msgtotalcnt_ = from.msgtotalcnt_;
    }
    if (cached_has_bits & 0x00000040u) {
      msglocalcnt_ = from.msglocalcnt_;
    }
    if (cached_has_bits & 0x00000080u) {
      msglocallen_ = from.msglocallen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      msgindex_ = from.msgindex_;
    }
    if (cached_has_bits & 0x00000200u) {
      msgtotalfragment_ = from.msgtotalfragment_;
    }
    if (cached_has_bits & 0x00000400u) {
      msgfragmentindex_ = from.msgfragmentindex_;
    }
    if (cached_has_bits & 0x00000800u) {
      msgres0_ = from.msgres0_;
    }
    if (cached_has_bits & 0x00001000u) {
      msgcheck16_ = from.msgcheck16_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MsgHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.perception.Proto_msg.MsgHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHeader::CopyFrom(const MsgHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.perception.Proto_msg.MsgHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHeader::IsInitialized() const {
  return true;
}

void MsgHeader::Swap(MsgHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgHeader::InternalSwap(MsgHeader* other) {
  using std::swap;
  swap(msgtimestamps_, other->msgtimestamps_);
  swap(msgversion_, other->msgversion_);
  swap(msgtype_, other->msgtype_);
  swap(deviceid_, other->deviceid_);
  swap(msgframeid_, other->msgframeid_);
  swap(msgtotalcnt_, other->msgtotalcnt_);
  swap(msglocalcnt_, other->msglocalcnt_);
  swap(msglocallen_, other->msglocallen_);
  swap(msgindex_, other->msgindex_);
  swap(msgtotalfragment_, other->msgtotalfragment_);
  swap(msgfragmentindex_, other->msgfragmentindex_);
  swap(msgres0_, other->msgres0_);
  swap(msgcheck16_, other->msgcheck16_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgHeader::GetMetadata() const {
  protobuf_Proto_5fmsg_2ePercept_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2ePercept_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Proto_msg
}  // namespace perception
}  // namespace robosense
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::perception::Proto_msg::Point2f* Arena::CreateMaybeMessage< ::robosense::perception::Proto_msg::Point2f >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::perception::Proto_msg::Point2f >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::perception::Proto_msg::Point3f* Arena::CreateMaybeMessage< ::robosense::perception::Proto_msg::Point3f >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::perception::Proto_msg::Point3f >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::perception::Proto_msg::Point3d* Arena::CreateMaybeMessage< ::robosense::perception::Proto_msg::Point3d >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::perception::Proto_msg::Point3d >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::perception::Proto_msg::PointXYZITL* Arena::CreateMaybeMessage< ::robosense::perception::Proto_msg::PointXYZITL >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::perception::Proto_msg::PointXYZITL >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::perception::Proto_msg::Vector1i* Arena::CreateMaybeMessage< ::robosense::perception::Proto_msg::Vector1i >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::perception::Proto_msg::Vector1i >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::perception::Proto_msg::Vector1f* Arena::CreateMaybeMessage< ::robosense::perception::Proto_msg::Vector1f >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::perception::Proto_msg::Vector1f >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::perception::Proto_msg::Vector3f* Arena::CreateMaybeMessage< ::robosense::perception::Proto_msg::Vector3f >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::perception::Proto_msg::Vector3f >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::perception::Proto_msg::VectorObjType* Arena::CreateMaybeMessage< ::robosense::perception::Proto_msg::VectorObjType >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::perception::Proto_msg::VectorObjType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::perception::Proto_msg::Pose* Arena::CreateMaybeMessage< ::robosense::perception::Proto_msg::Pose >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::perception::Proto_msg::Pose >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::perception::Proto_msg::PoseInfo* Arena::CreateMaybeMessage< ::robosense::perception::Proto_msg::PoseInfo >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::perception::Proto_msg::PoseInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::perception::Proto_msg::VectorFreeSpaceType* Arena::CreateMaybeMessage< ::robosense::perception::Proto_msg::VectorFreeSpaceType >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::perception::Proto_msg::VectorFreeSpaceType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::perception::Proto_msg::FreeSpaces* Arena::CreateMaybeMessage< ::robosense::perception::Proto_msg::FreeSpaces >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::perception::Proto_msg::FreeSpaces >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::perception::Proto_msg::SupplementInfos* Arena::CreateMaybeMessage< ::robosense::perception::Proto_msg::SupplementInfos >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::perception::Proto_msg::SupplementInfos >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::perception::Proto_msg::CoreInfos* Arena::CreateMaybeMessage< ::robosense::perception::Proto_msg::CoreInfos >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::perception::Proto_msg::CoreInfos >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::perception::Proto_msg::Object* Arena::CreateMaybeMessage< ::robosense::perception::Proto_msg::Object >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::perception::Proto_msg::Object >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::perception::Proto_msg::EndPoints* Arena::CreateMaybeMessage< ::robosense::perception::Proto_msg::EndPoints >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::perception::Proto_msg::EndPoints >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::perception::Proto_msg::Curve* Arena::CreateMaybeMessage< ::robosense::perception::Proto_msg::Curve >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::perception::Proto_msg::Curve >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::perception::Proto_msg::Lane* Arena::CreateMaybeMessage< ::robosense::perception::Proto_msg::Lane >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::perception::Proto_msg::Lane >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::perception::Proto_msg::Lanes* Arena::CreateMaybeMessage< ::robosense::perception::Proto_msg::Lanes >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::perception::Proto_msg::Lanes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::perception::Proto_msg::RoadEdge* Arena::CreateMaybeMessage< ::robosense::perception::Proto_msg::RoadEdge >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::perception::Proto_msg::RoadEdge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::perception::Proto_msg::RoadEdges* Arena::CreateMaybeMessage< ::robosense::perception::Proto_msg::RoadEdges >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::perception::Proto_msg::RoadEdges >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::perception::Proto_msg::PointCloud* Arena::CreateMaybeMessage< ::robosense::perception::Proto_msg::PointCloud >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::perception::Proto_msg::PointCloud >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::perception::Proto_msg::MsgHeader* Arena::CreateMaybeMessage< ::robosense::perception::Proto_msg::MsgHeader >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::perception::Proto_msg::MsgHeader >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
