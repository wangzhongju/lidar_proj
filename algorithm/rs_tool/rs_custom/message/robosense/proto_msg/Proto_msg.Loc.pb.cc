// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Proto_msg.Loc.proto

#include "Proto_msg.Loc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Proto_5fmsg_2eLoc_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Proto_5fmsg_2eLoc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PointXYZIT;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Proto_5fmsg_2eLoc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vector1d;
}  // namespace protobuf_Proto_5fmsg_2eLoc_2eproto
namespace robosense {
namespace localization {
namespace Proto_msg {
class Vector1dDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vector1d>
      _instance;
} _Vector1d_default_instance_;
class PointXYZITDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PointXYZIT>
      _instance;
} _PointXYZIT_default_instance_;
class StatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Status>
      _instance;
} _Status_default_instance_;
class ProcessLidarDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcessLidar>
      _instance;
} _ProcessLidar_default_instance_;
class VehicleStateMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleStateMsg>
      _instance;
} _VehicleStateMsg_default_instance_;
class MsgHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgHeader>
      _instance;
} _MsgHeader_default_instance_;
}  // namespace Proto_msg
}  // namespace localization
}  // namespace robosense
namespace protobuf_Proto_5fmsg_2eLoc_2eproto {
static void InitDefaultsVector1d() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::localization::Proto_msg::_Vector1d_default_instance_;
    new (ptr) ::robosense::localization::Proto_msg::Vector1d();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::localization::Proto_msg::Vector1d::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vector1d =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVector1d}, {}};

static void InitDefaultsPointXYZIT() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::localization::Proto_msg::_PointXYZIT_default_instance_;
    new (ptr) ::robosense::localization::Proto_msg::PointXYZIT();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::localization::Proto_msg::PointXYZIT::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PointXYZIT =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPointXYZIT}, {}};

static void InitDefaultsStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::localization::Proto_msg::_Status_default_instance_;
    new (ptr) ::robosense::localization::Proto_msg::Status();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::localization::Proto_msg::Status::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Status =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStatus}, {}};

static void InitDefaultsProcessLidar() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::localization::Proto_msg::_ProcessLidar_default_instance_;
    new (ptr) ::robosense::localization::Proto_msg::ProcessLidar();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::localization::Proto_msg::ProcessLidar::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ProcessLidar =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProcessLidar}, {
      &protobuf_Proto_5fmsg_2eLoc_2eproto::scc_info_PointXYZIT.base,}};

static void InitDefaultsVehicleStateMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::localization::Proto_msg::_VehicleStateMsg_default_instance_;
    new (ptr) ::robosense::localization::Proto_msg::VehicleStateMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::localization::Proto_msg::VehicleStateMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VehicleStateMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVehicleStateMsg}, {
      &protobuf_Proto_5fmsg_2eLoc_2eproto::scc_info_Vector1d.base,}};

static void InitDefaultsMsgHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robosense::localization::Proto_msg::_MsgHeader_default_instance_;
    new (ptr) ::robosense::localization::Proto_msg::MsgHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robosense::localization::Proto_msg::MsgHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MsgHeader =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgHeader}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Vector1d.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PointXYZIT.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Status.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProcessLidar.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleStateMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgHeader.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::Vector1d, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::Vector1d, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::Vector1d, data_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::PointXYZIT, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::PointXYZIT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::PointXYZIT, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::PointXYZIT, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::PointXYZIT, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::PointXYZIT, intensity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::PointXYZIT, timestamp_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::Status, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::Status, status_int_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::ProcessLidar, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::ProcessLidar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::ProcessLidar, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::ProcessLidar, seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::ProcessLidar, parent_frame_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::ProcessLidar, frame_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::ProcessLidar, lidar_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::ProcessLidar, points_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::ProcessLidar, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::ProcessLidar, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::ProcessLidar, is_dense_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::ProcessLidar, is_transform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::ProcessLidar, is_motion_correct_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::ProcessLidar, point_),
  4,
  5,
  0,
  1,
  2,
  3,
  6,
  7,
  8,
  9,
  10,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::VehicleStateMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::VehicleStateMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::VehicleStateMsg, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::VehicleStateMsg, seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::VehicleStateMsg, frame_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::VehicleStateMsg, parent_frame_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::VehicleStateMsg, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::VehicleStateMsg, origin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::VehicleStateMsg, fix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::VehicleStateMsg, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::VehicleStateMsg, pos_cov_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::VehicleStateMsg, orien_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::VehicleStateMsg, orien_cov_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::VehicleStateMsg, angular_vel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::VehicleStateMsg, angular_vel_cov_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::VehicleStateMsg, linear_vel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::VehicleStateMsg, linear_vel_cov_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::VehicleStateMsg, acc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::VehicleStateMsg, acc_cov_),
  14,
  15,
  0,
  1,
  16,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::MsgHeader, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::MsgHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::MsgHeader, msgtimestamps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::MsgHeader, msgversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::MsgHeader, msgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::MsgHeader, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::MsgHeader, msgframeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::MsgHeader, msgtotalcnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::MsgHeader, msglocalcnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::MsgHeader, msglocallen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::MsgHeader, msgindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::MsgHeader, msgtotalfragment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::MsgHeader, msgfragmentindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::MsgHeader, msgres0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::robosense::localization::Proto_msg::MsgHeader, msgcheck16_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::robosense::localization::Proto_msg::Vector1d)},
  { 7, 17, sizeof(::robosense::localization::Proto_msg::PointXYZIT)},
  { 22, 28, sizeof(::robosense::localization::Proto_msg::Status)},
  { 29, 46, sizeof(::robosense::localization::Proto_msg::ProcessLidar)},
  { 58, 80, sizeof(::robosense::localization::Proto_msg::VehicleStateMsg)},
  { 97, 115, sizeof(::robosense::localization::Proto_msg::MsgHeader)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::localization::Proto_msg::_Vector1d_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::localization::Proto_msg::_PointXYZIT_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::localization::Proto_msg::_Status_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::localization::Proto_msg::_ProcessLidar_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::localization::Proto_msg::_VehicleStateMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::robosense::localization::Proto_msg::_MsgHeader_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Proto_msg.Loc.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023Proto_msg.Loc.proto\022 robosense.localiz"
      "ation.Proto_msg\"\030\n\010Vector1d\022\014\n\004data\030\001 \003("
      "\001\"S\n\nPointXYZIT\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n"
      "\001z\030\003 \001(\002\022\021\n\tintensity\030\004 \001(\r\022\021\n\ttimestamp"
      "\030\005 \001(\001\"\034\n\006Status\022\022\n\nstatus_int\030\001 \001(\r\"\241\002\n"
      "\014ProcessLidar\022\021\n\ttimestamp\030\001 \001(\001\022\013\n\003seq\030"
      "\002 \001(\r\022\027\n\017parent_frame_id\030\003 \001(\t\022\020\n\010frame_"
      "id\030\004 \001(\t\022\022\n\nlidar_mode\030\005 \001(\t\022\023\n\013points_t"
      "ype\030\006 \001(\t\022\016\n\006height\030\007 \001(\r\022\r\n\005width\030\010 \001(\r"
      "\022\020\n\010is_dense\030\t \001(\010\022\024\n\014is_transform\030\n \001(\010"
      "\022\031\n\021is_motion_correct\030\013 \001(\010\022;\n\005point\030\014 \003"
      "(\0132,.robosense.localization.Proto_msg.Po"
      "intXYZIT\"\321\006\n\017VehicleStateMsg\022\021\n\ttimestam"
      "p\030\001 \001(\001\022\013\n\003seq\030\002 \001(\r\022\020\n\010frame_id\030\003 \001(\t\022\027"
      "\n\017parent_frame_id\030\004 \001(\t\022\016\n\006status\030\005 \001(\r\022"
      ":\n\006origin\030\006 \001(\0132*.robosense.localization"
      ".Proto_msg.Vector1d\0227\n\003fix\030\007 \001(\0132*.robos"
      "ense.localization.Proto_msg.Vector1d\0227\n\003"
      "pos\030\010 \001(\0132*.robosense.localization.Proto"
      "_msg.Vector1d\022;\n\007pos_cov\030\t \001(\0132*.robosen"
      "se.localization.Proto_msg.Vector1d\0229\n\005or"
      "ien\030\n \001(\0132*.robosense.localization.Proto"
      "_msg.Vector1d\022=\n\torien_cov\030\013 \001(\0132*.robos"
      "ense.localization.Proto_msg.Vector1d\022\?\n\013"
      "angular_vel\030\014 \001(\0132*.robosense.localizati"
      "on.Proto_msg.Vector1d\022C\n\017angular_vel_cov"
      "\030\r \001(\0132*.robosense.localization.Proto_ms"
      "g.Vector1d\022>\n\nlinear_vel\030\016 \001(\0132*.robosen"
      "se.localization.Proto_msg.Vector1d\022B\n\016li"
      "near_vel_cov\030\017 \001(\0132*.robosense.localizat"
      "ion.Proto_msg.Vector1d\0227\n\003acc\030\020 \001(\0132*.ro"
      "bosense.localization.Proto_msg.Vector1d\022"
      ";\n\007acc_cov\030\021 \001(\0132*.robosense.localizatio"
      "n.Proto_msg.Vector1d\"\227\002\n\tMsgHeader\022\025\n\rms"
      "gTimestamps\030\001 \001(\001\022\022\n\nmsgVersion\030\002 \001(\r\022\017\n"
      "\007msgType\030\003 \001(\r\022\020\n\010deviceId\030\004 \001(\r\022\022\n\nmsgF"
      "rameId\030\005 \001(\r\022\023\n\013msgTotalCnt\030\006 \001(\r\022\023\n\013msg"
      "LocalCnt\030\007 \001(\r\022\023\n\013msgLocalLen\030\010 \001(\r\022\020\n\010m"
      "sgIndex\030\t \001(\r\022\030\n\020msgTotalFragment\030\n \001(\r\022"
      "\030\n\020msgFragmentIndex\030\013 \001(\r\022\017\n\007msgRes0\030\014 \001"
      "(\r\022\022\n\nmsgCheck16\030\r \001(\r"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1622);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Proto_msg.Loc.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Proto_5fmsg_2eLoc_2eproto
namespace robosense {
namespace localization {
namespace Proto_msg {

// ===================================================================

void Vector1d::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector1d::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector1d::Vector1d()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2eLoc_2eproto::scc_info_Vector1d.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.localization.Proto_msg.Vector1d)
}
Vector1d::Vector1d(const Vector1d& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:robosense.localization.Proto_msg.Vector1d)
}

void Vector1d::SharedCtor() {
}

Vector1d::~Vector1d() {
  // @@protoc_insertion_point(destructor:robosense.localization.Proto_msg.Vector1d)
  SharedDtor();
}

void Vector1d::SharedDtor() {
}

void Vector1d::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vector1d::descriptor() {
  ::protobuf_Proto_5fmsg_2eLoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2eLoc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector1d& Vector1d::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2eLoc_2eproto::scc_info_Vector1d.base);
  return *internal_default_instance();
}


void Vector1d::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.localization.Proto_msg.Vector1d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vector1d::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.localization.Proto_msg.Vector1d)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9u, input, this->mutable_data())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_data())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.localization.Proto_msg.Vector1d)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.localization.Proto_msg.Vector1d)
  return false;
#undef DO_
}

void Vector1d::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.localization.Proto_msg.Vector1d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double data = 1;
  for (int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.localization.Proto_msg.Vector1d)
}

::google::protobuf::uint8* Vector1d::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.localization.Proto_msg.Vector1d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double data = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(1, this->data_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.localization.Proto_msg.Vector1d)
  return target;
}

size_t Vector1d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.localization.Proto_msg.Vector1d)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated double data = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->data_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->data_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vector1d::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.localization.Proto_msg.Vector1d)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector1d* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vector1d>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.localization.Proto_msg.Vector1d)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.localization.Proto_msg.Vector1d)
    MergeFrom(*source);
  }
}

void Vector1d::MergeFrom(const Vector1d& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.localization.Proto_msg.Vector1d)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void Vector1d::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.localization.Proto_msg.Vector1d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector1d::CopyFrom(const Vector1d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.localization.Proto_msg.Vector1d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector1d::IsInitialized() const {
  return true;
}

void Vector1d::Swap(Vector1d* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector1d::InternalSwap(Vector1d* other) {
  using std::swap;
  data_.InternalSwap(&other->data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vector1d::GetMetadata() const {
  protobuf_Proto_5fmsg_2eLoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2eLoc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PointXYZIT::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PointXYZIT::kXFieldNumber;
const int PointXYZIT::kYFieldNumber;
const int PointXYZIT::kZFieldNumber;
const int PointXYZIT::kIntensityFieldNumber;
const int PointXYZIT::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PointXYZIT::PointXYZIT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2eLoc_2eproto::scc_info_PointXYZIT.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.localization.Proto_msg.PointXYZIT)
}
PointXYZIT::PointXYZIT(const PointXYZIT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&x_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:robosense.localization.Proto_msg.PointXYZIT)
}

void PointXYZIT::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&x_)) + sizeof(timestamp_));
}

PointXYZIT::~PointXYZIT() {
  // @@protoc_insertion_point(destructor:robosense.localization.Proto_msg.PointXYZIT)
  SharedDtor();
}

void PointXYZIT::SharedDtor() {
}

void PointXYZIT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PointXYZIT::descriptor() {
  ::protobuf_Proto_5fmsg_2eLoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2eLoc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PointXYZIT& PointXYZIT::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2eLoc_2eproto::scc_info_PointXYZIT.base);
  return *internal_default_instance();
}


void PointXYZIT::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.localization.Proto_msg.PointXYZIT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timestamp_) -
        reinterpret_cast<char*>(&x_)) + sizeof(timestamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PointXYZIT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.localization.Proto_msg.PointXYZIT)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 intensity = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_intensity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &intensity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.localization.Proto_msg.PointXYZIT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.localization.Proto_msg.PointXYZIT)
  return false;
#undef DO_
}

void PointXYZIT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.localization.Proto_msg.PointXYZIT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // optional float y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // optional float z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // optional uint32 intensity = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->intensity(), output);
  }

  // optional double timestamp = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.localization.Proto_msg.PointXYZIT)
}

::google::protobuf::uint8* PointXYZIT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.localization.Proto_msg.PointXYZIT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // optional float y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // optional float z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // optional uint32 intensity = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->intensity(), target);
  }

  // optional double timestamp = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.localization.Proto_msg.PointXYZIT)
  return target;
}

size_t PointXYZIT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.localization.Proto_msg.PointXYZIT)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional float x = 1;
    if (has_x()) {
      total_size += 1 + 4;
    }

    // optional float y = 2;
    if (has_y()) {
      total_size += 1 + 4;
    }

    // optional float z = 3;
    if (has_z()) {
      total_size += 1 + 4;
    }

    // optional uint32 intensity = 4;
    if (has_intensity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->intensity());
    }

    // optional double timestamp = 5;
    if (has_timestamp()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PointXYZIT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.localization.Proto_msg.PointXYZIT)
  GOOGLE_DCHECK_NE(&from, this);
  const PointXYZIT* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PointXYZIT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.localization.Proto_msg.PointXYZIT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.localization.Proto_msg.PointXYZIT)
    MergeFrom(*source);
  }
}

void PointXYZIT::MergeFrom(const PointXYZIT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.localization.Proto_msg.PointXYZIT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    if (cached_has_bits & 0x00000008u) {
      intensity_ = from.intensity_;
    }
    if (cached_has_bits & 0x00000010u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PointXYZIT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.localization.Proto_msg.PointXYZIT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PointXYZIT::CopyFrom(const PointXYZIT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.localization.Proto_msg.PointXYZIT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PointXYZIT::IsInitialized() const {
  return true;
}

void PointXYZIT::Swap(PointXYZIT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PointXYZIT::InternalSwap(PointXYZIT* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(intensity_, other->intensity_);
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PointXYZIT::GetMetadata() const {
  protobuf_Proto_5fmsg_2eLoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2eLoc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Status::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Status::kStatusIntFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Status::Status()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2eLoc_2eproto::scc_info_Status.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.localization.Proto_msg.Status)
}
Status::Status(const Status& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_int_ = from.status_int_;
  // @@protoc_insertion_point(copy_constructor:robosense.localization.Proto_msg.Status)
}

void Status::SharedCtor() {
  status_int_ = 0u;
}

Status::~Status() {
  // @@protoc_insertion_point(destructor:robosense.localization.Proto_msg.Status)
  SharedDtor();
}

void Status::SharedDtor() {
}

void Status::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Status::descriptor() {
  ::protobuf_Proto_5fmsg_2eLoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2eLoc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Status& Status::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2eLoc_2eproto::scc_info_Status.base);
  return *internal_default_instance();
}


void Status::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.localization.Proto_msg.Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_int_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.localization.Proto_msg.Status)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 status_int = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status_int();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_int_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.localization.Proto_msg.Status)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.localization.Proto_msg.Status)
  return false;
#undef DO_
}

void Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.localization.Proto_msg.Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 status_int = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->status_int(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.localization.Proto_msg.Status)
}

::google::protobuf::uint8* Status::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.localization.Proto_msg.Status)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 status_int = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->status_int(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.localization.Proto_msg.Status)
  return target;
}

size_t Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.localization.Proto_msg.Status)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 status_int = 1;
  if (has_status_int()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status_int());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Status::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.localization.Proto_msg.Status)
  GOOGLE_DCHECK_NE(&from, this);
  const Status* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Status>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.localization.Proto_msg.Status)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.localization.Proto_msg.Status)
    MergeFrom(*source);
  }
}

void Status::MergeFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.localization.Proto_msg.Status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status_int()) {
    set_status_int(from.status_int());
  }
}

void Status::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.localization.Proto_msg.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Status::CopyFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.localization.Proto_msg.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Status::IsInitialized() const {
  return true;
}

void Status::Swap(Status* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Status::InternalSwap(Status* other) {
  using std::swap;
  swap(status_int_, other->status_int_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Status::GetMetadata() const {
  protobuf_Proto_5fmsg_2eLoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2eLoc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcessLidar::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcessLidar::kTimestampFieldNumber;
const int ProcessLidar::kSeqFieldNumber;
const int ProcessLidar::kParentFrameIdFieldNumber;
const int ProcessLidar::kFrameIdFieldNumber;
const int ProcessLidar::kLidarModeFieldNumber;
const int ProcessLidar::kPointsTypeFieldNumber;
const int ProcessLidar::kHeightFieldNumber;
const int ProcessLidar::kWidthFieldNumber;
const int ProcessLidar::kIsDenseFieldNumber;
const int ProcessLidar::kIsTransformFieldNumber;
const int ProcessLidar::kIsMotionCorrectFieldNumber;
const int ProcessLidar::kPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcessLidar::ProcessLidar()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2eLoc_2eproto::scc_info_ProcessLidar.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.localization.Proto_msg.ProcessLidar)
}
ProcessLidar::ProcessLidar(const ProcessLidar& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      point_(from.point_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_parent_frame_id()) {
    parent_frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_frame_id_);
  }
  frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_frame_id()) {
    frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_id_);
  }
  lidar_mode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_lidar_mode()) {
    lidar_mode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lidar_mode_);
  }
  points_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_points_type()) {
    points_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.points_type_);
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_motion_correct_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(is_motion_correct_));
  // @@protoc_insertion_point(copy_constructor:robosense.localization.Proto_msg.ProcessLidar)
}

void ProcessLidar::SharedCtor() {
  parent_frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lidar_mode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  points_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_motion_correct_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(is_motion_correct_));
}

ProcessLidar::~ProcessLidar() {
  // @@protoc_insertion_point(destructor:robosense.localization.Proto_msg.ProcessLidar)
  SharedDtor();
}

void ProcessLidar::SharedDtor() {
  parent_frame_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  frame_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lidar_mode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  points_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProcessLidar::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProcessLidar::descriptor() {
  ::protobuf_Proto_5fmsg_2eLoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2eLoc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcessLidar& ProcessLidar::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2eLoc_2eproto::scc_info_ProcessLidar.base);
  return *internal_default_instance();
}


void ProcessLidar::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.localization.Proto_msg.ProcessLidar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  point_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      parent_frame_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      frame_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      lidar_mode_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      points_type_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&width_) -
        reinterpret_cast<char*>(&timestamp_)) + sizeof(width_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&is_dense_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_motion_correct_) -
        reinterpret_cast<char*>(&is_dense_)) + sizeof(is_motion_correct_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProcessLidar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.localization.Proto_msg.ProcessLidar)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 seq = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_seq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string parent_frame_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent_frame_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->parent_frame_id().data(), static_cast<int>(this->parent_frame_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "robosense.localization.Proto_msg.ProcessLidar.parent_frame_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string frame_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_frame_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->frame_id().data(), static_cast<int>(this->frame_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "robosense.localization.Proto_msg.ProcessLidar.frame_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string lidar_mode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lidar_mode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lidar_mode().data(), static_cast<int>(this->lidar_mode().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "robosense.localization.Proto_msg.ProcessLidar.lidar_mode");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string points_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_points_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->points_type().data(), static_cast<int>(this->points_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "robosense.localization.Proto_msg.ProcessLidar.points_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 height = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 width = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_dense = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_is_dense();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_dense_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_transform = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_is_transform();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_transform_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_motion_correct = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_is_motion_correct();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_motion_correct_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .robosense.localization.Proto_msg.PointXYZIT point = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.localization.Proto_msg.ProcessLidar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.localization.Proto_msg.ProcessLidar)
  return false;
#undef DO_
}

void ProcessLidar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.localization.Proto_msg.ProcessLidar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double timestamp = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // optional uint32 seq = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->seq(), output);
  }

  // optional string parent_frame_id = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parent_frame_id().data(), static_cast<int>(this->parent_frame_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "robosense.localization.Proto_msg.ProcessLidar.parent_frame_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->parent_frame_id(), output);
  }

  // optional string frame_id = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->frame_id().data(), static_cast<int>(this->frame_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "robosense.localization.Proto_msg.ProcessLidar.frame_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->frame_id(), output);
  }

  // optional string lidar_mode = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lidar_mode().data(), static_cast<int>(this->lidar_mode().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "robosense.localization.Proto_msg.ProcessLidar.lidar_mode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->lidar_mode(), output);
  }

  // optional string points_type = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->points_type().data(), static_cast<int>(this->points_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "robosense.localization.Proto_msg.ProcessLidar.points_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->points_type(), output);
  }

  // optional uint32 height = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->height(), output);
  }

  // optional uint32 width = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->width(), output);
  }

  // optional bool is_dense = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_dense(), output);
  }

  // optional bool is_transform = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_transform(), output);
  }

  // optional bool is_motion_correct = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_motion_correct(), output);
  }

  // repeated .robosense.localization.Proto_msg.PointXYZIT point = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->point(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.localization.Proto_msg.ProcessLidar)
}

::google::protobuf::uint8* ProcessLidar::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.localization.Proto_msg.ProcessLidar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double timestamp = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // optional uint32 seq = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->seq(), target);
  }

  // optional string parent_frame_id = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parent_frame_id().data(), static_cast<int>(this->parent_frame_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "robosense.localization.Proto_msg.ProcessLidar.parent_frame_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->parent_frame_id(), target);
  }

  // optional string frame_id = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->frame_id().data(), static_cast<int>(this->frame_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "robosense.localization.Proto_msg.ProcessLidar.frame_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->frame_id(), target);
  }

  // optional string lidar_mode = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lidar_mode().data(), static_cast<int>(this->lidar_mode().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "robosense.localization.Proto_msg.ProcessLidar.lidar_mode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->lidar_mode(), target);
  }

  // optional string points_type = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->points_type().data(), static_cast<int>(this->points_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "robosense.localization.Proto_msg.ProcessLidar.points_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->points_type(), target);
  }

  // optional uint32 height = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->height(), target);
  }

  // optional uint32 width = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->width(), target);
  }

  // optional bool is_dense = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_dense(), target);
  }

  // optional bool is_transform = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_transform(), target);
  }

  // optional bool is_motion_correct = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_motion_correct(), target);
  }

  // repeated .robosense.localization.Proto_msg.PointXYZIT point = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->point(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.localization.Proto_msg.ProcessLidar)
  return target;
}

size_t ProcessLidar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.localization.Proto_msg.ProcessLidar)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .robosense.localization.Proto_msg.PointXYZIT point = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->point(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string parent_frame_id = 3;
    if (has_parent_frame_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->parent_frame_id());
    }

    // optional string frame_id = 4;
    if (has_frame_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->frame_id());
    }

    // optional string lidar_mode = 5;
    if (has_lidar_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lidar_mode());
    }

    // optional string points_type = 6;
    if (has_points_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->points_type());
    }

    // optional double timestamp = 1;
    if (has_timestamp()) {
      total_size += 1 + 8;
    }

    // optional uint32 seq = 2;
    if (has_seq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->seq());
    }

    // optional uint32 height = 7;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->height());
    }

    // optional uint32 width = 8;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->width());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional bool is_dense = 9;
    if (has_is_dense()) {
      total_size += 1 + 1;
    }

    // optional bool is_transform = 10;
    if (has_is_transform()) {
      total_size += 1 + 1;
    }

    // optional bool is_motion_correct = 11;
    if (has_is_motion_correct()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcessLidar::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.localization.Proto_msg.ProcessLidar)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessLidar* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcessLidar>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.localization.Proto_msg.ProcessLidar)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.localization.Proto_msg.ProcessLidar)
    MergeFrom(*source);
  }
}

void ProcessLidar::MergeFrom(const ProcessLidar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.localization.Proto_msg.ProcessLidar)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  point_.MergeFrom(from.point_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_parent_frame_id();
      parent_frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_frame_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_frame_id();
      frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_lidar_mode();
      lidar_mode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lidar_mode_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_points_type();
      points_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.points_type_);
    }
    if (cached_has_bits & 0x00000010u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000020u) {
      seq_ = from.seq_;
    }
    if (cached_has_bits & 0x00000040u) {
      height_ = from.height_;
    }
    if (cached_has_bits & 0x00000080u) {
      width_ = from.width_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      is_dense_ = from.is_dense_;
    }
    if (cached_has_bits & 0x00000200u) {
      is_transform_ = from.is_transform_;
    }
    if (cached_has_bits & 0x00000400u) {
      is_motion_correct_ = from.is_motion_correct_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProcessLidar::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.localization.Proto_msg.ProcessLidar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessLidar::CopyFrom(const ProcessLidar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.localization.Proto_msg.ProcessLidar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessLidar::IsInitialized() const {
  return true;
}

void ProcessLidar::Swap(ProcessLidar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcessLidar::InternalSwap(ProcessLidar* other) {
  using std::swap;
  CastToBase(&point_)->InternalSwap(CastToBase(&other->point_));
  parent_frame_id_.Swap(&other->parent_frame_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  frame_id_.Swap(&other->frame_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  lidar_mode_.Swap(&other->lidar_mode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  points_type_.Swap(&other->points_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(seq_, other->seq_);
  swap(height_, other->height_);
  swap(width_, other->width_);
  swap(is_dense_, other->is_dense_);
  swap(is_transform_, other->is_transform_);
  swap(is_motion_correct_, other->is_motion_correct_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProcessLidar::GetMetadata() const {
  protobuf_Proto_5fmsg_2eLoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2eLoc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleStateMsg::InitAsDefaultInstance() {
  ::robosense::localization::Proto_msg::_VehicleStateMsg_default_instance_._instance.get_mutable()->origin_ = const_cast< ::robosense::localization::Proto_msg::Vector1d*>(
      ::robosense::localization::Proto_msg::Vector1d::internal_default_instance());
  ::robosense::localization::Proto_msg::_VehicleStateMsg_default_instance_._instance.get_mutable()->fix_ = const_cast< ::robosense::localization::Proto_msg::Vector1d*>(
      ::robosense::localization::Proto_msg::Vector1d::internal_default_instance());
  ::robosense::localization::Proto_msg::_VehicleStateMsg_default_instance_._instance.get_mutable()->pos_ = const_cast< ::robosense::localization::Proto_msg::Vector1d*>(
      ::robosense::localization::Proto_msg::Vector1d::internal_default_instance());
  ::robosense::localization::Proto_msg::_VehicleStateMsg_default_instance_._instance.get_mutable()->pos_cov_ = const_cast< ::robosense::localization::Proto_msg::Vector1d*>(
      ::robosense::localization::Proto_msg::Vector1d::internal_default_instance());
  ::robosense::localization::Proto_msg::_VehicleStateMsg_default_instance_._instance.get_mutable()->orien_ = const_cast< ::robosense::localization::Proto_msg::Vector1d*>(
      ::robosense::localization::Proto_msg::Vector1d::internal_default_instance());
  ::robosense::localization::Proto_msg::_VehicleStateMsg_default_instance_._instance.get_mutable()->orien_cov_ = const_cast< ::robosense::localization::Proto_msg::Vector1d*>(
      ::robosense::localization::Proto_msg::Vector1d::internal_default_instance());
  ::robosense::localization::Proto_msg::_VehicleStateMsg_default_instance_._instance.get_mutable()->angular_vel_ = const_cast< ::robosense::localization::Proto_msg::Vector1d*>(
      ::robosense::localization::Proto_msg::Vector1d::internal_default_instance());
  ::robosense::localization::Proto_msg::_VehicleStateMsg_default_instance_._instance.get_mutable()->angular_vel_cov_ = const_cast< ::robosense::localization::Proto_msg::Vector1d*>(
      ::robosense::localization::Proto_msg::Vector1d::internal_default_instance());
  ::robosense::localization::Proto_msg::_VehicleStateMsg_default_instance_._instance.get_mutable()->linear_vel_ = const_cast< ::robosense::localization::Proto_msg::Vector1d*>(
      ::robosense::localization::Proto_msg::Vector1d::internal_default_instance());
  ::robosense::localization::Proto_msg::_VehicleStateMsg_default_instance_._instance.get_mutable()->linear_vel_cov_ = const_cast< ::robosense::localization::Proto_msg::Vector1d*>(
      ::robosense::localization::Proto_msg::Vector1d::internal_default_instance());
  ::robosense::localization::Proto_msg::_VehicleStateMsg_default_instance_._instance.get_mutable()->acc_ = const_cast< ::robosense::localization::Proto_msg::Vector1d*>(
      ::robosense::localization::Proto_msg::Vector1d::internal_default_instance());
  ::robosense::localization::Proto_msg::_VehicleStateMsg_default_instance_._instance.get_mutable()->acc_cov_ = const_cast< ::robosense::localization::Proto_msg::Vector1d*>(
      ::robosense::localization::Proto_msg::Vector1d::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleStateMsg::kTimestampFieldNumber;
const int VehicleStateMsg::kSeqFieldNumber;
const int VehicleStateMsg::kFrameIdFieldNumber;
const int VehicleStateMsg::kParentFrameIdFieldNumber;
const int VehicleStateMsg::kStatusFieldNumber;
const int VehicleStateMsg::kOriginFieldNumber;
const int VehicleStateMsg::kFixFieldNumber;
const int VehicleStateMsg::kPosFieldNumber;
const int VehicleStateMsg::kPosCovFieldNumber;
const int VehicleStateMsg::kOrienFieldNumber;
const int VehicleStateMsg::kOrienCovFieldNumber;
const int VehicleStateMsg::kAngularVelFieldNumber;
const int VehicleStateMsg::kAngularVelCovFieldNumber;
const int VehicleStateMsg::kLinearVelFieldNumber;
const int VehicleStateMsg::kLinearVelCovFieldNumber;
const int VehicleStateMsg::kAccFieldNumber;
const int VehicleStateMsg::kAccCovFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleStateMsg::VehicleStateMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2eLoc_2eproto::scc_info_VehicleStateMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.localization.Proto_msg.VehicleStateMsg)
}
VehicleStateMsg::VehicleStateMsg(const VehicleStateMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_frame_id()) {
    frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_id_);
  }
  parent_frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_parent_frame_id()) {
    parent_frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_frame_id_);
  }
  if (from.has_origin()) {
    origin_ = new ::robosense::localization::Proto_msg::Vector1d(*from.origin_);
  } else {
    origin_ = NULL;
  }
  if (from.has_fix()) {
    fix_ = new ::robosense::localization::Proto_msg::Vector1d(*from.fix_);
  } else {
    fix_ = NULL;
  }
  if (from.has_pos()) {
    pos_ = new ::robosense::localization::Proto_msg::Vector1d(*from.pos_);
  } else {
    pos_ = NULL;
  }
  if (from.has_pos_cov()) {
    pos_cov_ = new ::robosense::localization::Proto_msg::Vector1d(*from.pos_cov_);
  } else {
    pos_cov_ = NULL;
  }
  if (from.has_orien()) {
    orien_ = new ::robosense::localization::Proto_msg::Vector1d(*from.orien_);
  } else {
    orien_ = NULL;
  }
  if (from.has_orien_cov()) {
    orien_cov_ = new ::robosense::localization::Proto_msg::Vector1d(*from.orien_cov_);
  } else {
    orien_cov_ = NULL;
  }
  if (from.has_angular_vel()) {
    angular_vel_ = new ::robosense::localization::Proto_msg::Vector1d(*from.angular_vel_);
  } else {
    angular_vel_ = NULL;
  }
  if (from.has_angular_vel_cov()) {
    angular_vel_cov_ = new ::robosense::localization::Proto_msg::Vector1d(*from.angular_vel_cov_);
  } else {
    angular_vel_cov_ = NULL;
  }
  if (from.has_linear_vel()) {
    linear_vel_ = new ::robosense::localization::Proto_msg::Vector1d(*from.linear_vel_);
  } else {
    linear_vel_ = NULL;
  }
  if (from.has_linear_vel_cov()) {
    linear_vel_cov_ = new ::robosense::localization::Proto_msg::Vector1d(*from.linear_vel_cov_);
  } else {
    linear_vel_cov_ = NULL;
  }
  if (from.has_acc()) {
    acc_ = new ::robosense::localization::Proto_msg::Vector1d(*from.acc_);
  } else {
    acc_ = NULL;
  }
  if (from.has_acc_cov()) {
    acc_cov_ = new ::robosense::localization::Proto_msg::Vector1d(*from.acc_cov_);
  } else {
    acc_cov_ = NULL;
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:robosense.localization.Proto_msg.VehicleStateMsg)
}

void VehicleStateMsg::SharedCtor() {
  frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&origin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&origin_)) + sizeof(status_));
}

VehicleStateMsg::~VehicleStateMsg() {
  // @@protoc_insertion_point(destructor:robosense.localization.Proto_msg.VehicleStateMsg)
  SharedDtor();
}

void VehicleStateMsg::SharedDtor() {
  frame_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_frame_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete origin_;
  if (this != internal_default_instance()) delete fix_;
  if (this != internal_default_instance()) delete pos_;
  if (this != internal_default_instance()) delete pos_cov_;
  if (this != internal_default_instance()) delete orien_;
  if (this != internal_default_instance()) delete orien_cov_;
  if (this != internal_default_instance()) delete angular_vel_;
  if (this != internal_default_instance()) delete angular_vel_cov_;
  if (this != internal_default_instance()) delete linear_vel_;
  if (this != internal_default_instance()) delete linear_vel_cov_;
  if (this != internal_default_instance()) delete acc_;
  if (this != internal_default_instance()) delete acc_cov_;
}

void VehicleStateMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleStateMsg::descriptor() {
  ::protobuf_Proto_5fmsg_2eLoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2eLoc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleStateMsg& VehicleStateMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2eLoc_2eproto::scc_info_VehicleStateMsg.base);
  return *internal_default_instance();
}


void VehicleStateMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.localization.Proto_msg.VehicleStateMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      frame_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      parent_frame_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(origin_ != NULL);
      origin_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(fix_ != NULL);
      fix_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(pos_ != NULL);
      pos_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(pos_cov_ != NULL);
      pos_cov_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(orien_ != NULL);
      orien_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(orien_cov_ != NULL);
      orien_cov_->Clear();
    }
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(angular_vel_ != NULL);
      angular_vel_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(angular_vel_cov_ != NULL);
      angular_vel_cov_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(linear_vel_ != NULL);
      linear_vel_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(linear_vel_cov_ != NULL);
      linear_vel_cov_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(acc_ != NULL);
      acc_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(acc_cov_ != NULL);
      acc_cov_->Clear();
    }
  }
  if (cached_has_bits & 49152u) {
    ::memset(&timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seq_) -
        reinterpret_cast<char*>(&timestamp_)) + sizeof(seq_));
  }
  status_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VehicleStateMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.localization.Proto_msg.VehicleStateMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 seq = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_seq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string frame_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_frame_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->frame_id().data(), static_cast<int>(this->frame_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "robosense.localization.Proto_msg.VehicleStateMsg.frame_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string parent_frame_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent_frame_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->parent_frame_id().data(), static_cast<int>(this->parent_frame_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "robosense.localization.Proto_msg.VehicleStateMsg.parent_frame_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 status = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.localization.Proto_msg.Vector1d origin = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_origin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.localization.Proto_msg.Vector1d fix = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.localization.Proto_msg.Vector1d pos = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.localization.Proto_msg.Vector1d pos_cov = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos_cov()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.localization.Proto_msg.Vector1d orien = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_orien()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.localization.Proto_msg.Vector1d orien_cov = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_orien_cov()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.localization.Proto_msg.Vector1d angular_vel = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_angular_vel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.localization.Proto_msg.Vector1d angular_vel_cov = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_angular_vel_cov()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.localization.Proto_msg.Vector1d linear_vel = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_linear_vel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.localization.Proto_msg.Vector1d linear_vel_cov = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_linear_vel_cov()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.localization.Proto_msg.Vector1d acc = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .robosense.localization.Proto_msg.Vector1d acc_cov = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acc_cov()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.localization.Proto_msg.VehicleStateMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.localization.Proto_msg.VehicleStateMsg)
  return false;
#undef DO_
}

void VehicleStateMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.localization.Proto_msg.VehicleStateMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double timestamp = 1;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // optional uint32 seq = 2;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->seq(), output);
  }

  // optional string frame_id = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->frame_id().data(), static_cast<int>(this->frame_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "robosense.localization.Proto_msg.VehicleStateMsg.frame_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->frame_id(), output);
  }

  // optional string parent_frame_id = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parent_frame_id().data(), static_cast<int>(this->parent_frame_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "robosense.localization.Proto_msg.VehicleStateMsg.parent_frame_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->parent_frame_id(), output);
  }

  // optional uint32 status = 5;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->status(), output);
  }

  // optional .robosense.localization.Proto_msg.Vector1d origin = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_origin(), output);
  }

  // optional .robosense.localization.Proto_msg.Vector1d fix = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_fix(), output);
  }

  // optional .robosense.localization.Proto_msg.Vector1d pos = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_pos(), output);
  }

  // optional .robosense.localization.Proto_msg.Vector1d pos_cov = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_pos_cov(), output);
  }

  // optional .robosense.localization.Proto_msg.Vector1d orien = 10;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_orien(), output);
  }

  // optional .robosense.localization.Proto_msg.Vector1d orien_cov = 11;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_orien_cov(), output);
  }

  // optional .robosense.localization.Proto_msg.Vector1d angular_vel = 12;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_angular_vel(), output);
  }

  // optional .robosense.localization.Proto_msg.Vector1d angular_vel_cov = 13;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_angular_vel_cov(), output);
  }

  // optional .robosense.localization.Proto_msg.Vector1d linear_vel = 14;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_linear_vel(), output);
  }

  // optional .robosense.localization.Proto_msg.Vector1d linear_vel_cov = 15;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_linear_vel_cov(), output);
  }

  // optional .robosense.localization.Proto_msg.Vector1d acc = 16;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_acc(), output);
  }

  // optional .robosense.localization.Proto_msg.Vector1d acc_cov = 17;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_acc_cov(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.localization.Proto_msg.VehicleStateMsg)
}

::google::protobuf::uint8* VehicleStateMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.localization.Proto_msg.VehicleStateMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double timestamp = 1;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // optional uint32 seq = 2;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->seq(), target);
  }

  // optional string frame_id = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->frame_id().data(), static_cast<int>(this->frame_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "robosense.localization.Proto_msg.VehicleStateMsg.frame_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->frame_id(), target);
  }

  // optional string parent_frame_id = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parent_frame_id().data(), static_cast<int>(this->parent_frame_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "robosense.localization.Proto_msg.VehicleStateMsg.parent_frame_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->parent_frame_id(), target);
  }

  // optional uint32 status = 5;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->status(), target);
  }

  // optional .robosense.localization.Proto_msg.Vector1d origin = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_origin(), deterministic, target);
  }

  // optional .robosense.localization.Proto_msg.Vector1d fix = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_fix(), deterministic, target);
  }

  // optional .robosense.localization.Proto_msg.Vector1d pos = 8;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_pos(), deterministic, target);
  }

  // optional .robosense.localization.Proto_msg.Vector1d pos_cov = 9;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_pos_cov(), deterministic, target);
  }

  // optional .robosense.localization.Proto_msg.Vector1d orien = 10;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_orien(), deterministic, target);
  }

  // optional .robosense.localization.Proto_msg.Vector1d orien_cov = 11;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_orien_cov(), deterministic, target);
  }

  // optional .robosense.localization.Proto_msg.Vector1d angular_vel = 12;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_angular_vel(), deterministic, target);
  }

  // optional .robosense.localization.Proto_msg.Vector1d angular_vel_cov = 13;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_angular_vel_cov(), deterministic, target);
  }

  // optional .robosense.localization.Proto_msg.Vector1d linear_vel = 14;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_linear_vel(), deterministic, target);
  }

  // optional .robosense.localization.Proto_msg.Vector1d linear_vel_cov = 15;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_linear_vel_cov(), deterministic, target);
  }

  // optional .robosense.localization.Proto_msg.Vector1d acc = 16;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_acc(), deterministic, target);
  }

  // optional .robosense.localization.Proto_msg.Vector1d acc_cov = 17;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_acc_cov(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.localization.Proto_msg.VehicleStateMsg)
  return target;
}

size_t VehicleStateMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.localization.Proto_msg.VehicleStateMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string frame_id = 3;
    if (has_frame_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->frame_id());
    }

    // optional string parent_frame_id = 4;
    if (has_parent_frame_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->parent_frame_id());
    }

    // optional .robosense.localization.Proto_msg.Vector1d origin = 6;
    if (has_origin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *origin_);
    }

    // optional .robosense.localization.Proto_msg.Vector1d fix = 7;
    if (has_fix()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fix_);
    }

    // optional .robosense.localization.Proto_msg.Vector1d pos = 8;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pos_);
    }

    // optional .robosense.localization.Proto_msg.Vector1d pos_cov = 9;
    if (has_pos_cov()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *pos_cov_);
    }

    // optional .robosense.localization.Proto_msg.Vector1d orien = 10;
    if (has_orien()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *orien_);
    }

    // optional .robosense.localization.Proto_msg.Vector1d orien_cov = 11;
    if (has_orien_cov()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *orien_cov_);
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .robosense.localization.Proto_msg.Vector1d angular_vel = 12;
    if (has_angular_vel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *angular_vel_);
    }

    // optional .robosense.localization.Proto_msg.Vector1d angular_vel_cov = 13;
    if (has_angular_vel_cov()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *angular_vel_cov_);
    }

    // optional .robosense.localization.Proto_msg.Vector1d linear_vel = 14;
    if (has_linear_vel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *linear_vel_);
    }

    // optional .robosense.localization.Proto_msg.Vector1d linear_vel_cov = 15;
    if (has_linear_vel_cov()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *linear_vel_cov_);
    }

    // optional .robosense.localization.Proto_msg.Vector1d acc = 16;
    if (has_acc()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *acc_);
    }

    // optional .robosense.localization.Proto_msg.Vector1d acc_cov = 17;
    if (has_acc_cov()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *acc_cov_);
    }

    // optional double timestamp = 1;
    if (has_timestamp()) {
      total_size += 1 + 8;
    }

    // optional uint32 seq = 2;
    if (has_seq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->seq());
    }

  }
  // optional uint32 status = 5;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleStateMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.localization.Proto_msg.VehicleStateMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleStateMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleStateMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.localization.Proto_msg.VehicleStateMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.localization.Proto_msg.VehicleStateMsg)
    MergeFrom(*source);
  }
}

void VehicleStateMsg::MergeFrom(const VehicleStateMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.localization.Proto_msg.VehicleStateMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_frame_id();
      frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_parent_frame_id();
      parent_frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_frame_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_origin()->::robosense::localization::Proto_msg::Vector1d::MergeFrom(from.origin());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_fix()->::robosense::localization::Proto_msg::Vector1d::MergeFrom(from.fix());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_pos()->::robosense::localization::Proto_msg::Vector1d::MergeFrom(from.pos());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_pos_cov()->::robosense::localization::Proto_msg::Vector1d::MergeFrom(from.pos_cov());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_orien()->::robosense::localization::Proto_msg::Vector1d::MergeFrom(from.orien());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_orien_cov()->::robosense::localization::Proto_msg::Vector1d::MergeFrom(from.orien_cov());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_angular_vel()->::robosense::localization::Proto_msg::Vector1d::MergeFrom(from.angular_vel());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_angular_vel_cov()->::robosense::localization::Proto_msg::Vector1d::MergeFrom(from.angular_vel_cov());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_linear_vel()->::robosense::localization::Proto_msg::Vector1d::MergeFrom(from.linear_vel());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_linear_vel_cov()->::robosense::localization::Proto_msg::Vector1d::MergeFrom(from.linear_vel_cov());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_acc()->::robosense::localization::Proto_msg::Vector1d::MergeFrom(from.acc());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_acc_cov()->::robosense::localization::Proto_msg::Vector1d::MergeFrom(from.acc_cov());
    }
    if (cached_has_bits & 0x00004000u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00008000u) {
      seq_ = from.seq_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00010000u) {
    set_status(from.status());
  }
}

void VehicleStateMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.localization.Proto_msg.VehicleStateMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleStateMsg::CopyFrom(const VehicleStateMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.localization.Proto_msg.VehicleStateMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleStateMsg::IsInitialized() const {
  return true;
}

void VehicleStateMsg::Swap(VehicleStateMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleStateMsg::InternalSwap(VehicleStateMsg* other) {
  using std::swap;
  frame_id_.Swap(&other->frame_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_frame_id_.Swap(&other->parent_frame_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(origin_, other->origin_);
  swap(fix_, other->fix_);
  swap(pos_, other->pos_);
  swap(pos_cov_, other->pos_cov_);
  swap(orien_, other->orien_);
  swap(orien_cov_, other->orien_cov_);
  swap(angular_vel_, other->angular_vel_);
  swap(angular_vel_cov_, other->angular_vel_cov_);
  swap(linear_vel_, other->linear_vel_);
  swap(linear_vel_cov_, other->linear_vel_cov_);
  swap(acc_, other->acc_);
  swap(acc_cov_, other->acc_cov_);
  swap(timestamp_, other->timestamp_);
  swap(seq_, other->seq_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleStateMsg::GetMetadata() const {
  protobuf_Proto_5fmsg_2eLoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2eLoc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgHeader::kMsgTimestampsFieldNumber;
const int MsgHeader::kMsgVersionFieldNumber;
const int MsgHeader::kMsgTypeFieldNumber;
const int MsgHeader::kDeviceIdFieldNumber;
const int MsgHeader::kMsgFrameIdFieldNumber;
const int MsgHeader::kMsgTotalCntFieldNumber;
const int MsgHeader::kMsgLocalCntFieldNumber;
const int MsgHeader::kMsgLocalLenFieldNumber;
const int MsgHeader::kMsgIndexFieldNumber;
const int MsgHeader::kMsgTotalFragmentFieldNumber;
const int MsgHeader::kMsgFragmentIndexFieldNumber;
const int MsgHeader::kMsgRes0FieldNumber;
const int MsgHeader::kMsgCheck16FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgHeader::MsgHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Proto_5fmsg_2eLoc_2eproto::scc_info_MsgHeader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:robosense.localization.Proto_msg.MsgHeader)
}
MsgHeader::MsgHeader(const MsgHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&msgtimestamps_, &from.msgtimestamps_,
    static_cast<size_t>(reinterpret_cast<char*>(&msgcheck16_) -
    reinterpret_cast<char*>(&msgtimestamps_)) + sizeof(msgcheck16_));
  // @@protoc_insertion_point(copy_constructor:robosense.localization.Proto_msg.MsgHeader)
}

void MsgHeader::SharedCtor() {
  ::memset(&msgtimestamps_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgcheck16_) -
      reinterpret_cast<char*>(&msgtimestamps_)) + sizeof(msgcheck16_));
}

MsgHeader::~MsgHeader() {
  // @@protoc_insertion_point(destructor:robosense.localization.Proto_msg.MsgHeader)
  SharedDtor();
}

void MsgHeader::SharedDtor() {
}

void MsgHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgHeader::descriptor() {
  ::protobuf_Proto_5fmsg_2eLoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2eLoc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgHeader& MsgHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Proto_5fmsg_2eLoc_2eproto::scc_info_MsgHeader.base);
  return *internal_default_instance();
}


void MsgHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:robosense.localization.Proto_msg.MsgHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&msgtimestamps_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&msglocallen_) -
        reinterpret_cast<char*>(&msgtimestamps_)) + sizeof(msglocallen_));
  }
  if (cached_has_bits & 7936u) {
    ::memset(&msgindex_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&msgcheck16_) -
        reinterpret_cast<char*>(&msgindex_)) + sizeof(msgcheck16_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MsgHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:robosense.localization.Proto_msg.MsgHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double msgTimestamps = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_msgtimestamps();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &msgtimestamps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgVersion = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_msgversion();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_msgtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 deviceId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_deviceid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &deviceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgFrameId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_msgframeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgframeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgTotalCnt = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_msgtotalcnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtotalcnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgLocalCnt = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_msglocalcnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msglocalcnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgLocalLen = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_msglocallen();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msglocallen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgIndex = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_msgindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgTotalFragment = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_msgtotalfragment();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtotalfragment_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgFragmentIndex = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_msgfragmentindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgfragmentindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgRes0 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_msgres0();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgres0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgCheck16 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_msgcheck16();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgcheck16_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:robosense.localization.Proto_msg.MsgHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:robosense.localization.Proto_msg.MsgHeader)
  return false;
#undef DO_
}

void MsgHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:robosense.localization.Proto_msg.MsgHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double msgTimestamps = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->msgtimestamps(), output);
  }

  // optional uint32 msgVersion = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msgversion(), output);
  }

  // optional uint32 msgType = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->msgtype(), output);
  }

  // optional uint32 deviceId = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->deviceid(), output);
  }

  // optional uint32 msgFrameId = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->msgframeid(), output);
  }

  // optional uint32 msgTotalCnt = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->msgtotalcnt(), output);
  }

  // optional uint32 msgLocalCnt = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->msglocalcnt(), output);
  }

  // optional uint32 msgLocalLen = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->msglocallen(), output);
  }

  // optional uint32 msgIndex = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->msgindex(), output);
  }

  // optional uint32 msgTotalFragment = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->msgtotalfragment(), output);
  }

  // optional uint32 msgFragmentIndex = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->msgfragmentindex(), output);
  }

  // optional uint32 msgRes0 = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->msgres0(), output);
  }

  // optional uint32 msgCheck16 = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->msgcheck16(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:robosense.localization.Proto_msg.MsgHeader)
}

::google::protobuf::uint8* MsgHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:robosense.localization.Proto_msg.MsgHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double msgTimestamps = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->msgtimestamps(), target);
  }

  // optional uint32 msgVersion = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msgversion(), target);
  }

  // optional uint32 msgType = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->msgtype(), target);
  }

  // optional uint32 deviceId = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->deviceid(), target);
  }

  // optional uint32 msgFrameId = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->msgframeid(), target);
  }

  // optional uint32 msgTotalCnt = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->msgtotalcnt(), target);
  }

  // optional uint32 msgLocalCnt = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->msglocalcnt(), target);
  }

  // optional uint32 msgLocalLen = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->msglocallen(), target);
  }

  // optional uint32 msgIndex = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->msgindex(), target);
  }

  // optional uint32 msgTotalFragment = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->msgtotalfragment(), target);
  }

  // optional uint32 msgFragmentIndex = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->msgfragmentindex(), target);
  }

  // optional uint32 msgRes0 = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->msgres0(), target);
  }

  // optional uint32 msgCheck16 = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->msgcheck16(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robosense.localization.Proto_msg.MsgHeader)
  return target;
}

size_t MsgHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robosense.localization.Proto_msg.MsgHeader)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional double msgTimestamps = 1;
    if (has_msgtimestamps()) {
      total_size += 1 + 8;
    }

    // optional uint32 msgVersion = 2;
    if (has_msgversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgversion());
    }

    // optional uint32 msgType = 3;
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgtype());
    }

    // optional uint32 deviceId = 4;
    if (has_deviceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->deviceid());
    }

    // optional uint32 msgFrameId = 5;
    if (has_msgframeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgframeid());
    }

    // optional uint32 msgTotalCnt = 6;
    if (has_msgtotalcnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgtotalcnt());
    }

    // optional uint32 msgLocalCnt = 7;
    if (has_msglocalcnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msglocalcnt());
    }

    // optional uint32 msgLocalLen = 8;
    if (has_msglocallen()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msglocallen());
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional uint32 msgIndex = 9;
    if (has_msgindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgindex());
    }

    // optional uint32 msgTotalFragment = 10;
    if (has_msgtotalfragment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgtotalfragment());
    }

    // optional uint32 msgFragmentIndex = 11;
    if (has_msgfragmentindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgfragmentindex());
    }

    // optional uint32 msgRes0 = 12;
    if (has_msgres0()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgres0());
    }

    // optional uint32 msgCheck16 = 13;
    if (has_msgcheck16()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgcheck16());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robosense.localization.Proto_msg.MsgHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robosense.localization.Proto_msg.MsgHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robosense.localization.Proto_msg.MsgHeader)
    MergeFrom(*source);
  }
}

void MsgHeader::MergeFrom(const MsgHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robosense.localization.Proto_msg.MsgHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      msgtimestamps_ = from.msgtimestamps_;
    }
    if (cached_has_bits & 0x00000002u) {
      msgversion_ = from.msgversion_;
    }
    if (cached_has_bits & 0x00000004u) {
      msgtype_ = from.msgtype_;
    }
    if (cached_has_bits & 0x00000008u) {
      deviceid_ = from.deviceid_;
    }
    if (cached_has_bits & 0x00000010u) {
      msgframeid_ = from.msgframeid_;
    }
    if (cached_has_bits & 0x00000020u) {
      msgtotalcnt_ = from.msgtotalcnt_;
    }
    if (cached_has_bits & 0x00000040u) {
      msglocalcnt_ = from.msglocalcnt_;
    }
    if (cached_has_bits & 0x00000080u) {
      msglocallen_ = from.msglocallen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      msgindex_ = from.msgindex_;
    }
    if (cached_has_bits & 0x00000200u) {
      msgtotalfragment_ = from.msgtotalfragment_;
    }
    if (cached_has_bits & 0x00000400u) {
      msgfragmentindex_ = from.msgfragmentindex_;
    }
    if (cached_has_bits & 0x00000800u) {
      msgres0_ = from.msgres0_;
    }
    if (cached_has_bits & 0x00001000u) {
      msgcheck16_ = from.msgcheck16_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MsgHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robosense.localization.Proto_msg.MsgHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHeader::CopyFrom(const MsgHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robosense.localization.Proto_msg.MsgHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHeader::IsInitialized() const {
  return true;
}

void MsgHeader::Swap(MsgHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgHeader::InternalSwap(MsgHeader* other) {
  using std::swap;
  swap(msgtimestamps_, other->msgtimestamps_);
  swap(msgversion_, other->msgversion_);
  swap(msgtype_, other->msgtype_);
  swap(deviceid_, other->deviceid_);
  swap(msgframeid_, other->msgframeid_);
  swap(msgtotalcnt_, other->msgtotalcnt_);
  swap(msglocalcnt_, other->msglocalcnt_);
  swap(msglocallen_, other->msglocallen_);
  swap(msgindex_, other->msgindex_);
  swap(msgtotalfragment_, other->msgtotalfragment_);
  swap(msgfragmentindex_, other->msgfragmentindex_);
  swap(msgres0_, other->msgres0_);
  swap(msgcheck16_, other->msgcheck16_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgHeader::GetMetadata() const {
  protobuf_Proto_5fmsg_2eLoc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Proto_5fmsg_2eLoc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Proto_msg
}  // namespace localization
}  // namespace robosense
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::localization::Proto_msg::Vector1d* Arena::CreateMaybeMessage< ::robosense::localization::Proto_msg::Vector1d >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::localization::Proto_msg::Vector1d >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::localization::Proto_msg::PointXYZIT* Arena::CreateMaybeMessage< ::robosense::localization::Proto_msg::PointXYZIT >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::localization::Proto_msg::PointXYZIT >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::localization::Proto_msg::Status* Arena::CreateMaybeMessage< ::robosense::localization::Proto_msg::Status >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::localization::Proto_msg::Status >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::localization::Proto_msg::ProcessLidar* Arena::CreateMaybeMessage< ::robosense::localization::Proto_msg::ProcessLidar >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::localization::Proto_msg::ProcessLidar >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::localization::Proto_msg::VehicleStateMsg* Arena::CreateMaybeMessage< ::robosense::localization::Proto_msg::VehicleStateMsg >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::localization::Proto_msg::VehicleStateMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::robosense::localization::Proto_msg::MsgHeader* Arena::CreateMaybeMessage< ::robosense::localization::Proto_msg::MsgHeader >(Arena* arena) {
  return Arena::CreateInternal< ::robosense::localization::Proto_msg::MsgHeader >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
