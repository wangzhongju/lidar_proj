#* General *#
general:
  application: "V2r" #V2r,Pseries,SmartSensor
  log_level: "info" #error,warning,info,debug,trace
  log: true #true,false for logging file save in /tmp/rs_sdk.log
  # log_path: /home/sti/log    # if use custom log, it must exist!!!!!
  run_perception: true    #flag to control using perception algorithm or not
  run_localization: false
  run_communication: true
  run_rviz_display: true

#* Preprocessing *#
preprocessing:
  common:
    lidar_fusion: false
  result_sender:
    - method: Ros
      send_fusion_lidar: false
      fusion_lidar_topic: /fusion_lidar_points

#* Perception *#
perception:
  general:
    model: system_config/perception_config/model
    hardkey:
      is_enabled: false
    # authorization:
    #   root: "j"
    #   key: "/home/sti/RobosensePerceptionKeyFile.key"
  lidar:
    common:
      data_fusion: true  # true: pre fusion algorithm.
    sub:
      - ai_detection:
          strategy: "PolarisAiDetection"
          PolarisAiDetection:
            use_cuda_acc: true
            bbox_mode: "reg_box" #"tight","reg_ang","reg_box"
            detect_range:
              xmin: -50.
              xmax: 50.
              ymin: -50
              ymax: 50
              zmin: -3.
              zmax: 3.5
  save_result: #DEFAULT
    enable: false #DEFAULT
    save_percept_result: true #DEFAULT
    save_pcd: true #DEFAULT
    save_dir: "/media/sti/1TB-HDD/Tmp/save" #DEFAULT


#* Localization *#
localization:
  common:
    localization_mode: 0 #0: use gps 2: ust GPS coordinate 4: use xyz coordinate
    use_fusion_cloud: true # true: use fusion cloud to do localization
    grid_map: localization_map.gridmap
    rsmap: localization_map.rsmap

  result_sender:
    - method: Ros
      localization_freq_: 30
      send_pos_ros: true                            #@type: bool @detail: if true, the localization algorithm result will be sent through ROS
      send_pos_ros_topic: /rs_pose
      send_fix_ros_topic: /rs_fix
      send_map_ros: true
      send_map_ros_topic: /rs_map
      send_path_ros: true
      send_path_ros_topic: /rs_path

#    - method: Proto
#      localization_freq_: 30
#      send_pos_and_path: true
#      socket:
#        socket_address: 10.10.8.239   # 对于发送端为远端的IP, 对于接收端建议配置为0.0.0.0
#        socket_port: 60082            # 对于发送端为远端的端口, 对于接收端为监听的端口
#        socket_buffer_size: 4194304   # 默认即可
#        max_msg_size: 32768           # 不允许大于63KByte,默认为32KByte
#        timeout_ms: 150               # 接收超时，默认150ms
#        send_control:
#          send_control_enable: true          # 如果发送点云时，该选项建议开启
#          send_control_thres: 262144         # 默认为256KB
#          send_control_ms: 3                 # 默认为2ms,建议 <= 4
#          send_control_compress_enable: true # 如果发送点云时，该选项建议开启


#* LiDAR & Sensors *#
sensor:
  lidar:
    common:
      msg_source: 3
                                # 0--not use Lidar
                                # 1--lidar packet message come from sensor driver (when online testing)
                                # 2--lidar packet message come from ROS
                                # 3--lidar points message come from ROS
      send_packets_ros: false    #if true, the original lidar packets message will be sent out through ROS
      send_points_ros: false     #if true, the original lidar points message will be sent out through ROS

    lidar:
      - driver:
          include: /system_config/sensor_config/lidar/middle_lidar/lidar.yaml
        ros:
          ros_recv_points_topic: /33/rslidar_points  # if message source=3, this should be set to the topic of the points
          ros_recv_packets_topic: /33/rslidar_packets # if message source=2, this should be set to the topic of packets
          ros_send_points_topic: /33/rslidar_points  # the Ros topic to send points
          ros_send_packets_topic: /33/rslidar_packets # the Ros topic to send packets

#      - driver:
#          include: /system_config/sensor_config/lidar/mems_left/lidar.yaml
#        ros:
#          ros_recv_points_topic: /mems_left/rslidar_points  # if message source=3, this should be set to the topic of the points
#          ros_recv_packets_topic: /mems_left/rslidar_packets # if message source=2, this should be set to the topic of packets
#          ros_send_points_topic: /mems_left/rslidar_points  # the Ros topic to send points
#          ros_send_packets_topic: /mems_left/rslidar_packets # the Ros topic to send packets
#      - driver:
#          include: /system_config/sensor_config/lidar/mems_right/lidar.yaml
#        ros:
#          ros_recv_points_topic: /mems_right/rslidar_points  # if message source=3, this should be set to the topic of the points
#          ros_recv_packets_topic: /mems_right/rslidar_packets # if message source=2, this should be set to the topic of packets
#          ros_send_points_topic: /mems_right/rslidar_points  # the Ros topic to send points
#          ros_send_packets_topic: /mems_right/rslidar_packets # the Ros topic to send packets
#      - driver:
#          include: /system_config/sensor_config/lidar/mems_back/lidar.yaml
#        ros:
#          ros_recv_points_topic: /mems_back/rslidar_points  # if message source=3, this should be set to the topic of the points
#          ros_recv_packets_topic: /mems_back/rslidar_packets # if message source=2, this should be set to the topic of packets
#          ros_send_points_topic: /mems_back/rslidar_points  # the Ros topic to send points
#          ros_send_packets_topic: /mems_back/rslidar_packets # the Ros topic to send packets
#  can:
#    msg_source: Ros # Online or Ros
#    send_ros_msg: false
#    ros_recv_topic: /can_data
#    ros_send_topic: /can_data
#    tag: Lxone # Lxone
#    kvaser_channel: 0

  external_pose:
    msg_source: Standard  # Sq, Standard
    ros_recv_topic: /shineauto_pose # /odo_pos320_lane/fused_gps, /shineauto_pose
